{"ast":null,"code":"/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\nimport { __awaiter, __extends, __generator } from \"tslib\";\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\nimport { ExportMenu } from \"./ExportMenu\";\nimport { Adapter } from \"../utils/Adapter\";\nimport { Sprite } from \"../Sprite\";\nimport { Modal } from \"../elements/Modal\";\nimport { List } from \"../utils/List\";\nimport { Dictionary } from \"../utils/Dictionary\";\nimport { DateFormatter } from \"../formatters/DateFormatter\";\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\nimport { Language } from \"../utils/Language\";\nimport { Validatable } from \"../utils/Validatable\";\nimport { color } from \"../utils/Color\";\nimport { registry } from \"../Registry\";\nimport { options } from \"../Options\";\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\nimport * as $browser from \"../utils/Browser\";\nimport * as $object from \"../utils/Object\";\nimport * as $net from \"../utils/Net\";\nimport * as $dom from \"../utils/DOM\";\nimport * as $type from \"../utils/Type\";\nimport * as $log from \"../utils/Log\";\nimport * as $utils from \"../utils/Utils\";\nimport * as $array from \"../utils/Array\";\nimport * as $math from \"../utils/Math\";\nimport * as $strings from \"../utils/Strings\";\n// This is used to cache the pdfmake loading\nvar pdfmakePromise;\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\nfunction _pdfmake() {\n  return __awaiter(this, void 0, void 0, function () {\n    var a, pdfmake, vfs_fonts, global;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          return [4 /*yield*/, Promise.all([import( /* webpackChunkName: \"pdfmake\" */\"pdfmake/build/pdfmake.js\"), import( /* webpackChunkName: \"pdfmake\" */\"../../pdfmake/vfs_fonts\")])];\n        case 1:\n          a = _a.sent();\n          pdfmake = a[0];\n          vfs_fonts = a[1];\n          global = window;\n          global.pdfMake = global.pdfMake || {};\n          global.pdfMake.vfs = vfs_fonts.default;\n          pdfmake.vfs = vfs_fonts.default;\n          return [2 /*return*/, pdfmake];\n      }\n    });\n  });\n}\n// TODO better parsing\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\n// TODO better checks\nfunction supportsBlobUri() {\n  return window.navigator.msSaveOrOpenBlob != null;\n}\n// TODO move into utils or something ?\nfunction blobToDataUri(blob) {\n  return new Promise(function (resolve, reject) {\n    // TODO handle abort ?\n    var f = new FileReader();\n    f.onload = function (e) {\n      resolve(f.result);\n    };\n    f.onerror = function (e) {\n      reject(e);\n    };\n    f.readAsDataURL(blob);\n  });\n}\nfunction getCssRules(s) {\n  return __awaiter(this, void 0, void 0, function () {\n    var sheet, e_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          sheet = s.sheet;\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1, 2,, 4]);\n          return [2 /*return*/, sheet.cssRules];\n        case 2:\n          e_1 = _a.sent();\n          return [4 /*yield*/, new Promise(function (success, error) {\n            s.addEventListener(\"load\", function () {\n              success(sheet.cssRules);\n            }, true);\n            s.addEventListener(\"error\", function (e) {\n              error(e);\n            }, true);\n            setTimeout(function () {\n              error(new Error(\"Timeout while waiting for <style> to load\"));\n            }, 10000);\n          })];\n        case 3:\n          // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\n          return [2 /*return*/, _a.sent()];\n        case 4:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This loads a stylesheet by URL and then calls the function with it\n// TODO this should be moved into utils or something\nfunction loadStylesheet(doc, url, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var response, e_2, s, rules;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, $net.load(url)];\n        case 1:\n          response = _a.sent();\n          return [3 /*break*/, 3];\n        case 2:\n          e_2 = _a.sent();\n          console.error(\"Failed to load stylesheet\", url, e_2);\n          return [2 /*return*/];\n        case 3:\n          s = doc.createElement(\"style\");\n          s.textContent = response.response;\n          if (options.nonce != \"\") {\n            s.setAttribute(\"nonce\", options.nonce);\n          }\n          doc.head.appendChild(s);\n          _a.label = 4;\n        case 4:\n          _a.trys.push([4,, 7, 8]);\n          return [4 /*yield*/, getCssRules(s)];\n        case 5:\n          rules = _a.sent();\n          return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\n        case 6:\n          _a.sent();\n          return [3 /*break*/, 8];\n        case 7:\n          doc.head.removeChild(s);\n          return [7 /*endfinally*/];\n        case 8:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\nfunction eachStylesheet(doc, topUrl, rules, f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var promises, length, i, rule, url;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          promises = [];\n          length = rules.length;\n          for (i = 0; i < length; i++) {\n            rule = rules[i];\n            if (rule.type === CSSRule.IMPORT_RULE) {\n              url = rule.href;\n              if (url) {\n                url = $utils.joinUrl(topUrl, url);\n                promises.push(loadStylesheet(doc, url, f));\n              }\n            } else {\n              f(topUrl, rule);\n            }\n          }\n          if (!promises.length) return [3 /*break*/, 2];\n          return [4 /*yield*/, Promise.all(promises)];\n        case 1:\n          _a.sent();\n          _a.label = 2;\n        case 2:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n// This calls a function for each CSSRule for all of the stylesheets in the page.\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\n// TODO this should be moved into utils or something\nfunction eachStylesheets(f) {\n  return __awaiter(this, void 0, void 0, function () {\n    var iframe, doc_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          iframe = document.createElement(\"iframe\");\n          // This causes it to use the same origin policy as the parent page\n          iframe.src = \"about:blank\";\n          // This tries to make it more accessible for screen readers\n          iframe.setAttribute(\"title\", \"\");\n          document.head.appendChild(iframe);\n          _a.label = 1;\n        case 1:\n          _a.trys.push([1,, 3, 4]);\n          doc_1 = iframe.contentDocument;\n          // TODO use $dom.getRoot instead of document ?\n          return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\n            var url = sheet.href;\n            if (url == null) {\n              return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\n            } else {\n              url = $utils.joinUrl(location.href, url);\n              return loadStylesheet(doc_1, url, f);\n            }\n          }))];\n        case 2:\n          // TODO use $dom.getRoot instead of document ?\n          _a.sent();\n          return [3 /*break*/, 4];\n        case 3:\n          document.head.removeChild(iframe);\n          return [7 /*endfinally*/];\n        case 4:\n          return [2 /*return*/];\n      }\n    });\n  });\n}\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\nvar Export = /** @class */function (_super) {\n  __extends(Export, _super);\n  /**\r\n   * Constructor\r\n   */\n  function Export(container) {\n    var _this = _super.call(this) || this;\n    /**\r\n     * Adapter.\r\n     */\n    _this.adapter = new Adapter(_this);\n    /**\r\n     * Holds options for each format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._formatOptions = new Dictionary();\n    /**\r\n     * Extra [[Sprite]] elements to include in exports.\r\n     */\n    _this._extraSprites = [];\n    /**\r\n     * A list of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     */\n    _this._validateSprites = [];\n    /**\r\n     * Holds an array of data field names. If set, exported data fields will try\r\n     * to maintain this order.\r\n     *\r\n     * If not set (default), the export will try to maintain the same order as\r\n     * in source data, or as in `dataFields` (if set).\r\n     *\r\n     * @since 4.9.7\r\n     */\n    _this.dataFieldsOrder = [];\n    /**\r\n     * Indicates whether data fields were generated dynamically (`true`) or\r\n     * if they were pre-set by the user (`false`).\r\n     */\n    _this._dynamicDataFields = true;\n    /**\r\n     * Holds a list of objects that were temporarily removed from the DOM while\r\n     * exporting. Those most probably are tainted images, or foreign objects that\r\n     * would otherwise prevent SVG to be converted to canvas.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._removedObjects = new List();\n    /**\r\n     * Holds references to the objects that were temporarily hidden when export\r\n     * started, so that we can reveal them back when export ends.\r\n     */\n    _this._hiddenObjects = [];\n    /**\r\n     * Indicates if non-exportable objects are now hidden;\r\n     */\n    _this._objectsAlreadyHidden = false;\n    /**\r\n     * Exported files will be prefixed with whatever it is set here.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\n    _this._filePrefix = \"amCharts\";\n    /**\r\n     * If you are using web fonts (such as Google Fonts), your chart might be\r\n     * using them as well.\r\n     *\r\n     * Normally, exporting to image will require to download these fonts so the\r\n     * are carried over to exported image.\r\n     *\r\n     * This setting can be used to disable or enable this functionality.\r\n     *\r\n     * @default true\r\n     */\n    _this.useWebFonts = true;\n    /**\r\n     * Many modern displays have use more actual pixels per displayed pixel. This\r\n     * results in sharper images on screen. Unfortunately, when exported to a\r\n     * bitmap image of the sam width/height size it will lose those extra pixels,\r\n     * resulting in somewhat blurry image.\r\n     *\r\n     * This is why we are going to export images larger than they are, so that we\r\n     * don't lose any details.\r\n     *\r\n     * If you'd rather export images without change in size, set this to `false`.\r\n     *\r\n     * @default true\r\n     */\n    _this.useRetina = true;\n    /**\r\n     * By default Export will try to use built-in method for transforming chart\r\n     * into an image for download, then fallback to external library (canvg) for\r\n     * conversion if failed.\r\n     *\r\n     * Setting this to `false` will force use of external library for all export\r\n     * operations.\r\n     *\r\n     * It might be useful to turn off simplified export if you are using strict\r\n     * content security policies, that disallow images with blobs as their\r\n     * source.\r\n     *\r\n     * @default true\r\n     * @since 4.2.5\r\n     */\n    _this.useSimplifiedExport = true;\n    /**\r\n     * If export operation takes longer than milliseconds in this second, we will\r\n     * show a modal saying export operation took longer than expected.\r\n     */\n    _this.timeoutDelay = 2000;\n    _this._exportRunning = false;\n    /**\r\n     * Indicator used by [[Component]].\r\n     *\r\n     * @ignore\r\n     */\n    _this._prevHasData = false;\n    _this._container = container;\n    _this.className = \"Export\";\n    // Set default options\n    _this._formatOptions.setKey(\"png\", {});\n    _this._formatOptions.setKey(\"jpg\", {\n      quality: 0.8\n    });\n    _this._formatOptions.setKey(\"gif\", {});\n    _this._formatOptions.setKey(\"svg\", {});\n    _this._formatOptions.setKey(\"pdf\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      align: \"left\",\n      addURL: true,\n      addColumnNames: true\n    });\n    _this._formatOptions.setKey(\"json\", {\n      indent: 2,\n      useLocale: true\n    });\n    _this._formatOptions.setKey(\"csv\", {\n      addColumnNames: true,\n      emptyAs: \"\",\n      addBOM: true\n    });\n    _this._formatOptions.setKey(\"xlsx\", {\n      addColumnNames: true,\n      useLocale: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"html\", {\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"pdfdata\", {\n      fontSize: 14,\n      imageFormat: \"png\",\n      addURL: true,\n      addColumnNames: true,\n      emptyAs: \"\"\n    });\n    _this._formatOptions.setKey(\"print\", {\n      delay: 500,\n      printMethod: \"iframe\"\n    });\n    // Add options adapter\n    _this.adapter.add(\"options\", function (arg) {\n      var formatOptions = _this._formatOptions.getKey(arg.type);\n      if (arg.options) {\n        arg.options = $object.merge(formatOptions, arg.options);\n      } else {\n        arg.options = formatOptions;\n      }\n      return arg;\n    });\n    _this.applyTheme();\n    _this.dispatchImmediately(\"inited\");\n    return _this;\n  }\n  Object.defineProperty(Export.prototype, \"menu\", {\n    /**\r\n     * @return ExportMenu instance\r\n     */\n    get: function () {\n      return this._menu;\n    },\n    /**\r\n     * An instance of [[ExportMenu]].\r\n     *\r\n     * To add an export menu to a chart, set this to a new instance of\r\n     * [[ExportMenu]].\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.menu = new am4core.ExportMenu();\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     \"menu\": {}\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @param menu  ExportMenu instance\r\n     */\n    set: function (menu) {\n      var _this = this;\n      if (this._menu) {\n        this.removeDispose(this._menu);\n      }\n      this._menu = menu;\n      // Set container and language\n      this._menu.container = this.container;\n      this._menu.language = this._language;\n      // Add adapter to check for browser support\n      this._menu.adapter.add(\"branch\", function (arg) {\n        arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\n        return arg;\n      });\n      // Add click events\n      this._menu.events.on(\"hit\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n        _this.menu.close();\n      });\n      this._menu.events.on(\"enter\", function (ev) {\n        _this.export(ev.branch.type, ev.branch.options);\n        _this.menu.close();\n      });\n      this._menu.events.on(\"over\", function (ev) {\n        _this._disablePointers();\n      });\n      this._menu.events.on(\"out\", function (ev) {\n        setTimeout(function () {\n          _this._releasePointers();\n        }, 10);\n      });\n      // Dispatch event\n      this.dispatchImmediately(\"menucreated\");\n      // Prefix with Sprite's class name\n      this._menu.adapter.add(\"classPrefix\", function (obj) {\n        obj.classPrefix = options.classNamePrefix + obj.classPrefix;\n        return obj;\n      });\n      // Add menu to disposers so that it's destroyed when Export is disposed\n      this._disposers.push(this._menu);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Checks if this specific menu item type is supported by current system.\r\n   *\r\n   * @param type  Menu item type\r\n   * @return `false` if not supported\r\n   */\n  Export.prototype.typeSupported = function (type) {\n    var supported = true;\n    var options = this.getFormatOptions(type);\n    if ($type.hasValue(options) && options.disabled) {\n      supported = false;\n    } else if (type === \"pdf\") {\n      //supported = this.downloadSupport();\n    } else if (type === \"xlsx\") {\n      //supported = (this.downloadSupport() && this._hasData()) ? true : false;\n      supported = this._hasData() ? true : false;\n    } else if (type == \"print\" && !window.print) {\n      supported = false;\n    } else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\n      supported = false;\n    }\n    return this.adapter.apply(\"supported\", {\n      supported: supported,\n      type: type\n    }).supported;\n  };\n  /**\r\n   * Checks if data is available.\r\n   *\r\n   * @return Has data?\r\n   */\n  Export.prototype._hasData = function () {\n    return this.data && this.data.length;\n  };\n  /**\r\n   * Get function to handle export for particular format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype._getFunction = function (type) {\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n      case \"jpg\":\n        return this.getImage;\n      case \"svg\":\n        return this.getSVG;\n      case \"pdf\":\n      case \"pdfdata\":\n        return this.getPDF;\n      case \"xlsx\":\n        return this.getExcel;\n      case \"csv\":\n        return this.getCSV;\n      case \"json\":\n        return this.getJSON;\n      case \"html\":\n        return this.getHTML;\n      case \"print\":\n        return this.getPrint;\n      default:\n        return this.unsupported;\n    }\n  };\n  /**\r\n   * Initiates export procedure.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return `true` if export was successful\r\n   * @async\r\n   */\n  Export.prototype.export = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var event_1, func, data, event_2, event_3;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Check if it's a custom item, and do nothing or execute custom callback\n            if (type == \"custom\") {\n              this.handleCustom(options);\n              return [2 /*return*/, true];\n            }\n            // Set export running flag\n            this._exportRunning = true;\n            // Dispatch event\n            if (this.events.isEnabled(\"exportstarted\")) {\n              event_1 = {\n                \"type\": \"exportstarted\",\n                \"target\": this,\n                \"format\": type,\n                \"options\": options\n              };\n              this.events.dispatchImmediately(\"exportstarted\", event_1);\n            }\n            // Schedule a preloader\n            this.showPreloader();\n            // Schedule a timeout\n            if (this.timeoutDelay) {\n              this.hideTimeout();\n              this._timeoutTimeout = this.setTimeout(function () {\n                // Dispatch event\n                if (_this.events.isEnabled(\"exporttimedout\")) {\n                  var event_4 = {\n                    \"type\": \"exporttimedout\",\n                    \"target\": _this,\n                    \"format\": type,\n                    \"options\": options\n                  };\n                  _this.events.dispatchImmediately(\"exporttimedout\", event_4);\n                }\n                // Show modal\n                _this.showTimeout();\n              }, this.timeoutDelay);\n            }\n            // Hide items that should not be exported\n            this.hideNonExportableSprites();\n            func = this._getFunction(type);\n            // Give chance for plugins to override both function and options\n            options = this.adapter.apply(\"options\", {\n              options: options,\n              type: type\n            }).options;\n            func = this.adapter.apply(\"exportFunction\", {\n              func: func,\n              type: type,\n              options: options\n            }).func;\n            return [4 /*yield*/, func.call(this, type, options)];\n          case 1:\n            data = _a.sent();\n            // Release pointers\n            this._exportRunning = false;\n            this._releasePointers();\n            // Restore temporarily hidden elements\n            this.restoreNonExportableSprites();\n            if (data) {\n              // Dispatch event\n              if (this.events.isEnabled(\"exportfinished\")) {\n                event_2 = {\n                  \"type\": \"exportfinished\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"exportfinished\", event_2);\n              }\n              // Hide preloader and timeout modals\n              this.hidePreloader();\n              this.hideTimeout();\n              if (this.menu) {\n                this.menu.close();\n              }\n              // Download or print\n              if (type === \"print\") {\n                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\n                  title: this.title,\n                  options: options\n                }).title)];\n              } else {\n                if (type == \"pdfdata\") {\n                  return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\n                }\n                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type, options && options.addBOM)];\n              }\n            } else {\n              // Throw exception?\n              // @todo\n              // Dispatch event\n              if (this.events.isEnabled(\"error\")) {\n                event_3 = {\n                  \"type\": \"error\",\n                  \"target\": this,\n                  \"format\": type,\n                  \"options\": options\n                };\n                this.events.dispatchImmediately(\"error\", event_3);\n              }\n              return [2 /*return*/, false];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * A function that should handle unsupported export types.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.unsupported = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        // TODO should this return `undefined`?\n        return [2 /*return*/, \"\"];\n      });\n    });\n  };\n  /**\r\n   * Handles click on a \"custom\" menu item.\r\n   *\r\n   * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param options  Options\r\n   */\n  Export.prototype.handleCustom = function (options) {\n    if ($type.hasValue(options) && $type.hasValue(options.callback)) {\n      options.callback.call(options.callbackTarget || this, options);\n    }\n  };\n  /**\r\n   * Requests a Print of the chart.\r\n   *\r\n   * @param type     Export type\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getPrint = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        return [2 /*return*/, this.getImage(\"png\", options)];\n      });\n    });\n  };\n  /**\r\n   * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return String which can be embedded directly into a <style> element.\r\n   * @async\r\n   */\n  Export.prototype.getFontFamilies = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var DOMURL, blobs, promises, a;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            DOMURL = this.getDOMURL();\n            blobs = [];\n            promises = [];\n            return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\n              if (rule.type === CSSRule.FONT_FACE_RULE) {\n                var cssText_1 = rule.cssText;\n                // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\n                var src = fontFamilySrcRegexp.exec(cssText_1);\n                if (src !== null) {\n                  // TODO make this faster (don't create Promises for non-url stuff)\n                  var urls = src[1].split(/ *, */).map(function (url) {\n                    return __awaiter(_this, void 0, void 0, function () {\n                      var a, after, fullUrl, response, url_1, e_3;\n                      return __generator(this, function (_a) {\n                        switch (_a.label) {\n                          case 0:\n                            a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\n                            if (!(a === null)) return [3 /*break*/, 1];\n                            return [2 /*return*/, url];\n                          case 1:\n                            after = a[2];\n                            fullUrl = $utils.joinUrl(topUrl, a[1]);\n                            if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\n                              return [2 /*return*/, null];\n                            }\n                            _a.label = 2;\n                          case 2:\n                            _a.trys.push([2, 7,, 8]);\n                            return [4 /*yield*/, $net.load(fullUrl, undefined, {\n                              responseType: \"blob\"\n                            })];\n                          case 3:\n                            response = _a.sent();\n                            if (!supportsBlobUri()) return [3 /*break*/, 4];\n                            url_1 = DOMURL.createObjectURL(response.blob);\n                            blobs.push(url_1);\n                            return [3 /*break*/, 6];\n                          case 4:\n                            return [4 /*yield*/, blobToDataUri(response.blob)];\n                          case 5:\n                            url_1 = _a.sent();\n                            _a.label = 6;\n                          case 6:\n                            // TODO should it should escape the URI ?\n                            return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\n                          case 7:\n                            e_3 = _a.sent();\n                            console.error(\"Failed to load font\", fullUrl, e_3);\n                            return [2 /*return*/, null];\n                          case 8:\n                            return [2 /*return*/];\n                        }\n                      });\n                    });\n                  });\n\n                  promises.push(Promise.all(urls).then(function (a) {\n                    a = a.filter(function (x) {\n                      return x != null;\n                    });\n                    if (a.length === 0) {\n                      return \"\";\n                    } else {\n                      return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\n                    }\n                  }));\n                }\n              }\n            })];\n          case 1:\n            _a.sent();\n            return [4 /*yield*/, Promise.all(promises)];\n          case 2:\n            a = _a.sent();\n            return [2 /*return*/, {\n              blobs: blobs,\n              cssText: a.filter(function (x) {\n                return !!x;\n              }).join(\"\\n\")\n            }];\n        }\n      });\n    });\n  };\n  /**\r\n   * Produces image output from the element.\r\n   *\r\n   * Converts to a `Canvas` first, then produces an image to download.\r\n   *\r\n   * This is an asynchronous function. Rather than returning a result, it\r\n   * returns a Promise.\r\n   *\r\n   * You can use `await` notion from other async functions, or `then()`\r\n   * anywhere else.\r\n   *\r\n   * ```TypeScript\r\n   * let img;\r\n   *\r\n   * // Async\r\n   * img = await chart.exporting.getImage( \"png\" );\r\n   *\r\n   * // Sync\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   * ```JavaScript\r\n   * var img;\r\n   * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n   *   img = data;\r\n   * } );\r\n   * ```\r\n   *\r\n   * @param  type           Image format\r\n   * @param  options        Options\r\n   * @param  includeExtras  Should extra sprites be included if set?\r\n   * @return Promise\r\n   */\n  Export.prototype.getImage = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, newCanvas, uri, e_4, data, data;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n            // Wait for required elements to be ready before proceeding\n            return [4 /*yield*/, this.awaitValidSprites()];\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n            return [4 /*yield*/, this.simplifiedImageExport()];\n          case 2:\n            if (!_a.sent()) return [3 /*break*/, 10];\n            canvas = void 0;\n            _a.label = 3;\n          case 3:\n            _a.trys.push([3, 7,, 9]);\n            return [4 /*yield*/, this.getCanvas(options)];\n          case 4:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3 /*break*/, 6];\n            return [4 /*yield*/, this.addExtras(canvas, options)];\n          case 5:\n            newCanvas = _a.sent();\n            this.disposeCanvas(canvas);\n            canvas = newCanvas;\n            _a.label = 6;\n          case 6:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality);\n            // Get rid of the canvas\n            this.disposeCanvas(canvas);\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n          case 7:\n            e_4 = _a.sent();\n            console.error(e_4.message + \"\\n\" + e_4.stack);\n            $log.warn(\"Simple export failed, falling back to advanced export\");\n            if (canvas) {\n              this.disposeCanvas(canvas);\n            }\n            return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\n          case 8:\n            data = _a.sent();\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, data];\n          case 9:\n            return [3 /*break*/, 12];\n          case 10:\n            return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\n          case 11:\n            data = _a.sent();\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, data];\n          case 12:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Adds extra elements to the canvas.\r\n   *\r\n   * @param  canvas   Original canvas\r\n   * @param  options  Options\r\n   */\n  Export.prototype.addExtras = function (canvas, options, advanced) {\n    return __awaiter(this, void 0, void 0, function () {\n      var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!this.extraSprites.length) return [3 /*break*/, 2];\n            middleLeft_1 = 0;\n            middleTop_1 = 0;\n            middleWidth_1 = canvas.width;\n            middleHeight_1 = canvas.height;\n            extraRight_1 = 0;\n            extraBottom_1 = 0;\n            return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) {\n              return __awaiter(_this, void 0, void 0, function () {\n                var extra, extraCanvas, extraWidth, extraHeight;\n                return __generator(this, function (_a) {\n                  switch (_a.label) {\n                    case 0:\n                      if (extraSprite instanceof Sprite) {\n                        extra = {\n                          sprite: extraSprite,\n                          position: \"bottom\"\n                        };\n                      } else {\n                        extra = extraSprite;\n                      }\n                      // Set defaults\n                      extra.position = extra.position || \"bottom\";\n                      extra.marginTop = extra.marginTop || 0;\n                      extra.marginRight = extra.marginRight || 0;\n                      extra.marginBottom = extra.marginBottom || 0;\n                      extra.marginLeft = extra.marginLeft || 0;\n                      if (!advanced) return [3 /*break*/, 2];\n                      return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\n                    case 1:\n                      extraCanvas = _a.sent();\n                      return [3 /*break*/, 4];\n                    case 2:\n                      return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\n                    case 3:\n                      extraCanvas = _a.sent();\n                      _a.label = 4;\n                    case 4:\n                      extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\n                      extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\n                      if (extra.position == \"top\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        middleTop_1 += extraHeight;\n                      } else if (extra.position == \"right\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        extraRight_1 += extraWidth;\n                      } else if (extra.position == \"left\") {\n                        middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\n                        middleLeft_1 += extraWidth;\n                      } else if (extra.position === \"bottom\") {\n                        middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\n                        extraBottom_1 += extraHeight;\n                      }\n                      return [2 /*return*/, {\n                        canvas: extraCanvas,\n                        position: extra.position,\n                        left: extra.marginLeft,\n                        top: extra.marginTop,\n                        width: extraWidth,\n                        height: extraHeight\n                      }];\n                  }\n                });\n              });\n            }))];\n          case 1:\n            extras = _a.sent();\n            newCanvas = this.getDisposableCanvas();\n            newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\n            newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\n            ctx_1 = newCanvas.getContext(\"2d\");\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            if (background) {\n              ctx_1.fillStyle = background.toString();\n              ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\n            }\n            left_1 = middleLeft_1;\n            top_1 = middleTop_1;\n            right_1 = left_1 + middleWidth_1;\n            bottom_1 = top_1 + middleHeight_1;\n            // Radiates outwards from center\n            $array.each(extras, function (extra) {\n              if (extra.position == \"top\") {\n                top_1 -= extra.height;\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\n              } else if (extra.position == \"right\") {\n                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\n                right_1 += extra.width;\n              } else if (extra.position == \"left\") {\n                left_1 -= extra.width;\n                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\n              } else if (extra.position === \"bottom\") {\n                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\n                bottom_1 += extra.height;\n              }\n              _this.disposeCanvas(extra.canvas);\n            });\n            ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\n            return [2 /*return*/, newCanvas];\n          case 2:\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]].\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n  Export.prototype.getCanvas = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            DOMURL = this.getDOMURL();\n            url = null;\n            blobs = null;\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1,, 4, 5]);\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            // Create canvas and its 2D context\n            canvas = this.getDisposableCanvas();\n            // Set canvas width/height\n            canvas.style.width = width * scale + 'px';\n            canvas.style.height = height * scale + 'px';\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n            ctx = canvas.getContext(\"2d\");\n            // if (pixelRatio != 1) {\n            // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n            // }\n            // Add background if necessary\n            if (background) {\n              ctx.fillStyle = background.toString();\n              ctx.fillRect(0, 0, width * scale, height * scale);\n            }\n            promises = [];\n            if (this.useWebFonts) {\n              // TODO what if one of the other things errors before it's been able to set `blobs` ?\n              promises.push(this.getFontFamilies().then(function (fonts) {\n                blobs = fonts.blobs;\n                return fonts.cssText;\n              }));\n            }\n            promises.push(this.imagesToDataURI(this.sprite.dom, options));\n            promises.push(this.prepForeignObjects(this.sprite.dom, options));\n            return [4 /*yield*/, Promise.all(promises)];\n          case 2:\n            a = _a.sent();\n            data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            svg = new Blob([data], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            return [4 /*yield*/, this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\n          case 3:\n            img = _a.sent();\n            // Draw image on canvas\n            ctx.drawImage(img, 0, 0);\n            return [3 /*break*/, 5];\n          case 4:\n            if (url !== null) {\n              DOMURL.revokeObjectURL(url);\n            }\n            if (blobs !== null) {\n              $array.each(blobs, function (url) {\n                DOMURL.revokeObjectURL(url);\n              });\n            }\n            // Restore replaced tainted images in DOM\n            this.restoreRemovedObjects();\n            return [7 /*endfinally*/];\n          case 5:\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns canvas representation of the [[Sprite]] using canvg.\r\n   *\r\n   * @param   options  Options\r\n   * @return           Canvas\r\n   */\n  Export.prototype.getCanvasAdvanced = function (options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            // Options are set?\n            if (!$type.hasValue(options)) {\n              options = {};\n            }\n            // Convert external images to data uris\n            return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\n          case 1:\n            // Convert external images to data uris\n            _a.sent();\n            background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\n            return [4 /*yield*/, this.canvg];\n          case 2:\n            canvg = _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\n            canvas = this.getDisposableCanvas();\n            // Set canvas width/height\n            canvas.style.width = width * pixelRatio * scale + 'px';\n            canvas.style.height = height * pixelRatio * scale + 'px';\n            canvas.width = width * pixelRatio * scale;\n            canvas.height = height * pixelRatio * scale;\n            config = {\n              //ignoreDimensions: true,\n              useCORS: true\n            };\n            if (pixelRatio != 1) {\n              config.ignoreDimensions = true;\n              config.scaleWidth = width * pixelRatio * scale;\n              config.scaleHeight = height * pixelRatio * scale;\n            }\n            return [4 /*yield*/, canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\n          case 3:\n            _a.sent();\n            return [2 /*return*/, canvas];\n        }\n      });\n    });\n  };\n  /**\r\n   * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n   * export an image using its functions.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Image format\r\n   * @param options  Options\r\n   * @return Data uri\r\n   */\n  Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, canvas, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(type);\n            }\n            return [4 /*yield*/, this.getCanvasAdvanced(options)];\n          case 1:\n            canvas = _a.sent();\n            if (!(includeExtras !== false)) return [3 /*break*/, 3];\n            return [4 /*yield*/, this.addExtras(canvas, options, true)];\n          case 2:\n            canvas = _a.sent();\n            _a.label = 3;\n          case 3:\n            uri = canvas.toDataURL(this.getContentType(type), options.quality);\n            // Get rid of the canvas\n            this.disposeCanvas(canvas);\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Creates a `<canvas>` element and returns it.\r\n   *\r\n   * @return Canvas element\r\n   */\n  Export.prototype.getDisposableCanvas = function () {\n    var canvas = document.createElement(\"canvas\");\n    canvas.style.position = \"fixed\";\n    canvas.style.top = \"-10000px\";\n    document.body.appendChild(canvas);\n    return canvas;\n  };\n  /**\r\n   * Removes canvas.\r\n   *\r\n   * @param canvas  Canvas element\r\n   */\n  Export.prototype.disposeCanvas = function (canvas) {\n    if (document.body.contains(canvas)) {\n      document.body.removeChild(canvas);\n    }\n  };\n  /**\r\n   * Returns pixel ratio for retina displays.\r\n   *\r\n   * @return Pixel ratio\r\n   */\n  Export.prototype.getPixelRatio = function (options) {\n    // const scale = options && options.scale ? options.scale : 1;\n    // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\n    return this.useRetina ? $utils.getPixelRatio() : 1;\n  };\n  /**\r\n   * Calculates adjusted scale if image does not fit or is larger than min/max\r\n   * settings.\r\n   *\r\n   * @param   width    Width of the source image\r\n   * @param   height   Height of the source image\r\n   * @param   scale    Current scale\r\n   * @param   options  Options\r\n   * @return           Adjusted scale\r\n   */\n  Export.prototype.getAdjustedScale = function (width, height, scale, options) {\n    if (!options) {\n      return scale;\n    }\n    var adjWidth = width * scale;\n    var adjHeight = width * scale;\n    // Check max restrictions\n    var widthScale;\n    var heightScale;\n    if (options.maxWidth && adjWidth > options.maxWidth) {\n      widthScale = options.maxWidth / width;\n    }\n    if (options.maxHeight && adjHeight > options.maxHeight) {\n      heightScale = options.maxHeight / height;\n    }\n    if (widthScale || heightScale) {\n      return $math.min(widthScale, heightScale);\n    }\n    // Check min restrictions\n    if (options.minWidth && adjWidth < options.minWidth) {\n      widthScale = options.minWidth / width;\n    }\n    if (options.minHeight && adjHeight < options.minHeight) {\n      heightScale = options.minHeight / height;\n    }\n    if (widthScale || heightScale) {\n      return $math.max(widthScale, heightScale);\n    }\n    return scale;\n  };\n  /**\r\n   * Converts all `<image>` tags in SVG to use data uris instead of external\r\n   * URLs\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n  Export.prototype.imagesToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var images, promises, count, i, image, href;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            images = el.querySelectorAll(\"image\");\n            if (!images.length) return [3 /*break*/, 2];\n            promises = [];\n            // There are images, process each of them\n            for (count = images.length, i = 0; i < count; i++) {\n              image = images[i];\n              href = image.getAttributeNS(Export.XLINK, \"href\");\n              // no href?\n              if (!href) {\n                continue;\n              }\n              if (href.indexOf(\"data:image\") !== -1) {\n                // Ignore image if it's already in Data URI format\n              } else {\n                // SVG or bitmap image?\n                if (href.indexOf(\".svg\") !== -1) {\n                  promises.push(this.svgToDataURI(image, options));\n                } else {\n                  promises.push(this.imageToDataURI(image, options));\n                }\n              }\n            }\n            return [4 /*yield*/, Promise.all(promises)];\n          case 1:\n            _a.sent();\n            return [2 /*return*/];\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * `foreignObject` elements cannot be exported. This function hides them\r\n   * temprarily. In the future it might try to convert them to SVG to make them\r\n   * exportable.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG node\r\n   * @param options  Options\r\n   * @return Promise\r\n   */\n  Export.prototype.prepForeignObjects = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var objects, count, i;\n      return __generator(this, function (_a) {\n        objects = el.querySelectorAll(\"foreignObject\");\n        if (objects.length) {\n          // There are foreign objects, process each of them\n          for (count = objects.length, i = 0; i < count; i++) {\n            this.temporarilyRemoveObject(objects[i]);\n          }\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n  /**\r\n   * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n   * external file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el       SVG element\r\n   * @param options  Options\r\n   */\n  Export.prototype.imageToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var img, canvas, uri, e_5;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            _a.trys.push([0, 2,, 3]);\n            return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\n          case 1:\n            // Create image\n            img = _a.sent();\n            canvas = document.createElement(\"canvas\");\n            canvas.width = img.width;\n            canvas.height = img.height;\n            // Draw new image on it via `toDataURL`\n            canvas.getContext(\"2d\").drawImage(img, 0, 0);\n            // Replace image `href` with data uri\n            // If we got to this point it means image has loaded, however we might\n            // still get an error with `toDataURL()`\n            try {\n              uri = canvas.toDataURL();\n              el.setAttribute(\"href\", uri);\n              return [2 /*return*/, uri];\n            } catch (e) {\n              // Give up and temporarily remove the element href temporarily\n              if (options.keepTainted !== false) {\n                /*this._removedObjects.push({\r\n                    \"element\": el,\r\n                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                });\r\n                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n                this.temporarilyRemoveObject(el);\n              }\n              return [2 /*return*/, undefined];\n            }\n            return [3 /*break*/, 3];\n          case 2:\n            e_5 = _a.sent();\n            // Give up and temporarily remove the element's href\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n            return [2 /*return*/, undefined];\n          case 3:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n   * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el        An SVG element\r\n   * @param options   Options\r\n   */\n  Export.prototype.svgToDataURI = function (el, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var href, data, charset, uri, e_6;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            href = el.getAttributeNS(Export.XLINK, \"href\");\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 3,, 4]);\n            return [4 /*yield*/, $net.load(href)];\n          case 2:\n            data = _a.sent();\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"base64\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"svgToDataURI\", {\n              data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\n              options: options\n            }).data;\n            el.setAttributeNS(Export.XLINK, \"href\", uri);\n            return [2 /*return*/, uri];\n          case 3:\n            e_6 = _a.sent();\n            // Disable temporarily\n            if (!options || options.keepTainted !== false) {\n              /*this._removedObjects.push({\r\n                  \"element\": el,\r\n                  \"originalHref\": href\r\n              });\r\n              el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\n              this.temporarilyRemoveObject(el);\n            }\n            return [2 /*return*/, undefined];\n          case 4:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Temporarily removes element from DOM, and replaces it with a dummy\r\n   * placeholder, as well as stores it for later restoration.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param el Node\r\n   */\n  Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\n    // Get parent\n    var parent = el.parentElement || el.parentNode;\n    // Create a placeholder group element if it has not been passed in\n    if (!placeholder) {\n      placeholder = this.sprite.paper.add(\"g\").node;\n    }\n    parent.insertBefore(placeholder, el);\n    // Check if we have a textContents we can replace with\n    // @todo Perhaps we should explore alternatives to creating text nodes\n    // i.e. creating a text version of the HTML-based Text, just for export\n    // purposes. Converting HTML into SVG is very complicated\n    if (el.textContent) {\n      /*let text = this.sprite.paper.add(\"text\").node;\r\n      text.textContent = el.textContent;\r\n      placeholder.appendChild(text);\r\n        // Copy properties from the removing element to the placeholder\r\n      $dom.copyAttributes(el, placeholder);*/\n    }\n    // Remove the old element\n    parent.removeChild(el);\n    // Log removed item\n    this._removedObjects.push({\n      \"element\": el,\n      \"placeholder\": placeholder\n    });\n  };\n  /**\r\n   * Restores all (possibly tainted or unsupported) objects that were\r\n   * temporarily removed when exporting.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.restoreRemovedObjects = function () {\n    var obj;\n    while (true) {\n      obj = this._removedObjects.pop();\n      if (!obj) {\n        break;\n      }\n      //obj.element.setAttribute(\"href\", obj.originalHref);\n      var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\n      parent_1.insertBefore(obj.element, obj.placeholder);\n      //parent.removeChild(obj.placeholder);\n    }\n  };\n  /**\r\n   * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n   * document does not contain any external images.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return `true` if simplified export can be used\r\n   */\n  Export.prototype.simplifiedImageExport = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (this.useSimplifiedExport === false) {\n              return [2 /*return*/, false];\n            }\n            cache = registry.getCache(\"simplifiedImageExport\");\n            if (cache === false || cache === true) {\n              return [2 /*return*/, cache];\n            }\n            _a.label = 1;\n          case 1:\n            _a.trys.push([1, 6,, 7]);\n            canvas = document.createElement(\"canvas\");\n            canvas.width = 1;\n            canvas.height = 1;\n            ctx = canvas.getContext(\"2d\");\n            DOMURL = this.getDOMURL();\n            svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], {\n              type: \"image/svg+xml\"\n            });\n            url = DOMURL.createObjectURL(svg);\n            img = void 0;\n            _a.label = 2;\n          case 2:\n            _a.trys.push([2, 4,, 5]);\n            return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\n          case 3:\n            img = _a.sent();\n            return [3 /*break*/, 5];\n          case 4:\n            e_7 = _a.sent();\n            return [2 /*return*/, false];\n          case 5:\n            ctx.drawImage(img, 0, 0);\n            DOMURL.revokeObjectURL(url);\n            try {\n              //let uri = canvas.toDataURL(\"image/png\");\n              registry.setCache(\"simplifiedImageExport\", true);\n              return [2 /*return*/, true];\n            } catch (e) {\n              registry.setCache(\"simplifiedImageExport\", false);\n              return [2 /*return*/, false];\n            }\n            return [3 /*break*/, 7];\n          case 6:\n            e_8 = _a.sent();\n            registry.setCache(\"simplifiedImageExport\", false);\n            return [2 /*return*/, false];\n          case 7:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns a new `<image>` element.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param url          URL of the image\r\n   * @param width        Width (px)\r\n   * @param height       Height (px)\r\n   * @param crossOrigin  Cross-Origin setting\r\n   * @return Promise\r\n   */\n  Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\n    return new Promise(function (success, error) {\n      // New image\n      var image;\n      if (width && height) {\n        image = new Image(width, height);\n      } else {\n        image = new Image();\n      }\n      // Set crossorigin\n      if (crossOrigin) {\n        image.setAttribute(\"crossOrigin\", crossOrigin);\n      }\n      // Report success on load\n      image.onload = function () {\n        success(image);\n      };\n      function onerror() {\n        // Error occurred. Just in case it's the crossOrigin issue, let's try\n        // stripping off this attribute and trying again\n        if (crossOrigin) {\n          // Retain old uri\n          var currentHref = image.src;\n          // Set up another `onerror` to handle situations where image is not\n          // loadable at all (i.e. protected by CORS)\n          image.onerror = function () {\n            // Nope, no luck\n            error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n          };\n          // remove the `crossOrigin` attribute\n          image.removeAttribute(\"crossorigin\");\n          // retry\n          image.src = \"\";\n          image.src = currentHref;\n        } else {\n          error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\n        }\n      }\n      // Set image error handlers\n      image.onabort = onerror;\n      image.onerror = onerror;\n      // Trigger load\n      image.src = url;\n    });\n  };\n  /**\r\n   * Returns current DOM URL.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return URL\r\n   */\n  Export.prototype.getDOMURL = function () {\n    return self.URL || self.webkitURL || self;\n  };\n  /**\r\n   * Returns an SVG representation of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   */\n  Export.prototype.getSVG = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            prehidden = this._objectsAlreadyHidden;\n            if (!prehidden) {\n              this.hideNonExportableSprites();\n            }\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"svg\");\n            }\n            // Wait for required elements to be ready before proceeding\n            return [4 /*yield*/, this.awaitValidSprites()];\n          case 1:\n            // Wait for required elements to be ready before proceeding\n            _a.sent();\n            width = this.sprite.pixelWidth;\n            height = this.sprite.pixelHeight;\n            font = $dom.findFont(this.sprite.dom);\n            fontSize = $dom.findFontSize(this.sprite.dom);\n            scale = options.scale || 1;\n            pixelRatio = this.getPixelRatio(options);\n            // Check if scale needs to be updated as per min/max dimensions\n            scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\n            svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\n            charset = this.adapter.apply(\"charset\", {\n              charset: \"charset=utf-8\",\n              type: \"svg\",\n              options: options\n            }).charset;\n            uri = this.adapter.apply(\"getSVG\", {\n              data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\n              options: options\n            }).data;\n            if (!prehidden) {\n              this.restoreNonExportableSprites();\n            }\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n   * necessary.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param svg       Input SVG\r\n   * @param options   Options\r\n   * @param width     Width of the SVG viewport\r\n   * @param height    Height of the SVG viewport\r\n   * @param font      Font family to use as a base\r\n   * @param fontSize  Font size to use as a base\r\n   * @return Output SVG\r\n   * @todo Add style params to existing <svg>\r\n   */\n  Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\n    // Construct width/height params\n    var dimParams = \"\";\n    if (width) {\n      dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\n    }\n    if (height) {\n      dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\n    }\n    // Apply font settings\n    var styleParams = \"\";\n    if (font) {\n      styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\n    }\n    if (fontSize) {\n      styleParams += \"font-size: \" + fontSize + \";\";\n    }\n    // Scale\n    if (scale) {\n      dimParams += \"viewBox=\\\"0 0 \" + width + \" \" + height + \"\\\" \";\n    }\n    // Remove foreign objects temporarily\n    var fos = [];\n    var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\n    if (ms) {\n      for (var i = 0; i < ms.length; i++) {\n        svg = svg.replace(ms[i], $strings.PLACEHOLDER);\n        fos.push(ms[i]);\n      }\n    }\n    // Add missing <svg> enclosure\n    if (!svg.match(/<svg/)) {\n      svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\n    } else {\n      if (dimParams !== \"\") {\n        // Clear current params\n        svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\n        svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\n        // Add new params\n        svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\n      }\n      /*if (styleParams !== \"\") {\r\n          // Clear current params\r\n          svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n          svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n            // Add new params\r\n          svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n      }*/\n    }\n\n    if (background) {\n      svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\n      //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\n    }\n\n    if ($browser.isInternetExplorer()) {\n      // IE can't handle exporting <feColorMatrix> for some reason\n      svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\n    }\n    // Remove base uri-related stuff\n    var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\n    svg = svg.replace(reg, \"url(#\");\n    // Remove escaped quotes in url() parameters\n    svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\n    // Put foreignObjects back in\n    if (fos.length) {\n      for (var i = 0; i < fos.length; i++) {\n        svg = svg.replace($strings.PLACEHOLDER, fos[i]);\n      }\n    }\n    svg = this.adapter.apply(\"normalizeSVG\", {\n      data: svg,\n      options: options\n    }).data;\n    return svg;\n  };\n  /**\r\n   * Serializes an element and returns its contents.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element  An element to serialize\r\n   * @return A serialized XML\r\n   */\n  Export.prototype.serializeElement = function (element) {\n    return new XMLSerializer().serializeToString(element);\n  };\n  /**\r\n   * Returns a PDF containing chart image.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Account for header when calculating vertical fit\r\n   */\n  Export.prototype.getPDF = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      function addFont(font) {\n        var paths = {};\n        paths.normal = font.normal.path;\n        vfs[font.normal.path] = font.normal.bytes;\n        if (font.bold) {\n          paths.bold = font.bold.path;\n          vfs[font.bold.path] = font.bold.bytes;\n        } else {\n          paths.bold = font.normal.path;\n        }\n        if (font.italics) {\n          paths.italics = font.italics.path;\n          vfs[font.italics.path] = font.italics.bytes;\n        } else {\n          paths.italics = font.normal.path;\n        }\n        if (font.bolditalics) {\n          paths.bolditalics = font.bolditalics.path;\n          vfs[font.bolditalics.path] = font.bolditalics.bytes;\n        } else {\n          paths.bolditalics = font.normal.path;\n        }\n        fonts[font.name] = paths;\n      }\n      var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\n      return __generator(this, function (_d) {\n        switch (_d.label) {\n          case 0:\n            return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\n          case 1:\n            image = _d.sent();\n            return [4 /*yield*/, this.pdfmake];\n          case 2:\n            pdfmake = _d.sent();\n            defaultMargins = [30, 30, 30, 30];\n            doc = {\n              pageSize: options.pageSize || \"A4\",\n              pageOrientation: options.pageOrientation || \"portrait\",\n              pageMargins: options.pageMargins || defaultMargins,\n              defaultStyle: {\n                font: options.font ? options.font.name : undefined\n              },\n              //header: <any>[],\n              content: []\n            };\n            title = this.adapter.apply(\"title\", {\n              title: this.title,\n              options: options\n            }).title;\n            extraMargin = 0;\n            if (title) {\n              doc.content.push({\n                text: title,\n                fontSize: options.fontSize || 14,\n                bold: true,\n                margin: [0, 0, 0, 15]\n              });\n              // Add some leftover margin for title\n              extraMargin += 50;\n            }\n            // Add page URL?\n            if (options.addURL) {\n              doc.content.push({\n                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\n                fontSize: options.fontSize,\n                margin: [0, 0, 0, 15]\n              });\n              // Add some leftover margin for URL\n              extraMargin += 50;\n            }\n            // Add image\n            if (type != \"pdfdata\") {\n              doc.content.push({\n                image: image,\n                alignment: options.align || \"left\",\n                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\n              });\n            }\n            if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\n            _b = (_a = doc.content).push;\n            _c = {};\n            return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\n          case 3:\n            _b.apply(_a, [(_c.table = _d.sent(), _c.fontSize = options.fontSize || 14, _c)]);\n            _d.label = 4;\n          case 4:\n            // Apply adapters\n            doc = this.adapter.apply(\"pdfmakeDocument\", {\n              doc: doc,\n              options: options\n            }).doc;\n            fonts = null;\n            vfs = null;\n            if (options.font) {\n              fonts = {};\n              vfs = {};\n              addFont(options.font);\n              if (options.extraFonts) {\n                $array.each(options.extraFonts, addFont);\n              }\n            }\n            return [4 /*yield*/, new Promise(function (success, error) {\n              pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\n                success(uri);\n              });\n            })];\n          case 5:\n            // Create PDF\n            return [2 /*return*/, _d.sent()];\n        }\n      });\n    });\n  };\n  /**\r\n   * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getPDFData = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var content, dataFields, data, dataFieldsOrder_1, len, i;\n      var _this = this;\n      return __generator(this, function (_a) {\n        content = {\n          \"body\": []\n        };\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"pdf\"\n        }).dataFields;\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"pdfdata\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\n          }, function (a, b) {\n            //console.log(a, b)\n            var ai = dataFieldsOrder_1.indexOf(a);\n            var bi = dataFieldsOrder_1.indexOf(b);\n            if (ai > bi) {\n              return 1;\n            } else if (ai < bi) {\n              return -1;\n            }\n            return 0;\n          });\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\n            content.headerRows = 1;\n          }\n          for (len = data.length, i = 0; i < len; i++) {\n            content.body.push(this.getPDFDataRow(data[i], options, dataFields));\n          }\n        }\n        return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\n          table: content,\n          options: options\n        }).table];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of data for use in PDF data table (pdfmake).\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @since 4.7.0\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated Data line\r\n   */\n  Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"pdfdata\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      item = \"\" + item;\n      // Add to item\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns fit dimensions for available page sizes.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param pageSize Page size\r\n   * @return `[width, height]` in pixels\r\n   */\n  Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\n    if (extraMargin === void 0) {\n      extraMargin = 0;\n    }\n    // Check margins\n    var newMargins = [0, 0, 0, 0];\n    if (typeof margins == \"number\") {\n      newMargins = [margins, margins, margins, margins];\n    } else if (margins.length == 2) {\n      newMargins = [margins[0], margins[1], margins[0], margins[1]];\n    } else if (margins.length == 4) {\n      newMargins = margins;\n    }\n    // Define available page sizes\n    var sizes = {\n      \"4A0\": [4767.87, 6740.79],\n      \"2A0\": [3370.39, 4767.87],\n      A0: [2383.94, 3370.39],\n      A1: [1683.78, 2383.94],\n      A2: [1190.55, 1683.78],\n      A3: [841.89, 1190.55],\n      A4: [595.28, 841.89],\n      A5: [419.53, 595.28],\n      A6: [297.64, 419.53],\n      A7: [209.76, 297.64],\n      A8: [147.40, 209.76],\n      A9: [104.88, 147.40],\n      A10: [73.70, 104.88],\n      B0: [2834.65, 4008.19],\n      B1: [2004.09, 2834.65],\n      B2: [1417.32, 2004.09],\n      B3: [1000.63, 1417.32],\n      B4: [708.66, 1000.63],\n      B5: [498.90, 708.66],\n      B6: [354.33, 498.90],\n      B7: [249.45, 354.33],\n      B8: [175.75, 249.45],\n      B9: [124.72, 175.75],\n      B10: [87.87, 124.72],\n      C0: [2599.37, 3676.54],\n      C1: [1836.85, 2599.37],\n      C2: [1298.27, 1836.85],\n      C3: [918.43, 1298.27],\n      C4: [649.13, 918.43],\n      C5: [459.21, 649.13],\n      C6: [323.15, 459.21],\n      C7: [229.61, 323.15],\n      C8: [161.57, 229.61],\n      C9: [113.39, 161.57],\n      C10: [79.37, 113.39],\n      RA0: [2437.80, 3458.27],\n      RA1: [1729.13, 2437.80],\n      RA2: [1218.90, 1729.13],\n      RA3: [864.57, 1218.90],\n      RA4: [609.45, 864.57],\n      SRA0: [2551.18, 3628.35],\n      SRA1: [1814.17, 2551.18],\n      SRA2: [1275.59, 1814.17],\n      SRA3: [907.09, 1275.59],\n      SRA4: [637.80, 907.09],\n      EXECUTIVE: [521.86, 756.00],\n      FOLIO: [612.00, 936.00],\n      LEGAL: [612.00, 1008.00],\n      LETTER: [612.00, 792.00],\n      TABLOID: [792.00, 1224.00]\n    };\n    // Calculate size\n    var fitSize = sizes[pageSize];\n    fitSize[0] -= newMargins[0] + newMargins[2];\n    fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\n    return fitSize;\n  };\n  /**\r\n   * Returns an Excel file of chart's data.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type     Type of the export\r\n   * @param options  Options\r\n   * @return Promise\r\n   * @async\r\n   * @todo Handle dates\r\n   * @todo Support for multi-sheet\r\n   */\n  Export.prototype.getExcel = function (type, options) {\n    return __awaiter(this, void 0, void 0, function () {\n      var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            if (!$type.hasValue(options)) {\n              options = this.getFormatOptions(\"xlsx\");\n            }\n            return [4 /*yield*/, this.xlsx];\n          case 1:\n            XLSX = _a.sent();\n            wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\n              xlsx: XLSX,\n              options: {\n                bookType: \"xlsx\",\n                bookSST: false,\n                type: \"base64\"\n              }\n            }).options;\n            sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\n              xlsx: XLSX,\n              name: this.title || this.language.translate(\"Data\")\n            }).name);\n            wb = {\n              SheetNames: [sheetName],\n              Sheets: {}\n            };\n            data = [];\n            dataFields = this.adapter.apply(\"formatDataFields\", {\n              dataFields: this.dataFields,\n              format: \"xslx\"\n            }).dataFields;\n            // Vertical or horizontal (default) layout\n            if (options.pivot) {\n              dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\n                dataFieldsOrder: this.dataFieldsOrder,\n                format: \"xlsx\"\n              }).dataFieldsOrder;\n              $object.eachOrdered(dataFields, function (key, val) {\n                var dataRow = [];\n                if (options.addColumnNames) {\n                  dataRow.push(val);\n                }\n                for (var len = _this.data.length, i = 0; i < len; i++) {\n                  var dataValue = _this.data[i][key];\n                  dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n                }\n                data.push(_this.getExcelRow(dataRow, options, undefined, true));\n              }, function (a, b) {\n                //console.log(a, b)\n                var ai = dataFieldsOrder_2.indexOf(a);\n                var bi = dataFieldsOrder_2.indexOf(b);\n                if (ai > bi) {\n                  return 1;\n                } else if (ai < bi) {\n                  return -1;\n                }\n                return 0;\n              });\n            } else {\n              // Add column names?\n              if (options.addColumnNames) {\n                data.push(this.getExcelRow(dataFields, options, undefined, true));\n              }\n              // Add lines\n              for (len = this.data.length, i = 0; i < len; i++) {\n                data.push(this.getExcelRow(this.data[i], options, dataFields));\n              }\n            }\n            // Create sheet and add data\n            wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\n            // Apply adapters\n            wb = this.adapter.apply(\"xlsxWorkbook\", {\n              xlsx: XLSX,\n              workbook: wb,\n              options: options\n            }).workbook;\n            uri = this.adapter.apply(\"getExcel\", {\n              data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\n              options: options\n            }).data;\n            return [2 /*return*/, uri];\n        }\n      });\n    });\n  };\n  /**\r\n   * This is needed to work around Excel limitations.\r\n   *\r\n   * @param name  Source name\r\n   * @return Normalized name\r\n   */\n  Export.prototype.normalizeExcelSheetName = function (name) {\n    name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\n    return $utils.truncateWithEllipsis(name, 31, \"...\", true);\n  };\n  /**\r\n   * Rertuns an array of values to be used as Excel row.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         Row data\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Array of values\r\n   */\n  Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"xlsx\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items;\n  };\n  /**\r\n   * Returns chart's data formatted as CSV.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getCSV = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"csv\");\n        }\n        csv = \"\";\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"csv\"\n        }).dataFields;\n        br = \"\";\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"csv\"\n          }).dataFieldsOrder;\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            csv += br + _this.getCSVRow(dataRow, options, undefined, true);\n            br = \"\\n\";\n          }, function (a, b) {\n            var ai = dataFieldsOrder_3.indexOf(a);\n            var bi = dataFieldsOrder_3.indexOf(b);\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n            return 0;\n          });\n        } else {\n          for (len = data.length, i = 0; i < len; i++) {\n            row = this.getCSVRow(data[i], options, dataFields);\n            if (options.reverse) {\n              csv = row + br + csv;\n            } else {\n              csv += br + row;\n            }\n            br = \"\\n\";\n          }\n          // Add column names?\n          if (options.addColumnNames) {\n            csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\n          }\n        }\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getCSV\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of CSV data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated CSV line\r\n   */\n  Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    // Init\n    var separator = options.separator || \",\";\n    var items = [];\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"csv\"\n    }).dataFieldsOrder;\n    // Process each row item\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Check if we need to skip\n      // This is no longer required because we are iterating via dataFields anyway\n      /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n          return;\r\n      }*/\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      // Cast and escape doublequotes\n      item = \"\" + item;\n      item = item.replace(/\"/g, '\"\"');\n      // Enclose into double quotes\n      if (options.forceQuotes || item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0) {\n        item = \"\\\"\" + item + \"\\\"\";\n      }\n      // Add to item\n      items.push(item);\n    }, function (a, b) {\n      //console.log(a, b)\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    return items.join(separator);\n  };\n  /**\r\n   * Returns chart's data formatted as HTML table.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @since 4.7.0\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getHTML = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"html\");\n        }\n        html = \"<table>\";\n        if (options.tableClass) {\n          html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\n        }\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"html\"\n        }).dataFields;\n        data = this.data;\n        // Vertical or horizontal (default) layout\n        if (options.pivot) {\n          dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\n            dataFieldsOrder: this.dataFieldsOrder,\n            format: \"html\"\n          }).dataFieldsOrder;\n          html += \"\\n<tbody>\";\n          $object.eachOrdered(dataFields, function (key, val) {\n            var dataRow = [];\n            if (options.addColumnNames) {\n              dataRow.push(val);\n            }\n            for (var len = data.length, i = 0; i < len; i++) {\n              var dataValue = data[i][key];\n              dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\n            }\n            html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\n          }, function (a, b) {\n            var ai = dataFieldsOrder_4.indexOf(a);\n            var bi = dataFieldsOrder_4.indexOf(b);\n            if (ai > bi) {\n              return -1;\n            } else if (ai < bi) {\n              return 1;\n            }\n            return 0;\n          });\n          html += \"\\n</tbody>\";\n        } else {\n          // Add column names?\n          if (options.addColumnNames) {\n            html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\n          }\n          html += \"\\n<tbody>\";\n          for (len = data.length, i = 0; i < len; i++) {\n            html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\n          }\n          html += \"\\n</tbody>\";\n        }\n        html += \"\\n</table>\";\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getHTML\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Formats a row of HTML data.\r\n   *\r\n   * @since 4.7.0\r\n   * @ignore Exclude from docs\r\n   * @param  row         An object holding data for the row\r\n   * @param  options     Options\r\n   * @param  dataFields  Data fields\r\n   * @param  asIs        Do not try to convert to dates\r\n   * @return Formated HTML row\r\n   */\n  Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\n    var _this = this;\n    if (asIs === void 0) {\n      asIs = false;\n    }\n    if (headerRow === void 0) {\n      headerRow = false;\n    }\n    // Init output\n    var html = \"\\t<tr>\";\n    if (options.rowClass) {\n      html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\n    }\n    // Data fields\n    if (!dataFields) {\n      dataFields = row;\n    }\n    // Data fields order\n    var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\n      dataFieldsOrder: this.dataFieldsOrder,\n      format: \"html\"\n    }).dataFieldsOrder;\n    // th or dh?\n    var tag = headerRow ? \"th\" : \"td\";\n    // Process each row item\n    var first = true;\n    $object.eachOrdered(dataFields, function (key, name) {\n      // Get value\n      var value = _this.convertEmptyValue(key, row[key], options);\n      // Convert dates\n      var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\n      // Escape HTML entities\n      item = \"\" + item;\n      item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\n        return \"&#\" + i.charCodeAt(0) + \";\";\n      });\n      // Which tag to use\n      var useTag = tag;\n      if (options.pivot && first) {\n        useTag = \"th\";\n      }\n      // Add cell\n      if (options.cellClass) {\n        html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\n      } else {\n        html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\n      }\n      first = false;\n    }, function (a, b) {\n      var ai = dataFieldsOrder.indexOf(a);\n      var bi = dataFieldsOrder.indexOf(b);\n      if (ai > bi) {\n        return 1;\n      } else if (ai < bi) {\n        return -1;\n      }\n      return 0;\n    });\n    html += \"\\n\\t</tr>\";\n    return html;\n  };\n  /**\r\n   * Returns chart's data in JSON format.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param type       Type of the export\r\n   * @param options    Options\r\n   * @param encodeURI  If true, will return result will be data URI\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.getJSON = function (type, options, encodeURI) {\n    if (encodeURI === void 0) {\n      encodeURI = true;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\n      var _this = this;\n      return __generator(this, function (_a) {\n        if (!$type.hasValue(options)) {\n          options = this.getFormatOptions(\"json\");\n        }\n        dataFields = this.adapter.apply(\"formatDataFields\", {\n          dataFields: this.dataFields,\n          format: \"json\"\n        }).dataFields;\n        if (!this._dynamicDataFields) {\n          data = [];\n          sourceData = this.data;\n          _loop_1 = function (len, i) {\n            var value = sourceData[i];\n            if (typeof value == \"object\") {\n              var newValue_1 = {};\n              $object.each(value, function (field, item) {\n                if ($type.hasValue(dataFields[field])) {\n                  newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\n                }\n              });\n              data.push(newValue_1);\n            }\n          };\n          for (len = sourceData.length, i = 0; i < len; i++) {\n            _loop_1(len, i);\n          }\n        } else {\n          data = this.data;\n        }\n        json = JSON.stringify(data, function (key, value) {\n          if (typeof value == \"object\") {\n            $object.each(value, function (field, item) {\n              value[field] = _this.convertToSpecialFormat(field, item, options);\n            });\n          }\n          return value;\n        }, options.indent);\n        charset = this.adapter.apply(\"charset\", {\n          charset: \"charset=utf-8\",\n          type: type,\n          options: options\n        }).charset;\n        uri = this.adapter.apply(\"getJSON\", {\n          data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\n          options: options\n        }).data;\n        return [2 /*return*/, uri];\n      });\n    });\n  };\n  /**\r\n   * Converts the value to proper date format.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param  field         Field name\r\n   * @param  value         Value\r\n   * @param  options       Options\r\n   * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n   * @return Formatted date value or unmodified value\r\n   */\n  Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\n    // Is this a timestamp or duration?\n    if (typeof value == \"number\") {\n      if (this.isDateField(field)) {\n        value = new Date(value);\n      } else if (this.isDurationField(field)) {\n        return this.durationFormatter.format(value, this.durationFormat);\n      } else if (this.isNumberField(field) && this.numberFormat) {\n        return this.numberFormatter.format(value, this.numberFormat);\n      }\n    }\n    if (value instanceof Date) {\n      if (options.useTimestamps) {\n        value = value.getTime();\n      } else if (options.useLocale) {\n        if (!keepOriginal) {\n          value = value.toLocaleString();\n        }\n      } else {\n        value = this.dateFormatter.format(value, this.dateFormat);\n      }\n    } else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\n      value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\n    }\n    return value;\n  };\n  /**\r\n   * Converts empty value based on `emptyAs` option.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.convertEmptyValue = function (field, value, options) {\n    return $type.hasValue(value) ? value : options.emptyAs;\n  };\n  /**\r\n   * Triggers download of the file.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param uri       Data URI with file content\r\n   * @param fileName  File name\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.download = function (uri, fileName, addBOM) {\n    if (addBOM === void 0) {\n      addBOM = false;\n    }\n    return __awaiter(this, void 0, void 0, function () {\n      var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\n      return __generator(this, function (_a) {\n        if (this.msBlobDownloadSupport()) {\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n          // Check if we need to Base64-decode\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2 /*return*/, false];\n            }\n          } else {\n            blob_1 = new Blob([uri], {\n              type: contentType\n            });\n            window.navigator.msSaveBlob(blob_1, fileName);\n            return [2 /*return*/, true];\n          }\n          chars = new Array(uri.length);\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          window.navigator.msSaveBlob(blob, fileName);\n        } else if (this.blobDownloadSupport()) {\n          link_1 = document.createElement(\"a\");\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          parts = uri.split(\";\");\n          contentType = parts.shift().replace(/data:/, \"\");\n          uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\n          if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\n            try {\n              decoded = atob(uri);\n              uri = decoded;\n            } catch (e) {\n              // Error occurred, meaning string was not Base64-encoded. Do nothing.\n              return [2 /*return*/, false];\n            }\n          } else {\n            if (addBOM) {\n              uri = \"\\ufeff\" + uri;\n            }\n            blob_2 = new Blob([uri], {\n              type: contentType\n            });\n            url_2 = window.URL.createObjectURL(blob_2);\n            link_1.href = url_2;\n            link_1.download = fileName;\n            link_1.click();\n            setTimeout(function () {\n              document.body.removeChild(link_1);\n              window.URL.revokeObjectURL(url_2);\n            }, 100);\n            return [2 /*return*/, true];\n          }\n          chars = new Array(uri.length);\n          for (i = 0; i < uri.length; ++i) {\n            charCode = uri.charCodeAt(i);\n            chars[i] = charCode;\n          }\n          if (addBOM) {\n            chars = [0xEF, 0xBB, 0xBF].concat(chars);\n          }\n          blob = new Blob([new Uint8Array(chars)], {\n            type: contentType\n          });\n          url_3 = window.URL.createObjectURL(blob);\n          link_1.href = url_3;\n          link_1.download = fileName;\n          document.body.appendChild(link_1);\n          link_1.click();\n          document.body.removeChild(link_1);\n          setTimeout(function () {\n            window.URL.revokeObjectURL(url_3);\n          }, 100);\n        } else if (this.linkDownloadSupport()) {\n          link = document.createElement(\"a\");\n          link.download = fileName;\n          link.href = uri;\n          document.body.appendChild(link);\n          link.click();\n          document.body.removeChild(link);\n        } else if (this.legacyIE()) {\n          parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\n          if (parts.length === 4) {\n            // Base64-encoded or text-based stuff?\n            if (parts[2] == \"base64\") {\n              // Base64-encoded - probably an image\n              if (parts[1].match(/^image\\//)) {\n                // Yep, an image. Let's create a temporary image placeholder,\n                // so that user can use do Save As.\n                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" + \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") + \"</p>\" + \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\n              }\n            } else {\n              contentType = void 0;\n              if (fileName.match(/\\.svg$/)) {\n                contentType = \"image/svg+xml\";\n              } else {\n                contentType = \"text/plain\";\n                fileName += \".txt\";\n              }\n              iframe = document.createElement(\"iframe\");\n              iframe.width = \"1px\";\n              iframe.height = \"1px\";\n              iframe.style.display = \"none\";\n              document.body.appendChild(iframe);\n              idoc = iframe.contentDocument;\n              idoc.open(contentType, \"replace\");\n              // TODO test this with various encodings (e.g. UTF)\n              //idoc.charset = parts[2].replace(/charset=/, \"\");\n              idoc.write(decodeURIComponent(parts[3]));\n              idoc.close();\n              idoc.execCommand(\"SaveAs\", true, fileName);\n              // Destroy the iframe\n              document.body.removeChild(iframe);\n            }\n          }\n        } else {\n          /**\r\n           * Something else - perhaps a mobile.\r\n           * Let's just display it in the same page.\r\n           * (hey we don't like it either)\r\n           */\n          window.location.href = uri;\n        }\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  /**\r\n   * Returns `true` if browser has any supported methods to trigger download\r\n   * of a binary file.\r\n   *\r\n   * @return Supports downloads?\r\n   */\n  Export.prototype.downloadSupport = function () {\n    //return !this.legacyIE();\n    return this.linkDownloadSupport() || this.msBlobDownloadSupport();\n  };\n  /**\r\n   * Checks if the browser supports \"download\" attribute on links.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.linkDownloadSupport = function () {\n    // Do we have this cached?\n    var cache = registry.getCache(\"linkDownloadSupport\");\n    if (cache === false || cache === true) {\n      return cache;\n    }\n    var a = document.createElement(\"a\");\n    var res = typeof a.download !== \"undefined\";\n    registry.setCache(\"linkDownloadSupport\", res);\n    return res;\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.blobDownloadSupport = function () {\n    return $type.hasValue(window.Blob);\n  };\n  /**\r\n   * Checks if the browser supports download via `msBlob`.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Browser supports triggering downloads?\r\n   */\n  Export.prototype.msBlobDownloadSupport = function () {\n    return $type.hasValue(window.navigator.msSaveOrOpenBlob);\n  };\n  /**\r\n   * Checks if this is a legacy version of IE.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return IE9 or less?\r\n   */\n  Export.prototype.legacyIE = function () {\n    // Create a temporary <div> with conditional tags in it an an <i> tag.\n    // Count <i>s. If there are some, we have IE9 or late on our hands.\n    var div = document.createElement(\"div\");\n    div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\n    return div.getElementsByTagName(\"i\").length == 1;\n  };\n  /**\r\n   * Initiates print of the chart.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @param data     Data URI for the image\r\n   * @param options  Options\r\n   * @param title    Optional title to use (uses window's title by default)\r\n   * @return Promise\r\n   * @async\r\n   */\n  Export.prototype.print = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        if (options.printMethod == \"css\") {\n          return [2 /*return*/, this.printViaCSS(data, options, title)];\n        } else {\n          return [2 /*return*/, this.printViaIframe(data, options, title)];\n        }\n        return [2 /*return*/];\n      });\n    });\n  };\n\n  Export.prototype.printViaCSS = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var scroll, rule, originalTitle, img, isIOS;\n      return __generator(this, function (_a) {\n        scroll = document.documentElement.scrollTop || document.body.scrollTop;\n        rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\n          \"display\": \"none\",\n          \"position\": \"fixed\",\n          \"visibility\": \"hidden\",\n          \"opacity\": \"0\",\n          \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\n        });\n        if (title && document && document.title) {\n          originalTitle = document.title;\n          document.title = title;\n        }\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.display = \"block\";\n        img.style.position = \"relative\";\n        img.style.visibility = \"visible\";\n        img.style.opacity = \"1\";\n        img.style.clipPath = \"none\";\n        document.body.appendChild(img);\n        // Print\n        this.setTimeout(function () {\n          window.print();\n        }, 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        }\n        // Delay function that resets back the document the way ot was before\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(img);\n          // Reset back all elements\n          /*for (let len = items.length, i = 0; i < len; i++) {\r\n              let item = <HTMLElement>items[i];\r\n              if ($dom.isElement(item)) {\r\n                  item.style.display = states[i];\r\n              }\r\n          }*/\n          rule.dispose();\n          // Restore title\n          if (originalTitle) {\n            document.title = document.title;\n          }\n          // Scroll back the document the way it was before\n          document.documentElement.scrollTop = document.body.scrollTop = scroll;\n        }, options.delay || 500);\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  Export.prototype.printViaIframe = function (data, options, title) {\n    return __awaiter(this, void 0, void 0, function () {\n      var iframe, img, isIOS;\n      return __generator(this, function (_a) {\n        iframe = document.createElement(\"iframe\");\n        iframe.style.visibility = \"hidden\";\n        document.body.appendChild(iframe);\n        // This is needed for FireFox\n        iframe.contentWindow.document.open();\n        iframe.contentWindow.document.close();\n        img = new Image();\n        img.src = data;\n        img.style.maxWidth = \"100%\";\n        img.style.height = \"auto\";\n        if (title) {\n          iframe.contentWindow.document.title = title;\n        }\n        iframe.contentWindow.document.body.appendChild(img);\n        iframe.load = function () {\n          iframe.contentWindow.document.body.appendChild(img);\n        };\n        // Print\n        this.setTimeout(function () {\n          try {\n            if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\n              iframe.contentWindow.print();\n            }\n          } catch (e) {\n            iframe.contentWindow.print();\n          }\n        }, options.delay || 50);\n        isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n        if (isIOS && options.delay < 1000) {\n          options.delay = 1000;\n        } else if (options.delay < 100) {\n          options.delay = 100;\n        }\n        // Delay function that resets back the document the way ot was before\n        this.setTimeout(function () {\n          // Remove image\n          document.body.removeChild(iframe);\n        }, options.delay + 50 || 100);\n        return [2 /*return*/, true];\n      });\n    });\n  };\n  /**\r\n   * Finds a background color for the element. If element is transparent it goes\r\n   * up the DOM hierarchy to find a parent element that does.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param element Element\r\n   * @return Color code\r\n   */\n  Export.prototype.findBackgroundColor = function (element) {\n    // Check if element has styles set\n    var opacity = 1,\n      currentColor = getComputedStyle(element, \"background-color\");\n    // Check opacity\n    if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\n      opacity = 0;\n    }\n    if (opacity == 0) {\n      var parent_2 = element.parentElement; // || <Element>element.parentNode;\n      // Completely transparent. Look for a parent\n      if (parent_2) {\n        return this.findBackgroundColor(parent_2);\n      } else {\n        return color(\"#fff\");\n      }\n    } else {\n      return color(currentColor, opacity);\n    }\n  };\n  Object.defineProperty(Export.prototype, \"container\", {\n    /**\r\n     * @return Reference\r\n     */\n    get: function () {\n      return this.adapter.apply(\"container\", {\n        container: this._container\n      }).container;\n    },\n    /**\r\n     * A reference to a container to be used to place [[ExportMenu]] in.\r\n     *\r\n     * @param value Reference\r\n     */\n    set: function (value) {\n      this._container = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"sprite\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"sprite\", {\n        sprite: this._sprite\n      }).sprite;\n    },\n    /**\r\n     * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n     * internal elements.\r\n     *\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._sprite = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"extraSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"extraSprites\", {\n        extraSprites: this._extraSprites\n      }).extraSprites;\n    },\n    /**\r\n     * An array of extra [[Sprite]] elements to include in export.\r\n     *\r\n     * It can be used to export any external elements, or even other charts.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.extraSprites.push(chart2);\r\n     * ```\r\n     *\r\n     * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n     *\r\n     * @since 4.2.0\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._extraSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"validateSprites\", {\n    /**\r\n     * @return Sprite\r\n     */\n    get: function () {\n      return this.adapter.apply(\"validateSprites\", {\n        validateSprites: this._validateSprites\n      }).validateSprites;\n    },\n    /**\r\n     * An array of [[Sprite]] elements that need to be valid before export\r\n     * commences.\r\n     *\r\n     * If any of those elements is not completely ready when export is triggered,\r\n     * the export will wait until they are (their `validated` event triggers)\r\n     * before going through with the export opertaion.\r\n     *\r\n     * This is useful if you need to modify chart appearance for the export.\r\n     *\r\n     * E.g.:\r\n     *\r\n     * ```TypeScript\r\n     * // Add watermark\r\n     * let watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     * ```JavaScript\r\n     * // Add watermark\r\n     * var watermark = chart.createChild(am4core.Label);\r\n     * watermark.text = \"Copyright (C) 2019\";\r\n     * watermark.disabled = true;\r\n     *\r\n     * // Add watermark to validated sprites\r\n     * chart.exporting.validateSprites.push(watermark);\r\n     *\r\n     * // Enable watermark on export\r\n     * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n     *   watermark.disabled = false;\r\n     * });\r\n     *\r\n     * // Disable watermark when export finishes\r\n     * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n     *   watermark.disabled = true;\r\n     * });\r\n     * ```\r\n     *\r\n     * @since 4.6.8\r\n     * @param value Sprite\r\n     */\n    set: function (value) {\n      this._validateSprites = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"data\", {\n    /**\r\n     * @return Data\r\n     */\n    get: function () {\n      return this.adapter.apply(\"data\", {\n        data: this._data\n      }).data;\n    },\n    /**\r\n     * Data to export.\r\n     *\r\n     * @param value Data\r\n     */\n    set: function (value) {\n      this._data = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dataFields\", {\n    /**\r\n     * @return Field names `{ field: fieldName }`\r\n     */\n    get: function () {\n      if (!this._dataFields) {\n        this.generateDataFields();\n      }\n      return this.adapter.apply(\"dataFields\", {\n        dataFields: this._dataFields\n      }).dataFields;\n    },\n    /**\r\n     * Data fields in `{ field: fieldName }` format. Those are used for\r\n     * exporting in data formats to name the columns.\r\n     *\r\n     * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n     * @param value Field names\r\n     */\n    set: function (value) {\n      this._dataFields = value;\n      this._dynamicDataFields = false;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Called after target chart's data updates.\r\n   *\r\n   * @ignore\r\n   */\n  Export.prototype.handleDataUpdated = function () {\n    if (this._dynamicDataFields) {\n      this._dataFields = undefined;\n    }\n    var hasData = this.data.length > 0;\n    if (this._prevHasData != hasData) {\n      this._prevHasData = hasData;\n      if (this.menu) {\n        this.menu.invalidate();\n      }\n    }\n  };\n  Object.defineProperty(Export.prototype, \"dateFormatter\", {\n    /**\r\n     * @return A DateFormatter instance\r\n     */\n    get: function () {\n      if (!this._dateFormatter) {\n        this._dateFormatter = new DateFormatter();\n        this._dateFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"dateFormatter\", {\n        dateFormatter: this._dateFormatter\n      }).dateFormatter;\n    },\n    /**\r\n     * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @param value DateFormatter instance\r\n     */\n    set: function (value) {\n      this._dateFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFormat\", {\n    /**\r\n     * @return Date format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"dateFormat\", {\n        dateFormat: this._dateFormat\n      }).dateFormat;\n    },\n    /**\r\n     * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @param value Date format\r\n     */\n    set: function (value) {\n      this._dateFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"dateFields\", {\n    /**\r\n     * @return Date field list\r\n     */\n    get: function () {\n      if (!this._dateFields) {\n        this._dateFields = new List();\n      }\n      return this.adapter.apply(\"dateFields\", {\n        dateFields: this._dateFields\n      }).dateFields;\n    },\n    /**\r\n     * A list of fields that hold date values.\r\n     *\r\n     * @param value Date field list\r\n     */\n    set: function (value) {\n      this._dateFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormatter\", {\n    /**\r\n     * @return A NumberFormatter instance\r\n     */\n    get: function () {\n      if (!this._numberFormatter) {\n        this._numberFormatter = new NumberFormatter();\n        this._numberFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"numberFormatter\", {\n        numberFormatter: this._numberFormatter\n      }).numberFormatter;\n    },\n    /**\r\n     * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value NumberFormatter instance\r\n     */\n    set: function (value) {\n      this._numberFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFormat\", {\n    /**\r\n     * @return Number format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"numberFormat\", {\n        numberFormat: this._numberFormat\n      }).numberFormat;\n    },\n    /**\r\n     * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n     * format if not set.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number format\r\n     */\n    set: function (value) {\n      this._numberFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"numberFields\", {\n    /**\r\n     * @return Number field list\r\n     */\n    get: function () {\n      if (!this._numberFields) {\n        this._numberFields = new List();\n      }\n      return this.adapter.apply(\"numberFields\", {\n        numberFields: this._numberFields\n      }).numberFields;\n    },\n    /**\r\n     * A list of fields that hold number values.\r\n     *\r\n     * @since 4.5.15\r\n     * @param value Number field list\r\n     */\n    set: function (value) {\n      this._numberFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormatter\", {\n    /**\r\n     * @return A DurationFormatter instance\r\n     */\n    get: function () {\n      if (!this._durationFormatter) {\n        this._durationFormatter = new DurationFormatter();\n        this._durationFormatter.language = this.language;\n      }\n      return this.adapter.apply(\"durationFormatter\", {\n        durationFormatter: this._durationFormatter\n      }).durationFormatter;\n    },\n    /**\r\n     * A [[DurationFormatter]] to use when formatting duration values when\r\n     * exporting data.\r\n     *\r\n     * @param value  DurationFormatter instance\r\n     */\n    set: function (value) {\n      this._durationFormatter = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFormat\", {\n    /**\r\n     * @return Duration format\r\n     */\n    get: function () {\n      return this.adapter.apply(\"durationFormat\", {\n        durationFormat: this._durationFormat\n      }).durationFormat;\n    },\n    /**\r\n     * A format to use when formatting values from `durationFields`.\r\n     * Will use [[DurationFormatter]] format if not set.\r\n     *\r\n     * @param value Duration format\r\n     */\n    set: function (value) {\n      this._durationFormat = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"durationFields\", {\n    /**\r\n     * @return Duration field list\r\n     */\n    get: function () {\n      if (!this._durationFields) {\n        this._durationFields = new List();\n      }\n      return this.adapter.apply(\"durationFields\", {\n        durationFields: this._durationFields\n      }).durationFields;\n    },\n    /**\r\n     * A list of fields that hold duration values.\r\n     *\r\n     * @param value Duration field list\r\n     */\n    set: function (value) {\n      this._durationFields = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Generates data fields out of the first row of data.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.generateDataFields = function () {\n    var _this = this;\n    this._dataFields = {};\n    if (this.data.length) {\n      $array.each(this.data, function (row) {\n        $object.each(row, function (key, value) {\n          if (!$type.hasValue(_this._dataFields[key])) {\n            _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\n              name: key,\n              field: key\n            }).name;\n          }\n        });\n      });\n    }\n  };\n  /**\r\n   * Cheks against `dateFields` property to determine if this field holds\r\n   * dates.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n  Export.prototype.isDateField = function (field) {\n    return this.adapter.apply(\"isDateField\", {\n      isDateField: this.dateFields.contains(field),\n      field: field\n    }).isDateField;\n  };\n  /**\r\n   * Cheks against `numberFields` property to determine if this field holds\r\n   * numbers.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a number field\r\n   */\n  Export.prototype.isNumberField = function (field) {\n    return this.adapter.apply(\"isNumberField\", {\n      isNumberField: this.numberFields.contains(field),\n      field: field\n    }).isNumberField;\n  };\n  /**\r\n   * Cheks against `durationFields` property to determine if this field holds\r\n   * durations.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param field   Field name\r\n   * @param options Options\r\n   * @return `true` if it's a date field\r\n   */\n  Export.prototype.isDurationField = function (field) {\n    return this.adapter.apply(\"isDurationField\", {\n      isDurationField: this.durationFields.contains(field),\n      field: field\n    }).isDurationField;\n  };\n  /**\r\n   * Returns proper content type for the export type.\r\n   *\r\n   * @param type  Export format/type\r\n   * @return Proper content type, i.e. \"image/jpeg\"\r\n   */\n  Export.prototype.getContentType = function (type) {\n    var contentType = \"\";\n    switch (type) {\n      case \"png\":\n      case \"gif\":\n        contentType = \"image/\" + type;\n        break;\n      case \"jpg\":\n        contentType = \"image/jpeg\";\n        break;\n      case \"svg\":\n        contentType = \"image/svg+xml\";\n        break;\n      case \"csv\":\n        contentType = \"text/csv\";\n        break;\n      case \"json\":\n        contentType = \"application/json\";\n        break;\n      case \"html\":\n        contentType = \"text/html\";\n        break;\n      case \"pdf\":\n      case \"pdfdata\":\n        contentType = \"application/pdf\";\n        break;\n      case \"xlsx\":\n        contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\n        break;\n    }\n    return this.adapter.apply(\"contentType\", {\n      contentType: contentType,\n      type: type\n    }).contentType;\n  };\n  Object.defineProperty(Export.prototype, \"filePrefix\", {\n    /**\r\n     * @return File prefix\r\n     */\n    get: function () {\n      return this.adapter.apply(\"filePrefix\", {\n        filePrefix: this._filePrefix\n      }).filePrefix;\n    },\n    /**\r\n     * A file prefix to be used for all exported formats.\r\n     *\r\n     * Export will apply format-related extension to it. E.g. if this is set to\r\n     * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n     *\r\n     * @param value File prefix\r\n     */\n    set: function (value) {\n      this._filePrefix = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"backgroundColor\", {\n    /**\r\n     * @return Background color\r\n     */\n    get: function () {\n      return this.adapter.apply(\"backgroundColor\", {\n        backgroundColor: this._backgroundColor\n      }).backgroundColor;\n    },\n    /**\r\n     * A background color to be used for exported images. If set, this will\r\n     * override the automatically acquired background color.\r\n     *\r\n     * @param value Color\r\n     */\n    set: function (value) {\n      this._backgroundColor = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"title\", {\n    /**\r\n     * @return Title\r\n     */\n    get: function () {\n      return this.adapter.apply(\"title\", {\n        title: this._title\n      }).title;\n    },\n    /**\r\n     * A title to be used when printing.\r\n     *\r\n     * @param value Title\r\n     */\n    set: function (value) {\n      this._title = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @todo Add ability to change text\r\n   */\n  Export.prototype.showPreloader = function () {\n    var preloader = this.preloader;\n    if (preloader) {\n      preloader.progress = 0.5;\n      preloader.label.text = \"...\";\n    }\n  };\n  /**\r\n   * Hides preloader/exporting indicator\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hidePreloader = function () {\n    var preloader = this.preloader;\n    if (preloader) {\n      preloader.progress = 1;\n    }\n  };\n  Object.defineProperty(Export.prototype, \"preloader\", {\n    /**\r\n     * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n     * exported.\r\n     *\r\n     * @return Preloader\r\n     */\n    get: function () {\n      return this._sprite && this._sprite.parent && this._sprite.parent.preloader ? this._sprite.parent.preloader : undefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Displays a modal saying export is taking longer than expected.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.showTimeout = function () {\n    this.showModal(this.adapter.apply(\"timeoutMessage\", {\n      message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\n    }).message);\n  };\n  /**\r\n   * Hides preloader/exporting indicator.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hideTimeout = function () {\n    if (this._timeoutTimeout) {\n      this.removeDispose(this._timeoutTimeout);\n      this._timeoutTimeout = null;\n    }\n    this.hideModal();\n  };\n  Object.defineProperty(Export.prototype, \"language\", {\n    /**\r\n     * @return A [[Language]] instance to be used\r\n     */\n    get: function () {\n      if (!this._language) {\n        this._language = new Language();\n      }\n      return this._language;\n    },\n    /**\r\n     * A [[Language]] instance to be used for translations.\r\n     *\r\n     * @param value An instance of [[Language]]\r\n     */\n    set: function (value) {\n      this._language = value;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"modal\", {\n    /**\r\n     * Returns (and creates) [[Modal]].\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Modal instance\r\n     */\n    get: function () {\n      if (!this._modal) {\n        this._modal = new Modal();\n        // Prefix with Sprite's class name\n        this._modal.adapter.add(\"classPrefix\", function (value) {\n          value = options.classNamePrefix + value;\n          return value;\n        });\n      }\n      return this._modal;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Shows [[Modal]] with specific text.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param text Modal contents\r\n   */\n  Export.prototype.showModal = function (text, title) {\n    // Hide previous modal and preloader\n    this.hideModal();\n    this.hidePreloader();\n    // Create modal\n    var modal = this.modal;\n    modal.container = this.sprite.svgContainer.SVGContainer;\n    modal.content = text;\n    modal.readerTitle = title;\n    modal.open();\n  };\n  /**\r\n   * Hides modal window if one's currently open.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.prototype.hideModal = function () {\n    if (this._modal) {\n      this.modal.close();\n    }\n  };\n  /**\r\n   * Loads canvg dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of canvg\r\n   * @async\r\n   */\n  Export.prototype._canvg = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var canvg;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, import( /* webpackChunkName: \"canvg\" */\"../../canvg/index.js\")];\n          case 1:\n            canvg = _a.sent();\n            if (canvg.default != null) {\n              return [2 /*return*/, canvg.default];\n            } else {\n              return [2 /*return*/, canvg];\n            }\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n\n  Object.defineProperty(Export.prototype, \"canvg\", {\n    /**\r\n     * Returns canvg instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     */\n    get: function () {\n      return this._canvg();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Export.prototype, \"pdfmake\", {\n    /**\r\n     * Returns pdfmake instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      if (pdfmakePromise == null) {\n        pdfmakePromise = _pdfmake();\n      }\n      return pdfmakePromise;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Loads xlsx dynamic module.\r\n   *\r\n   * This is an asynchronous function. Check the description of `getImage()`\r\n   * for description and example usage.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @return Instance of pdfmake\r\n   * @async\r\n   */\n  Export.prototype._xlsx = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            return [4 /*yield*/, import( /* webpackChunkName: \"xlsx\" */\"xlsx/dist/xlsx.core.min.js\")];\n          case 1:\n            return [2 /*return*/, _a.sent()];\n        }\n      });\n    });\n  };\n  Object.defineProperty(Export.prototype, \"xlsx\", {\n    /**\r\n     * Returns xlsx instance.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     */\n    get: function () {\n      return this._xlsx();\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Sets options for a format.\r\n   */\n  Export.prototype.setFormatOptions = function (type, options) {\n    this._formatOptions.setKey(type, options);\n  };\n  /**\r\n   * Returns current options for a format.\r\n   */\n  Export.prototype.getFormatOptions = function (type) {\n    return this._formatOptions.getKey(type);\n  };\n  Object.defineProperty(Export.prototype, \"formatOptions\", {\n    /**\r\n     * A [[Dictionary]] object containing format-specific options.\r\n     *\r\n     * May be used to change specific option for the format:\r\n     *\r\n     * ```TypeScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JavaScript\r\n     * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n     * ```\r\n     * ```JSON\r\n     * {\r\n     *   // ...\r\n     *   \"exporting\": {\r\n     *     // ...\r\n     *     \"formatOptions\": {\r\n     *       \"csv\": {\r\n     *         \"disabled\": true\r\n     *       }\r\n     *     }\r\n     *   }\r\n     * }\r\n     * ```\r\n     *\r\n     * @since 4.9.12\r\n     * @return  Options\r\n     */\n    get: function () {\n      return this._formatOptions;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Disables interactivity on parent chart.\r\n   */\n  Export.prototype._disablePointers = function () {\n    if (!$type.hasValue(this._spriteInteractionsEnabled)) {\n      this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\n    }\n    this.sprite.interactionsEnabled = false;\n  };\n  /**\r\n   * Releases temporarily disabled pointers on parent chart.\r\n   */\n  Export.prototype._releasePointers = function () {\n    if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\n      this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\n    }\n  };\n  /**\r\n   * Hides all elements that should not be included in the exported image.\r\n   */\n  Export.prototype.hideNonExportableSprites = function () {\n    var _this = this;\n    if (this._objectsAlreadyHidden) {\n      return;\n    }\n    var svgContainer = this.sprite.svgContainer;\n    if (svgContainer) {\n      $array.each(svgContainer.nonExportableSprites, function (item) {\n        if (!item.isHidden && !item.isHiding && item.visible) {\n          _this._hiddenObjects.push(item);\n        }\n        item.hide(0);\n      });\n    }\n    this._objectsAlreadyHidden = true;\n  };\n  /**\r\n   * Respores elements that were hidden before export.\r\n   */\n  Export.prototype.restoreNonExportableSprites = function () {\n    if (!this._objectsAlreadyHidden) {\n      return;\n    }\n    $array.each(this._hiddenObjects, function (item) {\n      item.show(0);\n    });\n    this._hiddenObjects = [];\n    this._objectsAlreadyHidden = false;\n  };\n  /**\r\n   * Checks if there are elements that absolutely need to be validated before\r\n   * export.\r\n   *\r\n   * If there are invalid elements, it will await for them to be validated.\r\n   *\r\n   * @return Promise\r\n   */\n  Export.prototype.awaitValidSprites = function () {\n    return __awaiter(this, void 0, void 0, function () {\n      var promises;\n      return __generator(this, function (_a) {\n        switch (_a.label) {\n          case 0:\n            promises = [];\n            if (this.validateSprites.length) {\n              $array.each(this.validateSprites, function (sprite, index) {\n                if (sprite.invalid) {\n                  promises.push(new Promise(function (resolve, reject) {\n                    sprite.events.once(\"validated\", function (ev) {\n                      resolve();\n                    });\n                  }));\n                }\n              });\n            }\n            if (!promises.length) return [3 /*break*/, 2];\n            return [4 /*yield*/, Promise.all(promises)];\n          case 1:\n            _a.sent();\n            _a.label = 2;\n          case 2:\n            return [2 /*return*/];\n        }\n      });\n    });\n  };\n  /**\r\n   * Processes JSON-based config before it is applied to the object.\r\n   *\r\n   * @ignore Exclude from docs\r\n   * @param config  Config\r\n   */\n  Export.prototype.processConfig = function (config) {\n    registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\n    if (config) {\n      // Set up menu\n      if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\n        config.menu.type = \"ExportMenu\";\n      }\n      if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\n        this.dataFields = config.dataFields;\n        delete config.dataFields;\n      }\n    }\n    _super.prototype.processConfig.call(this, config);\n  };\n  /**\r\n   * XLINK namespace definition.\r\n   *\r\n   * @ignore Exclude from docs\r\n   */\n  Export.XLINK = \"http://www.w3.org/1999/xlink\";\n  return Export;\n}(Validatable);\nexport { Export };","map":{"version":3,"names":["__awaiter","__extends","__generator","ExportMenu","Adapter","Sprite","Modal","List","Dictionary","DateFormatter","DurationFormatter","NumberFormatter","Language","Validatable","color","registry","options","StyleRule","getComputedStyle","$browser","$object","$net","$dom","$type","$log","$utils","$array","$math","$strings","pdfmakePromise","_pdfmake","a","pdfmake","vfs_fonts","global","_a","label","Promise","all","sent","window","pdfMake","vfs","default","fontFamilySrcRegexp","supportsBlobUri","navigator","msSaveOrOpenBlob","blobToDataUri","blob","resolve","reject","f","FileReader","onload","e","result","onerror","readAsDataURL","getCssRules","s","sheet","e_1","trys","push","cssRules","success","error","addEventListener","setTimeout","Error","loadStylesheet","doc","url","response","e_2","rules","load","console","createElement","textContent","nonce","setAttribute","head","appendChild","eachStylesheet","removeChild","topUrl","promises","length","i","rule","type","CSSRule","IMPORT_RULE","href","joinUrl","eachStylesheets","iframe","doc_1","document","src","contentDocument","map","styleSheets","location","Export","_super","container","_this","call","adapter","_formatOptions","_extraSprites","_validateSprites","dataFieldsOrder","_dynamicDataFields","_removedObjects","_hiddenObjects","_objectsAlreadyHidden","_filePrefix","useWebFonts","useRetina","useSimplifiedExport","timeoutDelay","_exportRunning","_prevHasData","_container","className","setKey","quality","fontSize","imageFormat","align","addURL","addColumnNames","indent","useLocale","emptyAs","addBOM","delay","printMethod","add","arg","formatOptions","getKey","merge","applyTheme","dispatchImmediately","Object","defineProperty","prototype","get","_menu","set","menu","removeDispose","language","_language","branch","unsupported","typeSupported","events","on","ev","export","close","_disablePointers","_releasePointers","obj","classPrefix","classNamePrefix","_disposers","enumerable","configurable","supported","getFormatOptions","hasValue","disabled","_hasData","print","indexOf","apply","data","_getFunction","getImage","getSVG","getPDF","getExcel","getCSV","getJSON","getHTML","getPrint","event_1","func","event_2","event_3","handleCustom","isEnabled","showPreloader","hideTimeout","_timeoutTimeout","event_4","showTimeout","hideNonExportableSprites","restoreNonExportableSprites","hidePreloader","title","download","filePrefix","callback","callbackTarget","getFontFamilies","DOMURL","blobs","getDOMURL","FONT_FACE_RULE","cssText_1","cssText","exec","urls","split","after","fullUrl","url_1","e_3","webFontFilter","match","undefined","responseType","createObjectURL","then","filter","x","replace","join","includeExtras","prehidden","canvas","newCanvas","uri","e_4","awaitValidSprites","simplifiedImageExport","getCanvas","addExtras","disposeCanvas","toDataURL","getContentType","message","stack","warn","getImageAdvanced","advanced","middleLeft_1","middleTop_1","middleWidth_1","middleHeight_1","extraRight_1","extraBottom_1","extras","ctx_1","background","left_1","top_1","right_1","bottom_1","extraSprites","width","height","extraSprite","extra","extraCanvas","extraWidth","extraHeight","sprite","position","marginTop","marginRight","marginBottom","marginLeft","exporting","getCanvasAdvanced","crop","max","left","top","getDisposableCanvas","getContext","backgroundColor","findBackgroundColor","dom","fillStyle","toString","fillRect","each","drawImage","font","scale","pixelRatio","ctx","svg","img","pixelWidth","pixelHeight","findFont","findFontSize","getPixelRatio","getAdjustedScale","style","fonts","imagesToDataURI","prepForeignObjects","normalizeSVG","serializeElement","paper","defs","Blob","loadNewImage","revokeObjectURL","restoreRemovedObjects","canvg","config","useCORS","ignoreDimensions","scaleWidth","scaleHeight","fromString","render","body","contains","adjWidth","adjHeight","widthScale","heightScale","maxWidth","maxHeight","min","minWidth","minHeight","el","images","count","image","querySelectorAll","getAttributeNS","XLINK","svgToDataURI","imageToDataURI","objects","temporarilyRemoveObject","e_5","keepTainted","charset","e_6","btoa","setAttributeNS","placeholder","parent","parentElement","parentNode","node","insertBefore","pop","parent_1","element","cache","e_7","e_8","getCache","setCache","crossOrigin","Image","currentHref","removeAttribute","onabort","self","URL","webkitURL","encodeURI","encodeURIComponent","dimParams","Math","round","styleParams","fos","ms","PLACEHOLDER","rgba","isInternetExplorer","reg","RegExp","escapeForRgex","getBaseURI","XMLSerializer","serializeToString","addFont","paths","normal","path","bytes","bold","italics","bolditalics","name","defaultMargins","extraMargin","_b","_c","_d","pageSize","pageOrientation","pageMargins","defaultStyle","content","text","margin","translate","alignment","fit","getPageSizeFit","addData","getPDFData","table","extraFonts","createPdf","getDataUrl","dataFields","dataFieldsOrder_1","len","format","pivot","eachOrdered","key","val","dataRow","dataValue","convertToSpecialFormat","getPDFDataRow","b","ai","bi","headerRows","row","asIs","items","value","convertEmptyValue","item","margins","newMargins","sizes","A0","A1","A2","A3","A4","A5","A6","A7","A8","A9","A10","B0","B1","B2","B3","B4","B5","B6","B7","B8","B9","B10","C0","C1","C2","C3","C4","C5","C6","C7","C8","C9","C10","RA0","RA1","RA2","RA3","RA4","SRA0","SRA1","SRA2","SRA3","SRA4","EXECUTIVE","FOLIO","LEGAL","LETTER","TABLOID","fitSize","XLSX","wbOptions","sheetName","wb","dataFieldsOrder_2","xlsx","bookType","bookSST","normalizeExcelSheetName","SheetNames","Sheets","getExcelRow","utils","aoa_to_sheet","workbook","write","truncateWithEllipsis","csv","br","dataFieldsOrder_3","getCSVRow","reverse","separator","forceQuotes","search","html","dataFieldsOrder_4","tableClass","getHTMLRow","headerRow","rowClass","tag","first","charCodeAt","useTag","cellClass","sourceData","_loop_1","json","newValue_1","field","JSON","stringify","keepOriginal","isDateField","Date","isDurationField","durationFormatter","durationFormat","isNumberField","numberFormat","numberFormatter","useTimestamps","getTime","toLocaleString","dateFormatter","dateFormat","isString","parse","fileName","parts","contentType","decoded","blob_1","chars","charCode","link_1","blob_2","url_2","url_3","link","idoc","msBlobDownloadSupport","shift","decodeURIComponent","atob","msSaveBlob","Array","Uint8Array","blobDownloadSupport","click","concat","linkDownloadSupport","legacyIE","showModal","display","open","execCommand","downloadSupport","res","div","innerHTML","getElementsByTagName","printViaCSS","printViaIframe","scroll","originalTitle","isIOS","documentElement","scrollTop","getShadowRoot","visibility","opacity","clipPath","test","userAgent","MSStream","dispose","contentWindow","currentColor","parent_2","_sprite","validateSprites","_data","_dataFields","generateDataFields","handleDataUpdated","hasData","invalidate","_dateFormatter","_dateFormat","_dateFields","dateFields","_numberFormatter","_numberFormat","_numberFields","numberFields","_durationFormatter","_durationFormat","_durationFields","durationFields","_backgroundColor","_title","preloader","progress","hideModal","_modal","modal","svgContainer","SVGContainer","readerTitle","_canvg","_xlsx","setFormatOptions","_spriteInteractionsEnabled","interactionsEnabled","nonExportableSprites","isHidden","isHiding","visible","hide","show","index","invalid","once","processConfig","registeredClasses","isObject"],"sources":["/home/unutu/go/src/github.com/thteam47/admin-portal/node_modules/@amcharts/amcharts4/.internal/core/export/Export.js"],"sourcesContent":["/**\r\n * Export module.\r\n *\r\n * Parts of Export functionality rely on the following third party libraries:\r\n *\r\n * [canvg.js](https://github.com/canvg/canvg)\r\n * Copyright (c) Gabe Lerner\r\n * Licensed under [MIT](https://github.com/canvg/canvg/blob/master/LICENSE)\r\n *\r\n * [pdfmake](http://pdfmake.org/)\r\n * Copyright (c) 2014 bpampuch\r\n * Licensed under [MIT](https://github.com/bpampuch/pdfmake/blob/master/LICENSE)\r\n *\r\n * [SheetJS Community Edition](https://github.com/sheetjs/js-xlsx)\r\n * Licensed under [Apache License 2.0](https://github.com/SheetJS/js-xlsx/blob/master/LICENSE)\r\n *\r\n * [JSZip](http://stuartk.com/jszip)\r\n * Copyright (c) Stuart Knightley\r\n * Dual licenced under the [MIT license or GPLv3](https://raw.githubusercontent.com/Stuk/jszip/master/LICENSE.markdown).\r\n */\r\nimport { __awaiter, __extends, __generator } from \"tslib\";\r\n/**\r\n * ============================================================================\r\n * IMPORTS\r\n * ============================================================================\r\n * @hidden\r\n */\r\nimport { ExportMenu } from \"./ExportMenu\";\r\nimport { Adapter } from \"../utils/Adapter\";\r\nimport { Sprite } from \"../Sprite\";\r\nimport { Modal } from \"../elements/Modal\";\r\nimport { List } from \"../utils/List\";\r\nimport { Dictionary } from \"../utils/Dictionary\";\r\nimport { DateFormatter } from \"../formatters/DateFormatter\";\r\nimport { DurationFormatter } from \"../formatters/DurationFormatter\";\r\nimport { NumberFormatter } from \"../formatters/NumberFormatter\";\r\nimport { Language } from \"../utils/Language\";\r\nimport { Validatable } from \"../utils/Validatable\";\r\nimport { color } from \"../utils/Color\";\r\nimport { registry } from \"../Registry\";\r\nimport { options } from \"../Options\";\r\nimport { StyleRule, getComputedStyle } from \"../utils/DOM\";\r\nimport * as $browser from \"../utils/Browser\";\r\nimport * as $object from \"../utils/Object\";\r\nimport * as $net from \"../utils/Net\";\r\nimport * as $dom from \"../utils/DOM\";\r\nimport * as $type from \"../utils/Type\";\r\nimport * as $log from \"../utils/Log\";\r\nimport * as $utils from \"../utils/Utils\";\r\nimport * as $array from \"../utils/Array\";\r\nimport * as $math from \"../utils/Math\";\r\nimport * as $strings from \"../utils/Strings\";\r\n// This is used to cache the pdfmake loading\r\nvar pdfmakePromise;\r\n/**\r\n * Loads pdfmake dynamic module\r\n *\r\n * This is an asynchronous function. Check the description of `getImage()`\r\n * for description and example usage.\r\n *\r\n * @ignore Exclude from docs\r\n * @return Instance of pdfmake\r\n * @async\r\n */\r\nfunction _pdfmake() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var a, pdfmake, vfs_fonts, global;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, Promise.all([\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"pdfmake/build/pdfmake.js\"),\r\n                        import(/* webpackChunkName: \"pdfmake\" */ \"../../pdfmake/vfs_fonts\")\r\n                    ])];\r\n                case 1:\r\n                    a = _a.sent();\r\n                    pdfmake = a[0];\r\n                    vfs_fonts = a[1];\r\n                    global = window;\r\n                    global.pdfMake = global.pdfMake || {};\r\n                    global.pdfMake.vfs = vfs_fonts.default;\r\n                    pdfmake.vfs = vfs_fonts.default;\r\n                    return [2 /*return*/, pdfmake];\r\n            }\r\n        });\r\n    });\r\n}\r\n// TODO better parsing\r\nvar fontFamilySrcRegexp = /src: ([^;]+);/;\r\n// TODO better checks\r\nfunction supportsBlobUri() {\r\n    return window.navigator.msSaveOrOpenBlob != null;\r\n}\r\n// TODO move into utils or something ?\r\nfunction blobToDataUri(blob) {\r\n    return new Promise(function (resolve, reject) {\r\n        // TODO handle abort ?\r\n        var f = new FileReader();\r\n        f.onload = function (e) { resolve(f.result); };\r\n        f.onerror = function (e) { reject(e); };\r\n        f.readAsDataURL(blob);\r\n    });\r\n}\r\nfunction getCssRules(s) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var sheet, e_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    sheet = s.sheet;\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, 2, , 4]);\r\n                    return [2 /*return*/, sheet.cssRules];\r\n                case 2:\r\n                    e_1 = _a.sent();\r\n                    return [4 /*yield*/, new Promise(function (success, error) {\r\n                            s.addEventListener(\"load\", function () {\r\n                                success(sheet.cssRules);\r\n                            }, true);\r\n                            s.addEventListener(\"error\", function (e) {\r\n                                error(e);\r\n                            }, true);\r\n                            setTimeout(function () {\r\n                                error(new Error(\"Timeout while waiting for <style> to load\"));\r\n                            }, 10000);\r\n                        })];\r\n                case 3: \r\n                // Needed because of https://bugzilla.mozilla.org/show_bug.cgi?id=625013\r\n                return [2 /*return*/, _a.sent()];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This loads a stylesheet by URL and then calls the function with it\r\n// TODO this should be moved into utils or something\r\nfunction loadStylesheet(doc, url, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var response, e_2, s, rules;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    _a.trys.push([0, 2, , 3]);\r\n                    return [4 /*yield*/, $net.load(url)];\r\n                case 1:\r\n                    response = _a.sent();\r\n                    return [3 /*break*/, 3];\r\n                case 2:\r\n                    e_2 = _a.sent();\r\n                    console.error(\"Failed to load stylesheet\", url, e_2);\r\n                    return [2 /*return*/];\r\n                case 3:\r\n                    s = doc.createElement(\"style\");\r\n                    s.textContent = response.response;\r\n                    if (options.nonce != \"\") {\r\n                        s.setAttribute(\"nonce\", options.nonce);\r\n                    }\r\n                    doc.head.appendChild(s);\r\n                    _a.label = 4;\r\n                case 4:\r\n                    _a.trys.push([4, , 7, 8]);\r\n                    return [4 /*yield*/, getCssRules(s)];\r\n                case 5:\r\n                    rules = _a.sent();\r\n                    return [4 /*yield*/, eachStylesheet(doc, url, rules, f)];\r\n                case 6:\r\n                    _a.sent();\r\n                    return [3 /*break*/, 8];\r\n                case 7:\r\n                    doc.head.removeChild(s);\r\n                    return [7 /*endfinally*/];\r\n                case 8: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule inside of a CSSStyleSheet.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheet(doc, topUrl, rules, f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var promises, length, i, rule, url;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    promises = [];\r\n                    length = rules.length;\r\n                    for (i = 0; i < length; i++) {\r\n                        rule = rules[i];\r\n                        if (rule.type === CSSRule.IMPORT_RULE) {\r\n                            url = rule.href;\r\n                            if (url) {\r\n                                url = $utils.joinUrl(topUrl, url);\r\n                                promises.push(loadStylesheet(doc, url, f));\r\n                            }\r\n                        }\r\n                        else {\r\n                            f(topUrl, rule);\r\n                        }\r\n                    }\r\n                    if (!promises.length) return [3 /*break*/, 2];\r\n                    return [4 /*yield*/, Promise.all(promises)];\r\n                case 1:\r\n                    _a.sent();\r\n                    _a.label = 2;\r\n                case 2: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// This calls a function for each CSSRule for all of the stylesheets in the page.\r\n// If the CSSStyleSheet has any @import, then it will recursively call the function for those CSSRules too.\r\n// TODO this should be moved into utils or something\r\nfunction eachStylesheets(f) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var iframe, doc_1;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    iframe = document.createElement(\"iframe\");\r\n                    // This causes it to use the same origin policy as the parent page\r\n                    iframe.src = \"about:blank\";\r\n                    // This tries to make it more accessible for screen readers\r\n                    iframe.setAttribute(\"title\", \"\");\r\n                    document.head.appendChild(iframe);\r\n                    _a.label = 1;\r\n                case 1:\r\n                    _a.trys.push([1, , 3, 4]);\r\n                    doc_1 = iframe.contentDocument;\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    return [4 /*yield*/, Promise.all($array.map(document.styleSheets, function (sheet) {\r\n                            var url = sheet.href;\r\n                            if (url == null) {\r\n                                return eachStylesheet(doc_1, location.href, sheet.cssRules, f);\r\n                            }\r\n                            else {\r\n                                url = $utils.joinUrl(location.href, url);\r\n                                return loadStylesheet(doc_1, url, f);\r\n                            }\r\n                        }))];\r\n                case 2:\r\n                    // TODO use $dom.getRoot instead of document ?\r\n                    _a.sent();\r\n                    return [3 /*break*/, 4];\r\n                case 3:\r\n                    document.head.removeChild(iframe);\r\n                    return [7 /*endfinally*/];\r\n                case 4: return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * ============================================================================\r\n * MAIN CLASS\r\n * ============================================================================\r\n * @hidden\r\n */\r\n/**\r\n * [[Export]] allows downloading of current snapshot of the chart as an\r\n * image, PDF, or its data in various formats.\r\n *\r\n * The export functionality is enabled by default in charts and is accessible\r\n * via API or optional export menu.\r\n *\r\n * To enable menu, simply access export's `menu` property. E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.menu = new am4core.ExportMenu();\r\n * ```\r\n * ```JSON\r\n * {\r\n *   // ...\r\n *   \"exporting\": {\r\n *     \"menu\": {}\r\n *   }\r\n * }\r\n * ```\r\n *\r\n * To export via API, use `export()` method:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(type, [options]);\r\n * ```\r\n *\r\n * E.g.:\r\n *\r\n * ```TypeScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n * ```JavaScript\r\n * chart.exporting.export(\"png\");\r\n * ```\r\n *\r\n * @todo Better loading indicator?\r\n * @todo Implement multiplier option\r\n * @todo Handling of hanged exports\r\n * @important\r\n */\r\nvar Export = /** @class */ (function (_super) {\r\n    __extends(Export, _super);\r\n    /**\r\n     * Constructor\r\n     */\r\n    function Export(container) {\r\n        var _this = _super.call(this) || this;\r\n        /**\r\n         * Adapter.\r\n         */\r\n        _this.adapter = new Adapter(_this);\r\n        /**\r\n         * Holds options for each format.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._formatOptions = new Dictionary();\r\n        /**\r\n         * Extra [[Sprite]] elements to include in exports.\r\n         */\r\n        _this._extraSprites = [];\r\n        /**\r\n         * A list of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         */\r\n        _this._validateSprites = [];\r\n        /**\r\n         * Holds an array of data field names. If set, exported data fields will try\r\n         * to maintain this order.\r\n         *\r\n         * If not set (default), the export will try to maintain the same order as\r\n         * in source data, or as in `dataFields` (if set).\r\n         *\r\n         * @since 4.9.7\r\n         */\r\n        _this.dataFieldsOrder = [];\r\n        /**\r\n         * Indicates whether data fields were generated dynamically (`true`) or\r\n         * if they were pre-set by the user (`false`).\r\n         */\r\n        _this._dynamicDataFields = true;\r\n        /**\r\n         * Holds a list of objects that were temporarily removed from the DOM while\r\n         * exporting. Those most probably are tainted images, or foreign objects that\r\n         * would otherwise prevent SVG to be converted to canvas.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._removedObjects = new List();\r\n        /**\r\n         * Holds references to the objects that were temporarily hidden when export\r\n         * started, so that we can reveal them back when export ends.\r\n         */\r\n        _this._hiddenObjects = [];\r\n        /**\r\n         * Indicates if non-exportable objects are now hidden;\r\n         */\r\n        _this._objectsAlreadyHidden = false;\r\n        /**\r\n         * Exported files will be prefixed with whatever it is set here.\r\n         *\r\n         * @ignore Exclude from docs\r\n         */\r\n        _this._filePrefix = \"amCharts\";\r\n        /**\r\n         * If you are using web fonts (such as Google Fonts), your chart might be\r\n         * using them as well.\r\n         *\r\n         * Normally, exporting to image will require to download these fonts so the\r\n         * are carried over to exported image.\r\n         *\r\n         * This setting can be used to disable or enable this functionality.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useWebFonts = true;\r\n        /**\r\n         * Many modern displays have use more actual pixels per displayed pixel. This\r\n         * results in sharper images on screen. Unfortunately, when exported to a\r\n         * bitmap image of the sam width/height size it will lose those extra pixels,\r\n         * resulting in somewhat blurry image.\r\n         *\r\n         * This is why we are going to export images larger than they are, so that we\r\n         * don't lose any details.\r\n         *\r\n         * If you'd rather export images without change in size, set this to `false`.\r\n         *\r\n         * @default true\r\n         */\r\n        _this.useRetina = true;\r\n        /**\r\n         * By default Export will try to use built-in method for transforming chart\r\n         * into an image for download, then fallback to external library (canvg) for\r\n         * conversion if failed.\r\n         *\r\n         * Setting this to `false` will force use of external library for all export\r\n         * operations.\r\n         *\r\n         * It might be useful to turn off simplified export if you are using strict\r\n         * content security policies, that disallow images with blobs as their\r\n         * source.\r\n         *\r\n         * @default true\r\n         * @since 4.2.5\r\n         */\r\n        _this.useSimplifiedExport = true;\r\n        /**\r\n         * If export operation takes longer than milliseconds in this second, we will\r\n         * show a modal saying export operation took longer than expected.\r\n         */\r\n        _this.timeoutDelay = 2000;\r\n        _this._exportRunning = false;\r\n        /**\r\n         * Indicator used by [[Component]].\r\n         *\r\n         * @ignore\r\n         */\r\n        _this._prevHasData = false;\r\n        _this._container = container;\r\n        _this.className = \"Export\";\r\n        // Set default options\r\n        _this._formatOptions.setKey(\"png\", {});\r\n        _this._formatOptions.setKey(\"jpg\", {\r\n            quality: 0.8\r\n        });\r\n        _this._formatOptions.setKey(\"gif\", {});\r\n        _this._formatOptions.setKey(\"svg\", {});\r\n        _this._formatOptions.setKey(\"pdf\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            align: \"left\",\r\n            addURL: true,\r\n            addColumnNames: true\r\n        });\r\n        _this._formatOptions.setKey(\"json\", {\r\n            indent: 2,\r\n            useLocale: true\r\n        });\r\n        _this._formatOptions.setKey(\"csv\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\",\r\n            addBOM: true\r\n        });\r\n        _this._formatOptions.setKey(\"xlsx\", {\r\n            addColumnNames: true,\r\n            useLocale: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"html\", {\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"pdfdata\", {\r\n            fontSize: 14,\r\n            imageFormat: \"png\",\r\n            addURL: true,\r\n            addColumnNames: true,\r\n            emptyAs: \"\"\r\n        });\r\n        _this._formatOptions.setKey(\"print\", {\r\n            delay: 500,\r\n            printMethod: \"iframe\"\r\n        });\r\n        // Add options adapter\r\n        _this.adapter.add(\"options\", function (arg) {\r\n            var formatOptions = _this._formatOptions.getKey(arg.type);\r\n            if (arg.options) {\r\n                arg.options = $object.merge(formatOptions, arg.options);\r\n            }\r\n            else {\r\n                arg.options = formatOptions;\r\n            }\r\n            return arg;\r\n        });\r\n        _this.applyTheme();\r\n        _this.dispatchImmediately(\"inited\");\r\n        return _this;\r\n    }\r\n    Object.defineProperty(Export.prototype, \"menu\", {\r\n        /**\r\n         * @return ExportMenu instance\r\n         */\r\n        get: function () {\r\n            return this._menu;\r\n        },\r\n        /**\r\n         * An instance of [[ExportMenu]].\r\n         *\r\n         * To add an export menu to a chart, set this to a new instance of\r\n         * [[ExportMenu]].\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.menu = new am4core.ExportMenu();\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     \"menu\": {}\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @param menu  ExportMenu instance\r\n         */\r\n        set: function (menu) {\r\n            var _this = this;\r\n            if (this._menu) {\r\n                this.removeDispose(this._menu);\r\n            }\r\n            this._menu = menu;\r\n            // Set container and language\r\n            this._menu.container = this.container;\r\n            this._menu.language = this._language;\r\n            // Add adapter to check for browser support\r\n            this._menu.adapter.add(\"branch\", function (arg) {\r\n                arg.branch.unsupported = !_this.typeSupported(arg.branch.type);\r\n                return arg;\r\n            });\r\n            // Add click events\r\n            this._menu.events.on(\"hit\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"enter\", function (ev) {\r\n                _this.export(ev.branch.type, ev.branch.options);\r\n                _this.menu.close();\r\n            });\r\n            this._menu.events.on(\"over\", function (ev) {\r\n                _this._disablePointers();\r\n            });\r\n            this._menu.events.on(\"out\", function (ev) {\r\n                setTimeout(function () { _this._releasePointers(); }, 10);\r\n            });\r\n            // Dispatch event\r\n            this.dispatchImmediately(\"menucreated\");\r\n            // Prefix with Sprite's class name\r\n            this._menu.adapter.add(\"classPrefix\", function (obj) {\r\n                obj.classPrefix = options.classNamePrefix + obj.classPrefix;\r\n                return obj;\r\n            });\r\n            // Add menu to disposers so that it's destroyed when Export is disposed\r\n            this._disposers.push(this._menu);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Checks if this specific menu item type is supported by current system.\r\n     *\r\n     * @param type  Menu item type\r\n     * @return `false` if not supported\r\n     */\r\n    Export.prototype.typeSupported = function (type) {\r\n        var supported = true;\r\n        var options = this.getFormatOptions(type);\r\n        if ($type.hasValue(options) && options.disabled) {\r\n            supported = false;\r\n        }\r\n        else if (type === \"pdf\") {\r\n            //supported = this.downloadSupport();\r\n        }\r\n        else if (type === \"xlsx\") {\r\n            //supported = (this.downloadSupport() && this._hasData()) ? true : false;\r\n            supported = this._hasData() ? true : false;\r\n        }\r\n        else if (type == \"print\" && !window.print) {\r\n            supported = false;\r\n        }\r\n        else if ([\"json\", \"csv\", \"html\", \"pdfdata\"].indexOf(type) !== -1 && !this._hasData()) {\r\n            supported = false;\r\n        }\r\n        return this.adapter.apply(\"supported\", {\r\n            supported: supported,\r\n            type: type\r\n        }).supported;\r\n    };\r\n    /**\r\n     * Checks if data is available.\r\n     *\r\n     * @return Has data?\r\n     */\r\n    Export.prototype._hasData = function () {\r\n        return this.data && this.data.length;\r\n    };\r\n    /**\r\n     * Get function to handle export for particular format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype._getFunction = function (type) {\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n            case \"jpg\":\r\n                return this.getImage;\r\n            case \"svg\":\r\n                return this.getSVG;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                return this.getPDF;\r\n            case \"xlsx\":\r\n                return this.getExcel;\r\n            case \"csv\":\r\n                return this.getCSV;\r\n            case \"json\":\r\n                return this.getJSON;\r\n            case \"html\":\r\n                return this.getHTML;\r\n            case \"print\":\r\n                return this.getPrint;\r\n            default:\r\n                return this.unsupported;\r\n        }\r\n    };\r\n    /**\r\n     * Initiates export procedure.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return `true` if export was successful\r\n     * @async\r\n     */\r\n    Export.prototype.export = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var event_1, func, data, event_2, event_3;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Check if it's a custom item, and do nothing or execute custom callback\r\n                        if (type == \"custom\") {\r\n                            this.handleCustom(options);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        // Set export running flag\r\n                        this._exportRunning = true;\r\n                        // Dispatch event\r\n                        if (this.events.isEnabled(\"exportstarted\")) {\r\n                            event_1 = {\r\n                                \"type\": \"exportstarted\",\r\n                                \"target\": this,\r\n                                \"format\": type,\r\n                                \"options\": options\r\n                            };\r\n                            this.events.dispatchImmediately(\"exportstarted\", event_1);\r\n                        }\r\n                        // Schedule a preloader\r\n                        this.showPreloader();\r\n                        // Schedule a timeout\r\n                        if (this.timeoutDelay) {\r\n                            this.hideTimeout();\r\n                            this._timeoutTimeout = this.setTimeout(function () {\r\n                                // Dispatch event\r\n                                if (_this.events.isEnabled(\"exporttimedout\")) {\r\n                                    var event_4 = {\r\n                                        \"type\": \"exporttimedout\",\r\n                                        \"target\": _this,\r\n                                        \"format\": type,\r\n                                        \"options\": options\r\n                                    };\r\n                                    _this.events.dispatchImmediately(\"exporttimedout\", event_4);\r\n                                }\r\n                                // Show modal\r\n                                _this.showTimeout();\r\n                            }, this.timeoutDelay);\r\n                        }\r\n                        // Hide items that should not be exported\r\n                        this.hideNonExportableSprites();\r\n                        func = this._getFunction(type);\r\n                        // Give chance for plugins to override both function and options\r\n                        options = this.adapter.apply(\"options\", {\r\n                            options: options,\r\n                            type: type\r\n                        }).options;\r\n                        func = this.adapter.apply(\"exportFunction\", {\r\n                            func: func,\r\n                            type: type,\r\n                            options: options\r\n                        }).func;\r\n                        return [4 /*yield*/, func.call(this, type, options)];\r\n                    case 1:\r\n                        data = _a.sent();\r\n                        // Release pointers\r\n                        this._exportRunning = false;\r\n                        this._releasePointers();\r\n                        // Restore temporarily hidden elements\r\n                        this.restoreNonExportableSprites();\r\n                        if (data) {\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"exportfinished\")) {\r\n                                event_2 = {\r\n                                    \"type\": \"exportfinished\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"exportfinished\", event_2);\r\n                            }\r\n                            // Hide preloader and timeout modals\r\n                            this.hidePreloader();\r\n                            this.hideTimeout();\r\n                            if (this.menu) {\r\n                                this.menu.close();\r\n                            }\r\n                            // Download or print\r\n                            if (type === \"print\") {\r\n                                return [2 /*return*/, this.print(data, options, this.adapter.apply(\"title\", {\r\n                                        title: this.title,\r\n                                        options: options\r\n                                    }).title)];\r\n                            }\r\n                            else {\r\n                                if (type == \"pdfdata\") {\r\n                                    return [2 /*return*/, this.download(data, this.filePrefix + \".pdf\")];\r\n                                }\r\n                                return [2 /*return*/, this.download(data, this.filePrefix + \".\" + type, (options && options.addBOM))];\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Throw exception?\r\n                            // @todo\r\n                            // Dispatch event\r\n                            if (this.events.isEnabled(\"error\")) {\r\n                                event_3 = {\r\n                                    \"type\": \"error\",\r\n                                    \"target\": this,\r\n                                    \"format\": type,\r\n                                    \"options\": options\r\n                                };\r\n                                this.events.dispatchImmediately(\"error\", event_3);\r\n                            }\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that should handle unsupported export types.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.unsupported = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                // TODO should this return `undefined`?\r\n                return [2 /*return*/, \"\"];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Handles click on a \"custom\" menu item.\r\n     *\r\n     * Basically, if it has \"callback\" enabled, it will be called. Nothing else.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.handleCustom = function (options) {\r\n        if ($type.hasValue(options) && $type.hasValue(options.callback)) {\r\n            options.callback.call(options.callbackTarget || this, options);\r\n        }\r\n    };\r\n    /**\r\n     * Requests a Print of the chart.\r\n     *\r\n     * @param type     Export type\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPrint = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                return [2 /*return*/, this.getImage(\"png\", options)];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * A function that returns data: URI encoded @font-family, so that way it can be embedded into SVG.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return String which can be embedded directly into a <style> element.\r\n     * @async\r\n     */\r\n    Export.prototype.getFontFamilies = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var DOMURL, blobs, promises, a;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        DOMURL = this.getDOMURL();\r\n                        blobs = [];\r\n                        promises = [];\r\n                        return [4 /*yield*/, eachStylesheets(function (topUrl, rule) {\r\n                                if (rule.type === CSSRule.FONT_FACE_RULE) {\r\n                                    var cssText_1 = rule.cssText;\r\n                                    // TODO this is necessary because Edge doesn't let you access the src using getPropertyValue\r\n                                    var src = fontFamilySrcRegexp.exec(cssText_1);\r\n                                    if (src !== null) {\r\n                                        // TODO make this faster (don't create Promises for non-url stuff)\r\n                                        var urls = src[1].split(/ *, */).map(function (url) { return __awaiter(_this, void 0, void 0, function () {\r\n                                            var a, after, fullUrl, response, url_1, e_3;\r\n                                            return __generator(this, function (_a) {\r\n                                                switch (_a.label) {\r\n                                                    case 0:\r\n                                                        a = /^url\\([\"']?([^\"'\\)]+)[\"']?\\)([^,]*)$/.exec(url);\r\n                                                        if (!(a === null)) return [3 /*break*/, 1];\r\n                                                        return [2 /*return*/, url];\r\n                                                    case 1:\r\n                                                        after = a[2];\r\n                                                        fullUrl = $utils.joinUrl(topUrl, a[1]);\r\n                                                        if (this.webFontFilter && !fullUrl.match(this.webFontFilter)) {\r\n                                                            return [2 /*return*/, null];\r\n                                                        }\r\n                                                        _a.label = 2;\r\n                                                    case 2:\r\n                                                        _a.trys.push([2, 7, , 8]);\r\n                                                        return [4 /*yield*/, $net.load(fullUrl, undefined, { responseType: \"blob\" })];\r\n                                                    case 3:\r\n                                                        response = _a.sent();\r\n                                                        if (!supportsBlobUri()) return [3 /*break*/, 4];\r\n                                                        url_1 = DOMURL.createObjectURL(response.blob);\r\n                                                        blobs.push(url_1);\r\n                                                        return [3 /*break*/, 6];\r\n                                                    case 4: return [4 /*yield*/, blobToDataUri(response.blob)];\r\n                                                    case 5:\r\n                                                        url_1 = _a.sent();\r\n                                                        _a.label = 6;\r\n                                                    case 6: \r\n                                                    // TODO should it should escape the URI ?\r\n                                                    return [2 /*return*/, \"url(\\\"\" + url_1 + \"\\\")\" + after];\r\n                                                    case 7:\r\n                                                        e_3 = _a.sent();\r\n                                                        console.error(\"Failed to load font\", fullUrl, e_3);\r\n                                                        return [2 /*return*/, null];\r\n                                                    case 8: return [2 /*return*/];\r\n                                                }\r\n                                            });\r\n                                        }); });\r\n                                        promises.push(Promise.all(urls).then(function (a) {\r\n                                            a = a.filter(function (x) { return x != null; });\r\n                                            if (a.length === 0) {\r\n                                                return \"\";\r\n                                            }\r\n                                            else {\r\n                                                return cssText_1.replace(fontFamilySrcRegexp, \"src: \" + a.join(\", \") + \";\");\r\n                                            }\r\n                                        }));\r\n                                    }\r\n                                }\r\n                            })];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        return [2 /*return*/, {\r\n                                blobs: blobs,\r\n                                cssText: a.filter(function (x) { return !!x; }).join(\"\\n\")\r\n                            }];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Produces image output from the element.\r\n     *\r\n     * Converts to a `Canvas` first, then produces an image to download.\r\n     *\r\n     * This is an asynchronous function. Rather than returning a result, it\r\n     * returns a Promise.\r\n     *\r\n     * You can use `await` notion from other async functions, or `then()`\r\n     * anywhere else.\r\n     *\r\n     * ```TypeScript\r\n     * let img;\r\n     *\r\n     * // Async\r\n     * img = await chart.exporting.getImage( \"png\" );\r\n     *\r\n     * // Sync\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     * ```JavaScript\r\n     * var img;\r\n     * chart.exporting.getImage( \"png\" ).then( ( data ) => {\r\n     *   img = data;\r\n     * } );\r\n     * ```\r\n     *\r\n     * @param  type           Image format\r\n     * @param  options        Options\r\n     * @param  includeExtras  Should extra sprites be included if set?\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getImage = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, newCanvas, uri, e_4, data, data;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        return [4 /*yield*/, this.simplifiedImageExport()];\r\n                    case 2:\r\n                        if (!_a.sent()) return [3 /*break*/, 10];\r\n                        canvas = void 0;\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        _a.trys.push([3, 7, , 9]);\r\n                        return [4 /*yield*/, this.getCanvas(options)];\r\n                    case 4:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 6];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options)];\r\n                    case 5:\r\n                        newCanvas = _a.sent();\r\n                        this.disposeCanvas(canvas);\r\n                        canvas = newCanvas;\r\n                        _a.label = 6;\r\n                    case 6:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                    case 7:\r\n                        e_4 = _a.sent();\r\n                        console.error(e_4.message + \"\\n\" + e_4.stack);\r\n                        $log.warn(\"Simple export failed, falling back to advanced export\");\r\n                        if (canvas) {\r\n                            this.disposeCanvas(canvas);\r\n                        }\r\n                        return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 8:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 9: return [3 /*break*/, 12];\r\n                    case 10: return [4 /*yield*/, this.getImageAdvanced(type, options, includeExtras)];\r\n                    case 11:\r\n                        data = _a.sent();\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, data];\r\n                    case 12: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Adds extra elements to the canvas.\r\n     *\r\n     * @param  canvas   Original canvas\r\n     * @param  options  Options\r\n     */\r\n    Export.prototype.addExtras = function (canvas, options, advanced) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var middleLeft_1, middleTop_1, middleWidth_1, middleHeight_1, extraRight_1, extraBottom_1, extras, newCanvas, ctx_1, background, left_1, top_1, right_1, bottom_1;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!this.extraSprites.length) return [3 /*break*/, 2];\r\n                        middleLeft_1 = 0;\r\n                        middleTop_1 = 0;\r\n                        middleWidth_1 = canvas.width;\r\n                        middleHeight_1 = canvas.height;\r\n                        extraRight_1 = 0;\r\n                        extraBottom_1 = 0;\r\n                        return [4 /*yield*/, Promise.all($array.map(this.extraSprites, function (extraSprite) { return __awaiter(_this, void 0, void 0, function () {\r\n                                var extra, extraCanvas, extraWidth, extraHeight;\r\n                                return __generator(this, function (_a) {\r\n                                    switch (_a.label) {\r\n                                        case 0:\r\n                                            if (extraSprite instanceof Sprite) {\r\n                                                extra = {\r\n                                                    sprite: extraSprite,\r\n                                                    position: \"bottom\"\r\n                                                };\r\n                                            }\r\n                                            else {\r\n                                                extra = extraSprite;\r\n                                            }\r\n                                            // Set defaults\r\n                                            extra.position = extra.position || \"bottom\";\r\n                                            extra.marginTop = extra.marginTop || 0;\r\n                                            extra.marginRight = extra.marginRight || 0;\r\n                                            extra.marginBottom = extra.marginBottom || 0;\r\n                                            extra.marginLeft = extra.marginLeft || 0;\r\n                                            if (!advanced) return [3 /*break*/, 2];\r\n                                            return [4 /*yield*/, extra.sprite.exporting.getCanvasAdvanced(options)];\r\n                                        case 1:\r\n                                            extraCanvas = _a.sent();\r\n                                            return [3 /*break*/, 4];\r\n                                        case 2: return [4 /*yield*/, extra.sprite.exporting.getCanvas(options)];\r\n                                        case 3:\r\n                                            extraCanvas = _a.sent();\r\n                                            _a.label = 4;\r\n                                        case 4:\r\n                                            extraWidth = extraCanvas.width + extra.marginLeft + extra.marginRight;\r\n                                            extraHeight = extraCanvas.height + extra.marginTop + extra.marginBottom;\r\n                                            if (extra.position == \"top\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                middleTop_1 += extraHeight;\r\n                                            }\r\n                                            else if (extra.position == \"right\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                extraRight_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position == \"left\") {\r\n                                                middleHeight_1 = extra.crop ? middleHeight_1 : $math.max(middleHeight_1, extraHeight);\r\n                                                middleLeft_1 += extraWidth;\r\n                                            }\r\n                                            else if (extra.position === \"bottom\") {\r\n                                                middleWidth_1 = extra.crop ? middleHeight_1 : $math.max(middleWidth_1, extraWidth);\r\n                                                extraBottom_1 += extraHeight;\r\n                                            }\r\n                                            return [2 /*return*/, {\r\n                                                    canvas: extraCanvas,\r\n                                                    position: extra.position,\r\n                                                    left: extra.marginLeft,\r\n                                                    top: extra.marginTop,\r\n                                                    width: extraWidth,\r\n                                                    height: extraHeight\r\n                                                }];\r\n                                    }\r\n                                });\r\n                            }); }))];\r\n                    case 1:\r\n                        extras = _a.sent();\r\n                        newCanvas = this.getDisposableCanvas();\r\n                        newCanvas.width = middleLeft_1 + middleWidth_1 + extraRight_1;\r\n                        newCanvas.height = middleTop_1 + middleHeight_1 + extraBottom_1;\r\n                        ctx_1 = newCanvas.getContext(\"2d\");\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        if (background) {\r\n                            ctx_1.fillStyle = background.toString();\r\n                            ctx_1.fillRect(0, 0, newCanvas.width, newCanvas.height);\r\n                        }\r\n                        left_1 = middleLeft_1;\r\n                        top_1 = middleTop_1;\r\n                        right_1 = left_1 + middleWidth_1;\r\n                        bottom_1 = top_1 + middleHeight_1;\r\n                        // Radiates outwards from center\r\n                        $array.each(extras, function (extra) {\r\n                            if (extra.position == \"top\") {\r\n                                top_1 -= extra.height;\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, top_1 + extra.top);\r\n                            }\r\n                            else if (extra.position == \"right\") {\r\n                                ctx_1.drawImage(extra.canvas, right_1 + extra.left, middleTop_1 + extra.top);\r\n                                right_1 += extra.width;\r\n                            }\r\n                            else if (extra.position == \"left\") {\r\n                                left_1 -= extra.width;\r\n                                ctx_1.drawImage(extra.canvas, left_1 + extra.left, middleTop_1 + extra.top);\r\n                            }\r\n                            else if (extra.position === \"bottom\") {\r\n                                ctx_1.drawImage(extra.canvas, middleLeft_1 + extra.left, bottom_1 + extra.top);\r\n                                bottom_1 += extra.height;\r\n                            }\r\n                            _this.disposeCanvas(extra.canvas);\r\n                        });\r\n                        ctx_1.drawImage(canvas, middleLeft_1, middleTop_1);\r\n                        return [2 /*return*/, newCanvas];\r\n                    case 2: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]].\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvas = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, DOMURL, url, blobs, canvas, width, height, font, fontSize, scale, pixelRatio, ctx, promises, a, data, svg, img;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        DOMURL = this.getDOMURL();\r\n                        url = null;\r\n                        blobs = null;\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, , 4, 5]);\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        // Create canvas and its 2D context\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = width * scale + 'px';\r\n                        canvas.style.height = height * scale + 'px';\r\n                        canvas.width = width * scale;\r\n                        canvas.height = height * scale;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        // if (pixelRatio != 1) {\r\n                        // \tctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n                        // }\r\n                        // Add background if necessary\r\n                        if (background) {\r\n                            ctx.fillStyle = background.toString();\r\n                            ctx.fillRect(0, 0, width * scale, height * scale);\r\n                        }\r\n                        promises = [];\r\n                        if (this.useWebFonts) {\r\n                            // TODO what if one of the other things errors before it's been able to set `blobs` ?\r\n                            promises.push(this.getFontFamilies().then(function (fonts) {\r\n                                blobs = fonts.blobs;\r\n                                return fonts.cssText;\r\n                            }));\r\n                        }\r\n                        promises.push(this.imagesToDataURI(this.sprite.dom, options));\r\n                        promises.push(this.prepForeignObjects(this.sprite.dom, options));\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 2:\r\n                        a = _a.sent();\r\n                        data = this.normalizeSVG(\"<style>\" + a[0] + \"</style>\" + this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        svg = new Blob([data], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        return [4 /*yield*/, this.loadNewImage(url, width * scale * pixelRatio, height * scale * pixelRatio, \"anonymous\")];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        // Draw image on canvas\r\n                        ctx.drawImage(img, 0, 0);\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        if (url !== null) {\r\n                            DOMURL.revokeObjectURL(url);\r\n                        }\r\n                        if (blobs !== null) {\r\n                            $array.each(blobs, function (url) {\r\n                                DOMURL.revokeObjectURL(url);\r\n                            });\r\n                        }\r\n                        // Restore replaced tainted images in DOM\r\n                        this.restoreRemovedObjects();\r\n                        return [7 /*endfinally*/];\r\n                    case 5: return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns canvas representation of the [[Sprite]] using canvg.\r\n     *\r\n     * @param   options  Options\r\n     * @return           Canvas\r\n     */\r\n    Export.prototype.getCanvasAdvanced = function (options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var background, canvg, width, height, font, fontSize, scale, pixelRatio, data, canvas, config;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        // Options are set?\r\n                        if (!$type.hasValue(options)) {\r\n                            options = {};\r\n                        }\r\n                        // Convert external images to data uris\r\n                        return [4 /*yield*/, this.imagesToDataURI(this.sprite.dom, options)];\r\n                    case 1:\r\n                        // Convert external images to data uris\r\n                        _a.sent();\r\n                        background = this.backgroundColor || this.findBackgroundColor(this.sprite.dom);\r\n                        return [4 /*yield*/, this.canvg];\r\n                    case 2:\r\n                        canvg = _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        data = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize, background);\r\n                        canvas = this.getDisposableCanvas();\r\n                        // Set canvas width/height\r\n                        canvas.style.width = (width * pixelRatio * scale) + 'px';\r\n                        canvas.style.height = (height * pixelRatio * scale) + 'px';\r\n                        canvas.width = width * pixelRatio * scale;\r\n                        canvas.height = height * pixelRatio * scale;\r\n                        config = {\r\n                            //ignoreDimensions: true,\r\n                            useCORS: true\r\n                        };\r\n                        if (pixelRatio != 1) {\r\n                            config.ignoreDimensions = true;\r\n                            config.scaleWidth = width * pixelRatio * scale;\r\n                            config.scaleHeight = height * pixelRatio * scale;\r\n                        }\r\n                        return [4 /*yield*/, canvg.fromString(canvas.getContext(\"2d\"), data, config).render()];\r\n                    case 3:\r\n                        _a.sent();\r\n                        return [2 /*return*/, canvas];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Tries to dynamically load [canvg.js](https://github.com/canvg/canvg) and\r\n     * export an image using its functions.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Image format\r\n     * @param options  Options\r\n     * @return Data uri\r\n     */\r\n    Export.prototype.getImageAdvanced = function (type, options, includeExtras) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, canvas, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(type);\r\n                        }\r\n                        return [4 /*yield*/, this.getCanvasAdvanced(options)];\r\n                    case 1:\r\n                        canvas = _a.sent();\r\n                        if (!(includeExtras !== false)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, this.addExtras(canvas, options, true)];\r\n                    case 2:\r\n                        canvas = _a.sent();\r\n                        _a.label = 3;\r\n                    case 3:\r\n                        uri = canvas.toDataURL(this.getContentType(type), options.quality);\r\n                        // Get rid of the canvas\r\n                        this.disposeCanvas(canvas);\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Creates a `<canvas>` element and returns it.\r\n     *\r\n     * @return Canvas element\r\n     */\r\n    Export.prototype.getDisposableCanvas = function () {\r\n        var canvas = document.createElement(\"canvas\");\r\n        canvas.style.position = \"fixed\";\r\n        canvas.style.top = \"-10000px\";\r\n        document.body.appendChild(canvas);\r\n        return canvas;\r\n    };\r\n    /**\r\n     * Removes canvas.\r\n     *\r\n     * @param canvas  Canvas element\r\n     */\r\n    Export.prototype.disposeCanvas = function (canvas) {\r\n        if (document.body.contains(canvas)) {\r\n            document.body.removeChild(canvas);\r\n        }\r\n    };\r\n    /**\r\n     * Returns pixel ratio for retina displays.\r\n     *\r\n     * @return Pixel ratio\r\n     */\r\n    Export.prototype.getPixelRatio = function (options) {\r\n        // const scale = options && options.scale ? options.scale : 1;\r\n        // return (this.useRetina ? $utils.getPixelRatio() : 1) * scale;\r\n        return this.useRetina ? $utils.getPixelRatio() : 1;\r\n    };\r\n    /**\r\n     * Calculates adjusted scale if image does not fit or is larger than min/max\r\n     * settings.\r\n     *\r\n     * @param   width    Width of the source image\r\n     * @param   height   Height of the source image\r\n     * @param   scale    Current scale\r\n     * @param   options  Options\r\n     * @return           Adjusted scale\r\n     */\r\n    Export.prototype.getAdjustedScale = function (width, height, scale, options) {\r\n        if (!options) {\r\n            return scale;\r\n        }\r\n        var adjWidth = width * scale;\r\n        var adjHeight = width * scale;\r\n        // Check max restrictions\r\n        var widthScale;\r\n        var heightScale;\r\n        if (options.maxWidth && (adjWidth > options.maxWidth)) {\r\n            widthScale = options.maxWidth / width;\r\n        }\r\n        if (options.maxHeight && (adjHeight > options.maxHeight)) {\r\n            heightScale = options.maxHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.min(widthScale, heightScale);\r\n        }\r\n        // Check min restrictions\r\n        if (options.minWidth && (adjWidth < options.minWidth)) {\r\n            widthScale = options.minWidth / width;\r\n        }\r\n        if (options.minHeight && (adjHeight < options.minHeight)) {\r\n            heightScale = options.minHeight / height;\r\n        }\r\n        if (widthScale || heightScale) {\r\n            return $math.max(widthScale, heightScale);\r\n        }\r\n        return scale;\r\n    };\r\n    /**\r\n     * Converts all `<image>` tags in SVG to use data uris instead of external\r\n     * URLs\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.imagesToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var images, promises, count, i, image, href;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        images = el.querySelectorAll(\"image\");\r\n                        if (!images.length) return [3 /*break*/, 2];\r\n                        promises = [];\r\n                        // There are images, process each of them\r\n                        for (count = images.length, i = 0; i < count; i++) {\r\n                            image = images[i];\r\n                            href = image.getAttributeNS(Export.XLINK, \"href\");\r\n                            // no href?\r\n                            if (!href) {\r\n                                continue;\r\n                            }\r\n                            if (href.indexOf(\"data:image\") !== -1) {\r\n                                // Ignore image if it's already in Data URI format\r\n                            }\r\n                            else {\r\n                                // SVG or bitmap image?\r\n                                if (href.indexOf(\".svg\") !== -1) {\r\n                                    promises.push(this.svgToDataURI(image, options));\r\n                                }\r\n                                else {\r\n                                    promises.push(this.imageToDataURI(image, options));\r\n                                }\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        return [2 /*return*/];\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * `foreignObject` elements cannot be exported. This function hides them\r\n     * temprarily. In the future it might try to convert them to SVG to make them\r\n     * exportable.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG node\r\n     * @param options  Options\r\n     * @return Promise\r\n     */\r\n    Export.prototype.prepForeignObjects = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var objects, count, i;\r\n            return __generator(this, function (_a) {\r\n                objects = el.querySelectorAll(\"foreignObject\");\r\n                if (objects.length) {\r\n                    // There are foreign objects, process each of them\r\n                    for (count = objects.length, i = 0; i < count; i++) {\r\n                        this.temporarilyRemoveObject(objects[i]);\r\n                    }\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts an SVG `<image>` to use its data uri for `href` instead of\r\n     * external file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el       SVG element\r\n     * @param options  Options\r\n     */\r\n    Export.prototype.imageToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var img, canvas, uri, e_5;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        _a.trys.push([0, 2, , 3]);\r\n                        return [4 /*yield*/, this.loadNewImage(el.getAttributeNS(Export.XLINK, \"href\"), null, null, \"anonymous\")];\r\n                    case 1:\r\n                        // Create image\r\n                        img = _a.sent();\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = img.width;\r\n                        canvas.height = img.height;\r\n                        // Draw new image on it via `toDataURL`\r\n                        canvas.getContext(\"2d\").drawImage(img, 0, 0);\r\n                        // Replace image `href` with data uri\r\n                        // If we got to this point it means image has loaded, however we might\r\n                        // still get an error with `toDataURL()`\r\n                        try {\r\n                            uri = canvas.toDataURL();\r\n                            el.setAttribute(\"href\", uri);\r\n                            return [2 /*return*/, uri];\r\n                        }\r\n                        catch (e) {\r\n                            // Give up and temporarily remove the element href temporarily\r\n                            if (options.keepTainted !== false) {\r\n                                /*this._removedObjects.push({\r\n                                    \"element\": el,\r\n                                    \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                                });\r\n                                el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                                this.temporarilyRemoveObject(el);\r\n                            }\r\n                            return [2 /*return*/, undefined];\r\n                        }\r\n                        return [3 /*break*/, 3];\r\n                    case 2:\r\n                        e_5 = _a.sent();\r\n                        // Give up and temporarily remove the element's href\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": el.getAttributeNS(Export.XLINK, \"href\")\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 3: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts `<image>` with external SVG source to data uri. Loads external SVG\r\n     * file, then converts it to data uri and replaces the `xlink:href` parameter.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el        An SVG element\r\n     * @param options   Options\r\n     */\r\n    Export.prototype.svgToDataURI = function (el, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var href, data, charset, uri, e_6;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        href = el.getAttributeNS(Export.XLINK, \"href\");\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 3, , 4]);\r\n                        return [4 /*yield*/, $net.load(href)];\r\n                    case 2:\r\n                        data = _a.sent();\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"base64\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"svgToDataURI\", {\r\n                            data: \"data:\" + this.getContentType(\"svg\") + \";\" + charset + \",\" + btoa(data.response),\r\n                            options: options\r\n                        }).data;\r\n                        el.setAttributeNS(Export.XLINK, \"href\", uri);\r\n                        return [2 /*return*/, uri];\r\n                    case 3:\r\n                        e_6 = _a.sent();\r\n                        // Disable temporarily\r\n                        if (!options || options.keepTainted !== false) {\r\n                            /*this._removedObjects.push({\r\n                                \"element\": el,\r\n                                \"originalHref\": href\r\n                            });\r\n                            el.setAttributeNS(Export.XLINK, \"href\", \"\");*/\r\n                            this.temporarilyRemoveObject(el);\r\n                        }\r\n                        return [2 /*return*/, undefined];\r\n                    case 4: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Temporarily removes element from DOM, and replaces it with a dummy\r\n     * placeholder, as well as stores it for later restoration.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param el Node\r\n     */\r\n    Export.prototype.temporarilyRemoveObject = function (el, placeholder) {\r\n        // Get parent\r\n        var parent = el.parentElement || el.parentNode;\r\n        // Create a placeholder group element if it has not been passed in\r\n        if (!placeholder) {\r\n            placeholder = this.sprite.paper.add(\"g\").node;\r\n        }\r\n        parent.insertBefore(placeholder, el);\r\n        // Check if we have a textContents we can replace with\r\n        // @todo Perhaps we should explore alternatives to creating text nodes\r\n        // i.e. creating a text version of the HTML-based Text, just for export\r\n        // purposes. Converting HTML into SVG is very complicated\r\n        if (el.textContent) {\r\n            /*let text = this.sprite.paper.add(\"text\").node;\r\n            text.textContent = el.textContent;\r\n            placeholder.appendChild(text);\r\n\r\n            // Copy properties from the removing element to the placeholder\r\n            $dom.copyAttributes(el, placeholder);*/\r\n        }\r\n        // Remove the old element\r\n        parent.removeChild(el);\r\n        // Log removed item\r\n        this._removedObjects.push({\r\n            \"element\": el,\r\n            \"placeholder\": placeholder\r\n        });\r\n    };\r\n    /**\r\n     * Restores all (possibly tainted or unsupported) objects that were\r\n     * temporarily removed when exporting.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.restoreRemovedObjects = function () {\r\n        var obj;\r\n        while (true) {\r\n            obj = this._removedObjects.pop();\r\n            if (!obj) {\r\n                break;\r\n            }\r\n            //obj.element.setAttribute(\"href\", obj.originalHref);\r\n            var parent_1 = obj.placeholder.parentElement || obj.placeholder.parentNode;\r\n            parent_1.insertBefore(obj.element, obj.placeholder);\r\n            //parent.removeChild(obj.placeholder);\r\n        }\r\n    };\r\n    /**\r\n     * Checkes if simplified export can be used using `createObjectURL` and SVG\r\n     * document does not contain any external images.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return `true` if simplified export can be used\r\n     */\r\n    Export.prototype.simplifiedImageExport = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var cache, canvas, ctx, DOMURL, svg, url, img, e_7, e_8;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (this.useSimplifiedExport === false) {\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        cache = registry.getCache(\"simplifiedImageExport\");\r\n                        if (cache === false || cache === true) {\r\n                            return [2 /*return*/, cache];\r\n                        }\r\n                        _a.label = 1;\r\n                    case 1:\r\n                        _a.trys.push([1, 6, , 7]);\r\n                        canvas = document.createElement(\"canvas\");\r\n                        canvas.width = 1;\r\n                        canvas.height = 1;\r\n                        ctx = canvas.getContext(\"2d\");\r\n                        DOMURL = this.getDOMURL();\r\n                        svg = new Blob([this.normalizeSVG(\"<g></g>\", {}, 1, 1)], { type: \"image/svg+xml\" });\r\n                        url = DOMURL.createObjectURL(svg);\r\n                        img = void 0;\r\n                        _a.label = 2;\r\n                    case 2:\r\n                        _a.trys.push([2, 4, , 5]);\r\n                        return [4 /*yield*/, this.loadNewImage(url, 1, 1)];\r\n                    case 3:\r\n                        img = _a.sent();\r\n                        return [3 /*break*/, 5];\r\n                    case 4:\r\n                        e_7 = _a.sent();\r\n                        return [2 /*return*/, false];\r\n                    case 5:\r\n                        ctx.drawImage(img, 0, 0);\r\n                        DOMURL.revokeObjectURL(url);\r\n                        try {\r\n                            //let uri = canvas.toDataURL(\"image/png\");\r\n                            registry.setCache(\"simplifiedImageExport\", true);\r\n                            return [2 /*return*/, true];\r\n                        }\r\n                        catch (e) {\r\n                            registry.setCache(\"simplifiedImageExport\", false);\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 6:\r\n                        e_8 = _a.sent();\r\n                        registry.setCache(\"simplifiedImageExport\", false);\r\n                        return [2 /*return*/, false];\r\n                    case 7: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns a new `<image>` element.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param url          URL of the image\r\n     * @param width        Width (px)\r\n     * @param height       Height (px)\r\n     * @param crossOrigin  Cross-Origin setting\r\n     * @return Promise\r\n     */\r\n    Export.prototype.loadNewImage = function (url, width, height, crossOrigin) {\r\n        return new Promise(function (success, error) {\r\n            // New image\r\n            var image;\r\n            if (width && height) {\r\n                image = new Image(width, height);\r\n            }\r\n            else {\r\n                image = new Image();\r\n            }\r\n            // Set crossorigin\r\n            if (crossOrigin) {\r\n                image.setAttribute(\"crossOrigin\", crossOrigin);\r\n            }\r\n            // Report success on load\r\n            image.onload = function () {\r\n                success(image);\r\n            };\r\n            function onerror() {\r\n                // Error occurred. Just in case it's the crossOrigin issue, let's try\r\n                // stripping off this attribute and trying again\r\n                if (crossOrigin) {\r\n                    // Retain old uri\r\n                    var currentHref = image.src;\r\n                    // Set up another `onerror` to handle situations where image is not\r\n                    // loadable at all (i.e. protected by CORS)\r\n                    image.onerror = function () {\r\n                        // Nope, no luck\r\n                        error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                    };\r\n                    // remove the `crossOrigin` attribute\r\n                    image.removeAttribute(\"crossorigin\");\r\n                    // retry\r\n                    image.src = \"\";\r\n                    image.src = currentHref;\r\n                }\r\n                else {\r\n                    error(new Error(\"Loading image \\\"\" + url + \"\\\" failed\"));\r\n                }\r\n            }\r\n            // Set image error handlers\r\n            image.onabort = onerror;\r\n            image.onerror = onerror;\r\n            // Trigger load\r\n            image.src = url;\r\n        });\r\n    };\r\n    /**\r\n     * Returns current DOM URL.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return URL\r\n     */\r\n    Export.prototype.getDOMURL = function () {\r\n        return self.URL || self.webkitURL || self;\r\n    };\r\n    /**\r\n     * Returns an SVG representation of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     */\r\n    Export.prototype.getSVG = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var prehidden, width, height, font, fontSize, scale, pixelRatio, svg, charset, uri;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        prehidden = this._objectsAlreadyHidden;\r\n                        if (!prehidden) {\r\n                            this.hideNonExportableSprites();\r\n                        }\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"svg\");\r\n                        }\r\n                        // Wait for required elements to be ready before proceeding\r\n                        return [4 /*yield*/, this.awaitValidSprites()];\r\n                    case 1:\r\n                        // Wait for required elements to be ready before proceeding\r\n                        _a.sent();\r\n                        width = this.sprite.pixelWidth;\r\n                        height = this.sprite.pixelHeight;\r\n                        font = $dom.findFont(this.sprite.dom);\r\n                        fontSize = $dom.findFontSize(this.sprite.dom);\r\n                        scale = options.scale || 1;\r\n                        pixelRatio = this.getPixelRatio(options);\r\n                        // Check if scale needs to be updated as per min/max dimensions\r\n                        scale = this.getAdjustedScale(width * pixelRatio, height * pixelRatio, scale, options);\r\n                        svg = this.normalizeSVG(this.serializeElement(this.sprite.paper.defs) + this.serializeElement(this.sprite.dom), options, width, height, scale, font, fontSize);\r\n                        charset = this.adapter.apply(\"charset\", {\r\n                            charset: \"charset=utf-8\",\r\n                            type: \"svg\",\r\n                            options: options\r\n                        }).charset;\r\n                        uri = this.adapter.apply(\"getSVG\", {\r\n                            data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(svg) : svg,\r\n                            options: options\r\n                        }).data;\r\n                        if (!prehidden) {\r\n                            this.restoreNonExportableSprites();\r\n                        }\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Checks if SVG is fully formatted. Encloses in `<svg>...</svg>` if\r\n     * necessary.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param svg       Input SVG\r\n     * @param options   Options\r\n     * @param width     Width of the SVG viewport\r\n     * @param height    Height of the SVG viewport\r\n     * @param font      Font family to use as a base\r\n     * @param fontSize  Font size to use as a base\r\n     * @return Output SVG\r\n     * @todo Add style params to existing <svg>\r\n     */\r\n    Export.prototype.normalizeSVG = function (svg, options, width, height, scale, font, fontSize, background) {\r\n        // Construct width/height params\r\n        var dimParams = \"\";\r\n        if (width) {\r\n            dimParams += \"width=\\\"\" + Math.round(width * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        if (height) {\r\n            dimParams += \"height=\\\"\" + Math.round(height * (scale || 1)) + \"px\\\" \";\r\n        }\r\n        // Apply font settings\r\n        var styleParams = \"\";\r\n        if (font) {\r\n            styleParams += \"font-family: \" + font.replace(/\"/g, \"\") + \";\";\r\n        }\r\n        if (fontSize) {\r\n            styleParams += \"font-size: \" + fontSize + \";\";\r\n        }\r\n        // Scale\r\n        if (scale) {\r\n            dimParams += \"viewBox=\\\"0 0 \" + (width) + \" \" + (height) + \"\\\" \";\r\n        }\r\n        // Remove foreign objects temporarily\r\n        var fos = [];\r\n        var ms = svg.match(/<foreignObject[\\s\\S]*<\\/foreignObject>/gi);\r\n        if (ms) {\r\n            for (var i = 0; i < ms.length; i++) {\r\n                svg = svg.replace(ms[i], $strings.PLACEHOLDER);\r\n                fos.push(ms[i]);\r\n            }\r\n        }\r\n        // Add missing <svg> enclosure\r\n        if (!svg.match(/<svg/)) {\r\n            svg = \"<?xml version=\\\"1.0\\\" encoding=\\\"utf-8\\\"?><svg \" + dimParams + \" style=\\\"\" + styleParams + \"\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\" + svg + \"</svg>\";\r\n        }\r\n        else {\r\n            if (dimParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)width=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }\r\n            /*if (styleParams !== \"\") {\r\n                // Clear current params\r\n                svg = svg.replace(/(<svg[^>]*)stylewidth=\"[^\"]*\"/, \"$1\");\r\n                svg = svg.replace(/(<svg[^>]*)height=\"[^\"]*\"/, \"$1\");\r\n\r\n                // Add new params\r\n                svg = svg.replace(/(<svg)/, \"$1\" + dimParams);\r\n            }*/\r\n        }\r\n        if (background) {\r\n            svg = svg.replace(/(<svg[^>]*>)/, \"$1<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/>\");\r\n            //svg = svg.replace(/<\\/svg>/, \"<rect width=\\\"100%\\\" height=\\\"100%\\\" fill=\\\"\" + background.rgba + \"\\\"/></svg>\");\r\n        }\r\n        if ($browser.isInternetExplorer()) {\r\n            // IE can't handle exporting <feColorMatrix> for some reason\r\n            svg = svg.replace(/<feColorMatrix [^\\/>]*\\/>/gi, \"\");\r\n        }\r\n        // Remove base uri-related stuff\r\n        var reg = new RegExp(\"url\\\\(\" + $utils.escapeForRgex($utils.getBaseURI()), \"g\");\r\n        svg = svg.replace(reg, \"url(#\");\r\n        // Remove escaped quotes in url() parameters\r\n        svg = svg.replace(/url\\(&quot;([^)]*)&quot;\\)/gm, \"url($1)\");\r\n        // Put foreignObjects back in\r\n        if (fos.length) {\r\n            for (var i = 0; i < fos.length; i++) {\r\n                svg = svg.replace($strings.PLACEHOLDER, fos[i]);\r\n            }\r\n        }\r\n        svg = this.adapter.apply(\"normalizeSVG\", {\r\n            data: svg,\r\n            options: options\r\n        }).data;\r\n        return svg;\r\n    };\r\n    /**\r\n     * Serializes an element and returns its contents.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element  An element to serialize\r\n     * @return A serialized XML\r\n     */\r\n    Export.prototype.serializeElement = function (element) {\r\n        return new XMLSerializer().serializeToString(element);\r\n    };\r\n    /**\r\n     * Returns a PDF containing chart image.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Account for header when calculating vertical fit\r\n     */\r\n    Export.prototype.getPDF = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            function addFont(font) {\r\n                var paths = {};\r\n                paths.normal = font.normal.path;\r\n                vfs[font.normal.path] = font.normal.bytes;\r\n                if (font.bold) {\r\n                    paths.bold = font.bold.path;\r\n                    vfs[font.bold.path] = font.bold.bytes;\r\n                }\r\n                else {\r\n                    paths.bold = font.normal.path;\r\n                }\r\n                if (font.italics) {\r\n                    paths.italics = font.italics.path;\r\n                    vfs[font.italics.path] = font.italics.bytes;\r\n                }\r\n                else {\r\n                    paths.italics = font.normal.path;\r\n                }\r\n                if (font.bolditalics) {\r\n                    paths.bolditalics = font.bolditalics.path;\r\n                    vfs[font.bolditalics.path] = font.bolditalics.bytes;\r\n                }\r\n                else {\r\n                    paths.bolditalics = font.normal.path;\r\n                }\r\n                fonts[font.name] = paths;\r\n            }\r\n            var image, pdfmake, defaultMargins, doc, title, extraMargin, _a, _b, _c, fonts, vfs;\r\n            return __generator(this, function (_d) {\r\n                switch (_d.label) {\r\n                    case 0: return [4 /*yield*/, this.getImage(options.imageFormat || \"png\", options)];\r\n                    case 1:\r\n                        image = _d.sent();\r\n                        return [4 /*yield*/, this.pdfmake];\r\n                    case 2:\r\n                        pdfmake = _d.sent();\r\n                        defaultMargins = [30, 30, 30, 30];\r\n                        doc = {\r\n                            pageSize: options.pageSize || \"A4\",\r\n                            pageOrientation: options.pageOrientation || \"portrait\",\r\n                            pageMargins: options.pageMargins || defaultMargins,\r\n                            defaultStyle: {\r\n                                font: options.font ? options.font.name : undefined\r\n                            },\r\n                            //header: <any>[],\r\n                            content: []\r\n                        };\r\n                        title = this.adapter.apply(\"title\", {\r\n                            title: this.title,\r\n                            options: options\r\n                        }).title;\r\n                        extraMargin = 0;\r\n                        if (title) {\r\n                            doc.content.push({\r\n                                text: title,\r\n                                fontSize: options.fontSize || 14,\r\n                                bold: true,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for title\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add page URL?\r\n                        if (options.addURL) {\r\n                            doc.content.push({\r\n                                text: this.language.translate(\"Saved from\") + \": \" + document.location.href,\r\n                                fontSize: options.fontSize,\r\n                                margin: [0, 0, 0, 15]\r\n                            });\r\n                            // Add some leftover margin for URL\r\n                            extraMargin += 50;\r\n                        }\r\n                        // Add image\r\n                        if (type != \"pdfdata\") {\r\n                            doc.content.push({\r\n                                image: image,\r\n                                alignment: options.align || \"left\",\r\n                                fit: this.getPageSizeFit(doc.pageSize, doc.pageMargins, extraMargin)\r\n                            });\r\n                        }\r\n                        if (!(type == \"pdfdata\" || options.addData)) return [3 /*break*/, 4];\r\n                        _b = (_a = doc.content).push;\r\n                        _c = {};\r\n                        return [4 /*yield*/, this.getPDFData(\"pdf\", options)];\r\n                    case 3:\r\n                        _b.apply(_a, [(_c.table = _d.sent(),\r\n                                _c.fontSize = options.fontSize || 14,\r\n                                _c)]);\r\n                        _d.label = 4;\r\n                    case 4:\r\n                        // Apply adapters\r\n                        doc = this.adapter.apply(\"pdfmakeDocument\", {\r\n                            doc: doc,\r\n                            options: options\r\n                        }).doc;\r\n                        fonts = null;\r\n                        vfs = null;\r\n                        if (options.font) {\r\n                            fonts = {};\r\n                            vfs = {};\r\n                            addFont(options.font);\r\n                            if (options.extraFonts) {\r\n                                $array.each(options.extraFonts, addFont);\r\n                            }\r\n                        }\r\n                        return [4 /*yield*/, new Promise(function (success, error) {\r\n                                pdfmake.createPdf(doc, null, fonts, vfs).getDataUrl(function (uri) {\r\n                                    success(uri);\r\n                                });\r\n                            })];\r\n                    case 5: \r\n                    // Create PDF\r\n                    return [2 /*return*/, _d.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns chart's data formatted suitable for PDF export (pdfmake).\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getPDFData = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var content, dataFields, data, dataFieldsOrder_1, len, i;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                content = {\r\n                    \"body\": []\r\n                };\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"pdf\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_1 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"pdfdata\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        content.body.push(_this.getPDFDataRow(dataRow, options, undefined, true));\r\n                    }, function (a, b) {\r\n                        //console.log(a, b)\r\n                        var ai = dataFieldsOrder_1.indexOf(a);\r\n                        var bi = dataFieldsOrder_1.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return 1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return -1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        content.body.push(this.getPDFDataRow(dataFields, options, undefined, true));\r\n                        content.headerRows = 1;\r\n                    }\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        content.body.push(this.getPDFDataRow(data[i], options, dataFields));\r\n                    }\r\n                }\r\n                return [2 /*return*/, this.adapter.apply(\"pdfmakeTable\", {\r\n                        table: content,\r\n                        options: options\r\n                    }).table];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of data for use in PDF data table (pdfmake).\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @since 4.7.0\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated Data line\r\n     */\r\n    Export.prototype.getPDFDataRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"pdfdata\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            item = \"\" + item;\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns fit dimensions for available page sizes.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param pageSize Page size\r\n     * @return `[width, height]` in pixels\r\n     */\r\n    Export.prototype.getPageSizeFit = function (pageSize, margins, extraMargin) {\r\n        if (extraMargin === void 0) { extraMargin = 0; }\r\n        // Check margins\r\n        var newMargins = [0, 0, 0, 0];\r\n        if (typeof margins == \"number\") {\r\n            newMargins = [margins, margins, margins, margins];\r\n        }\r\n        else if (margins.length == 2) {\r\n            newMargins = [margins[0], margins[1], margins[0], margins[1]];\r\n        }\r\n        else if (margins.length == 4) {\r\n            newMargins = margins;\r\n        }\r\n        // Define available page sizes\r\n        var sizes = {\r\n            \"4A0\": [4767.87, 6740.79],\r\n            \"2A0\": [3370.39, 4767.87],\r\n            A0: [2383.94, 3370.39],\r\n            A1: [1683.78, 2383.94],\r\n            A2: [1190.55, 1683.78],\r\n            A3: [841.89, 1190.55],\r\n            A4: [595.28, 841.89],\r\n            A5: [419.53, 595.28],\r\n            A6: [297.64, 419.53],\r\n            A7: [209.76, 297.64],\r\n            A8: [147.40, 209.76],\r\n            A9: [104.88, 147.40],\r\n            A10: [73.70, 104.88],\r\n            B0: [2834.65, 4008.19],\r\n            B1: [2004.09, 2834.65],\r\n            B2: [1417.32, 2004.09],\r\n            B3: [1000.63, 1417.32],\r\n            B4: [708.66, 1000.63],\r\n            B5: [498.90, 708.66],\r\n            B6: [354.33, 498.90],\r\n            B7: [249.45, 354.33],\r\n            B8: [175.75, 249.45],\r\n            B9: [124.72, 175.75],\r\n            B10: [87.87, 124.72],\r\n            C0: [2599.37, 3676.54],\r\n            C1: [1836.85, 2599.37],\r\n            C2: [1298.27, 1836.85],\r\n            C3: [918.43, 1298.27],\r\n            C4: [649.13, 918.43],\r\n            C5: [459.21, 649.13],\r\n            C6: [323.15, 459.21],\r\n            C7: [229.61, 323.15],\r\n            C8: [161.57, 229.61],\r\n            C9: [113.39, 161.57],\r\n            C10: [79.37, 113.39],\r\n            RA0: [2437.80, 3458.27],\r\n            RA1: [1729.13, 2437.80],\r\n            RA2: [1218.90, 1729.13],\r\n            RA3: [864.57, 1218.90],\r\n            RA4: [609.45, 864.57],\r\n            SRA0: [2551.18, 3628.35],\r\n            SRA1: [1814.17, 2551.18],\r\n            SRA2: [1275.59, 1814.17],\r\n            SRA3: [907.09, 1275.59],\r\n            SRA4: [637.80, 907.09],\r\n            EXECUTIVE: [521.86, 756.00],\r\n            FOLIO: [612.00, 936.00],\r\n            LEGAL: [612.00, 1008.00],\r\n            LETTER: [612.00, 792.00],\r\n            TABLOID: [792.00, 1224.00]\r\n        };\r\n        // Calculate size\r\n        var fitSize = sizes[pageSize];\r\n        fitSize[0] -= newMargins[0] + newMargins[2];\r\n        fitSize[1] -= newMargins[1] + newMargins[3] + extraMargin;\r\n        return fitSize;\r\n    };\r\n    /**\r\n     * Returns an Excel file of chart's data.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type     Type of the export\r\n     * @param options  Options\r\n     * @return Promise\r\n     * @async\r\n     * @todo Handle dates\r\n     * @todo Support for multi-sheet\r\n     */\r\n    Export.prototype.getExcel = function (type, options) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var XLSX, wbOptions, sheetName, wb, data, dataFields, dataFieldsOrder_2, len, i, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        if (!$type.hasValue(options)) {\r\n                            options = this.getFormatOptions(\"xlsx\");\r\n                        }\r\n                        return [4 /*yield*/, this.xlsx];\r\n                    case 1:\r\n                        XLSX = _a.sent();\r\n                        wbOptions = this.adapter.apply(\"xlsxWorkbookOptions\", {\r\n                            xlsx: XLSX,\r\n                            options: {\r\n                                bookType: \"xlsx\",\r\n                                bookSST: false,\r\n                                type: \"base64\",\r\n                            }\r\n                        }).options;\r\n                        sheetName = this.normalizeExcelSheetName(this.adapter.apply(\"xlsxSheetName\", {\r\n                            xlsx: XLSX,\r\n                            name: this.title || this.language.translate(\"Data\")\r\n                        }).name);\r\n                        wb = {\r\n                            SheetNames: [sheetName],\r\n                            Sheets: {}\r\n                        };\r\n                        data = [];\r\n                        dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                            dataFields: this.dataFields,\r\n                            format: \"xslx\"\r\n                        }).dataFields;\r\n                        // Vertical or horizontal (default) layout\r\n                        if (options.pivot) {\r\n                            dataFieldsOrder_2 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                                dataFieldsOrder: this.dataFieldsOrder,\r\n                                format: \"xlsx\"\r\n                            }).dataFieldsOrder;\r\n                            $object.eachOrdered(dataFields, function (key, val) {\r\n                                var dataRow = [];\r\n                                if (options.addColumnNames) {\r\n                                    dataRow.push(val);\r\n                                }\r\n                                for (var len = _this.data.length, i = 0; i < len; i++) {\r\n                                    var dataValue = _this.data[i][key];\r\n                                    dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                                }\r\n                                data.push(_this.getExcelRow(dataRow, options, undefined, true));\r\n                            }, function (a, b) {\r\n                                //console.log(a, b)\r\n                                var ai = dataFieldsOrder_2.indexOf(a);\r\n                                var bi = dataFieldsOrder_2.indexOf(b);\r\n                                if (ai > bi) {\r\n                                    return 1;\r\n                                }\r\n                                else if (ai < bi) {\r\n                                    return -1;\r\n                                }\r\n                                return 0;\r\n                            });\r\n                        }\r\n                        else {\r\n                            // Add column names?\r\n                            if (options.addColumnNames) {\r\n                                data.push(this.getExcelRow(dataFields, options, undefined, true));\r\n                            }\r\n                            // Add lines\r\n                            for (len = this.data.length, i = 0; i < len; i++) {\r\n                                data.push(this.getExcelRow(this.data[i], options, dataFields));\r\n                            }\r\n                        }\r\n                        // Create sheet and add data\r\n                        wb.Sheets[sheetName] = XLSX.utils.aoa_to_sheet(data);\r\n                        // Apply adapters\r\n                        wb = this.adapter.apply(\"xlsxWorkbook\", {\r\n                            xlsx: XLSX,\r\n                            workbook: wb,\r\n                            options: options\r\n                        }).workbook;\r\n                        uri = this.adapter.apply(\"getExcel\", {\r\n                            data: \"data:\" + this.getContentType(type) + \";base64,\" + XLSX.write(wb, wbOptions),\r\n                            options: options\r\n                        }).data;\r\n                        return [2 /*return*/, uri];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * This is needed to work around Excel limitations.\r\n     *\r\n     * @param name  Source name\r\n     * @return Normalized name\r\n     */\r\n    Export.prototype.normalizeExcelSheetName = function (name) {\r\n        name = name.replace(/([:\\\\\\/?*\\[\\]]+)/g, \" \");\r\n        return $utils.truncateWithEllipsis(name, 31, \"...\", true);\r\n    };\r\n    /**\r\n     * Rertuns an array of values to be used as Excel row.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         Row data\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Array of values\r\n     */\r\n    Export.prototype.getExcelRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"xlsx\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options, true);\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items;\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as CSV.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getCSV = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var csv, dataFields, br, data, dataFieldsOrder_3, len, i, row, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"csv\");\r\n                }\r\n                csv = \"\";\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"csv\"\r\n                }).dataFields;\r\n                br = \"\";\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_3 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"csv\"\r\n                    }).dataFieldsOrder;\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        csv += br + _this.getCSVRow(dataRow, options, undefined, true);\r\n                        br = \"\\n\";\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_3.indexOf(a);\r\n                        var bi = dataFieldsOrder_3.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                }\r\n                else {\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        row = this.getCSVRow(data[i], options, dataFields);\r\n                        if (options.reverse) {\r\n                            csv = row + br + csv;\r\n                        }\r\n                        else {\r\n                            csv += br + row;\r\n                        }\r\n                        br = \"\\n\";\r\n                    }\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        csv = this.getCSVRow(dataFields, options, undefined, true) + br + csv;\r\n                    }\r\n                }\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getCSV\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(csv) : csv,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of CSV data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated CSV line\r\n     */\r\n    Export.prototype.getCSVRow = function (row, options, dataFields, asIs) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        // Init\r\n        var separator = options.separator || \",\";\r\n        var items = [];\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"csv\"\r\n        }).dataFieldsOrder;\r\n        // Process each row item\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Check if we need to skip\r\n            // This is no longer required because we are iterating via dataFields anyway\r\n            /*if ($type.hasValue(this.dataFields) && !$type.hasValue(this.dataFields[key])) {\r\n                return;\r\n            }*/\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Cast and escape doublequotes\r\n            item = \"\" + item;\r\n            item = item.replace(/\"/g, '\"\"');\r\n            // Enclose into double quotes\r\n            if (options.forceQuotes || (item.search(new RegExp(\"\\\"|\\n|\" + separator, \"g\")) >= 0)) {\r\n                item = \"\\\"\" + item + \"\\\"\";\r\n            }\r\n            // Add to item\r\n            items.push(item);\r\n        }, function (a, b) {\r\n            //console.log(a, b)\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        return items.join(separator);\r\n    };\r\n    /**\r\n     * Returns chart's data formatted as HTML table.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @since 4.7.0\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getHTML = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var html, dataFields, data, dataFieldsOrder_4, len, i, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"html\");\r\n                }\r\n                html = \"<table>\";\r\n                if (options.tableClass) {\r\n                    html = \"<table class=\\\"\" + options.tableClass + \"\\\">\";\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"html\"\r\n                }).dataFields;\r\n                data = this.data;\r\n                // Vertical or horizontal (default) layout\r\n                if (options.pivot) {\r\n                    dataFieldsOrder_4 = this.adapter.apply(\"dataFieldsOrder\", {\r\n                        dataFieldsOrder: this.dataFieldsOrder,\r\n                        format: \"html\"\r\n                    }).dataFieldsOrder;\r\n                    html += \"\\n<tbody>\";\r\n                    $object.eachOrdered(dataFields, function (key, val) {\r\n                        var dataRow = [];\r\n                        if (options.addColumnNames) {\r\n                            dataRow.push(val);\r\n                        }\r\n                        for (var len = data.length, i = 0; i < len; i++) {\r\n                            var dataValue = data[i][key];\r\n                            dataRow.push(_this.convertToSpecialFormat(key, dataValue, options, true));\r\n                        }\r\n                        html += \"\\n\" + _this.getHTMLRow(dataRow, options, undefined, true);\r\n                    }, function (a, b) {\r\n                        var ai = dataFieldsOrder_4.indexOf(a);\r\n                        var bi = dataFieldsOrder_4.indexOf(b);\r\n                        if (ai > bi) {\r\n                            return -1;\r\n                        }\r\n                        else if (ai < bi) {\r\n                            return 1;\r\n                        }\r\n                        return 0;\r\n                    });\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                else {\r\n                    // Add column names?\r\n                    if (options.addColumnNames) {\r\n                        html += \"\\n<thead>\\n\" + this.getHTMLRow(dataFields, options, undefined, true, true) + \"\\n</thead>\";\r\n                    }\r\n                    html += \"\\n<tbody>\";\r\n                    for (len = data.length, i = 0; i < len; i++) {\r\n                        html += \"\\n\" + this.getHTMLRow(data[i], options, dataFields);\r\n                    }\r\n                    html += \"\\n</tbody>\";\r\n                }\r\n                html += \"\\n</table>\";\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getHTML\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(html) : html,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Formats a row of HTML data.\r\n     *\r\n     * @since 4.7.0\r\n     * @ignore Exclude from docs\r\n     * @param  row         An object holding data for the row\r\n     * @param  options     Options\r\n     * @param  dataFields  Data fields\r\n     * @param  asIs        Do not try to convert to dates\r\n     * @return Formated HTML row\r\n     */\r\n    Export.prototype.getHTMLRow = function (row, options, dataFields, asIs, headerRow) {\r\n        var _this = this;\r\n        if (asIs === void 0) { asIs = false; }\r\n        if (headerRow === void 0) { headerRow = false; }\r\n        // Init output\r\n        var html = \"\\t<tr>\";\r\n        if (options.rowClass) {\r\n            html = \"\\t<tr class=\\\"\" + options.rowClass + \"\\\">\";\r\n        }\r\n        // Data fields\r\n        if (!dataFields) {\r\n            dataFields = row;\r\n        }\r\n        // Data fields order\r\n        var dataFieldsOrder = this.adapter.apply(\"dataFieldsOrder\", {\r\n            dataFieldsOrder: this.dataFieldsOrder,\r\n            format: \"html\"\r\n        }).dataFieldsOrder;\r\n        // th or dh?\r\n        var tag = headerRow ? \"th\" : \"td\";\r\n        // Process each row item\r\n        var first = true;\r\n        $object.eachOrdered(dataFields, function (key, name) {\r\n            // Get value\r\n            var value = _this.convertEmptyValue(key, row[key], options);\r\n            // Convert dates\r\n            var item = asIs ? value : _this.convertToSpecialFormat(key, value, options);\r\n            // Escape HTML entities\r\n            item = \"\" + item;\r\n            item = item.replace(/[\\u00A0-\\u9999<>\\&]/gim, function (i) {\r\n                return \"&#\" + i.charCodeAt(0) + \";\";\r\n            });\r\n            // Which tag to use\r\n            var useTag = tag;\r\n            if (options.pivot && first) {\r\n                useTag = \"th\";\r\n            }\r\n            // Add cell\r\n            if (options.cellClass) {\r\n                html += \"\\n\\t\\t<\" + useTag + \" class=\\\"\" + options.cellClass + \"\\\">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            else {\r\n                html += \"\\n\\t\\t<\" + useTag + \">\" + item + \"</\" + useTag + \">\";\r\n            }\r\n            first = false;\r\n        }, function (a, b) {\r\n            var ai = dataFieldsOrder.indexOf(a);\r\n            var bi = dataFieldsOrder.indexOf(b);\r\n            if (ai > bi) {\r\n                return 1;\r\n            }\r\n            else if (ai < bi) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        });\r\n        html += \"\\n\\t</tr>\";\r\n        return html;\r\n    };\r\n    /**\r\n     * Returns chart's data in JSON format.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param type       Type of the export\r\n     * @param options    Options\r\n     * @param encodeURI  If true, will return result will be data URI\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.getJSON = function (type, options, encodeURI) {\r\n        if (encodeURI === void 0) { encodeURI = true; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var data, dataFields, sourceData, _loop_1, len, i, json, charset, uri;\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                if (!$type.hasValue(options)) {\r\n                    options = this.getFormatOptions(\"json\");\r\n                }\r\n                dataFields = this.adapter.apply(\"formatDataFields\", {\r\n                    dataFields: this.dataFields,\r\n                    format: \"json\"\r\n                }).dataFields;\r\n                if (!this._dynamicDataFields) {\r\n                    data = [];\r\n                    sourceData = this.data;\r\n                    _loop_1 = function (len, i) {\r\n                        var value = sourceData[i];\r\n                        if (typeof value == \"object\") {\r\n                            var newValue_1 = {};\r\n                            $object.each(value, function (field, item) {\r\n                                if ($type.hasValue(dataFields[field])) {\r\n                                    newValue_1[dataFields[field]] = _this.convertToSpecialFormat(field, item, options);\r\n                                }\r\n                            });\r\n                            data.push(newValue_1);\r\n                        }\r\n                    };\r\n                    for (len = sourceData.length, i = 0; i < len; i++) {\r\n                        _loop_1(len, i);\r\n                    }\r\n                }\r\n                else {\r\n                    data = this.data;\r\n                }\r\n                json = JSON.stringify(data, function (key, value) {\r\n                    if (typeof value == \"object\") {\r\n                        $object.each(value, function (field, item) {\r\n                            value[field] = _this.convertToSpecialFormat(field, item, options);\r\n                        });\r\n                    }\r\n                    return value;\r\n                }, options.indent);\r\n                charset = this.adapter.apply(\"charset\", {\r\n                    charset: \"charset=utf-8\",\r\n                    type: type,\r\n                    options: options\r\n                }).charset;\r\n                uri = this.adapter.apply(\"getJSON\", {\r\n                    data: encodeURI ? \"data:\" + this.getContentType(type) + \";\" + charset + \",\" + encodeURIComponent(json) : json,\r\n                    options: options\r\n                }).data;\r\n                return [2 /*return*/, uri];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Converts the value to proper date format.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param  field         Field name\r\n     * @param  value         Value\r\n     * @param  options       Options\r\n     * @param  keepOriginal  Will ignore formatting and will keep value as it is in data\r\n     * @return Formatted date value or unmodified value\r\n     */\r\n    Export.prototype.convertToSpecialFormat = function (field, value, options, keepOriginal) {\r\n        // Is this a timestamp or duration?\r\n        if (typeof value == \"number\") {\r\n            if (this.isDateField(field)) {\r\n                value = new Date(value);\r\n            }\r\n            else if (this.isDurationField(field)) {\r\n                return this.durationFormatter.format(value, this.durationFormat);\r\n            }\r\n            else if (this.isNumberField(field) && this.numberFormat) {\r\n                return this.numberFormatter.format(value, this.numberFormat);\r\n            }\r\n        }\r\n        if (value instanceof Date) {\r\n            if (options.useTimestamps) {\r\n                value = value.getTime();\r\n            }\r\n            else if (options.useLocale) {\r\n                if (!keepOriginal) {\r\n                    value = value.toLocaleString();\r\n                }\r\n            }\r\n            else {\r\n                value = this.dateFormatter.format(value, this.dateFormat);\r\n            }\r\n        }\r\n        else if ($type.isString(value) && this.isDateField(field) && this.dateFormat) {\r\n            value = this.dateFormatter.format(this.dateFormatter.parse(value), this.dateFormat);\r\n        }\r\n        return value;\r\n    };\r\n    /**\r\n     * Converts empty value based on `emptyAs` option.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.convertEmptyValue = function (field, value, options) {\r\n        return $type.hasValue(value) ? value : options.emptyAs;\r\n    };\r\n    /**\r\n     * Triggers download of the file.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param uri       Data URI with file content\r\n     * @param fileName  File name\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.download = function (uri, fileName, addBOM) {\r\n        if (addBOM === void 0) { addBOM = false; }\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var parts, contentType, decoded, blob_1, chars, i, charCode, blob, link_1, parts, contentType, decoded, blob_2, url_2, chars, i, charCode, blob, url_3, link, parts, contentType, iframe, idoc;\r\n            return __generator(this, function (_a) {\r\n                if (this.msBlobDownloadSupport()) {\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    // Check if we need to Base64-decode\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        blob_1 = new Blob([uri], { type: contentType });\r\n                        window.navigator.msSaveBlob(blob_1, fileName);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    window.navigator.msSaveBlob(blob, fileName);\r\n                }\r\n                else if (this.blobDownloadSupport()) {\r\n                    link_1 = document.createElement(\"a\");\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    parts = uri.split(\";\");\r\n                    contentType = parts.shift().replace(/data:/, \"\");\r\n                    uri = decodeURIComponent(parts.join(\";\").replace(/^[^,]*,/, \"\"));\r\n                    if ([\"image/svg+xml\", \"application/json\", \"text/csv\", \"text/html\"].indexOf(contentType) == -1) {\r\n                        try {\r\n                            decoded = atob(uri);\r\n                            uri = decoded;\r\n                        }\r\n                        catch (e) {\r\n                            // Error occurred, meaning string was not Base64-encoded. Do nothing.\r\n                            return [2 /*return*/, false];\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (addBOM) {\r\n                            uri = \"\\ufeff\" + uri;\r\n                        }\r\n                        blob_2 = new Blob([uri], { type: contentType });\r\n                        url_2 = window.URL.createObjectURL(blob_2);\r\n                        link_1.href = url_2;\r\n                        link_1.download = fileName;\r\n                        link_1.click();\r\n                        setTimeout(function () {\r\n                            document.body.removeChild(link_1);\r\n                            window.URL.revokeObjectURL(url_2);\r\n                        }, 100);\r\n                        return [2 /*return*/, true];\r\n                    }\r\n                    chars = new Array(uri.length);\r\n                    for (i = 0; i < uri.length; ++i) {\r\n                        charCode = uri.charCodeAt(i);\r\n                        chars[i] = charCode;\r\n                    }\r\n                    if (addBOM) {\r\n                        chars = [0xEF, 0xBB, 0xBF].concat(chars);\r\n                    }\r\n                    blob = new Blob([new Uint8Array(chars)], { type: contentType });\r\n                    url_3 = window.URL.createObjectURL(blob);\r\n                    link_1.href = url_3;\r\n                    link_1.download = fileName;\r\n                    document.body.appendChild(link_1);\r\n                    link_1.click();\r\n                    document.body.removeChild(link_1);\r\n                    setTimeout(function () {\r\n                        window.URL.revokeObjectURL(url_3);\r\n                    }, 100);\r\n                }\r\n                else if (this.linkDownloadSupport()) {\r\n                    link = document.createElement(\"a\");\r\n                    link.download = fileName;\r\n                    link.href = uri;\r\n                    document.body.appendChild(link);\r\n                    link.click();\r\n                    document.body.removeChild(link);\r\n                }\r\n                else if (this.legacyIE()) {\r\n                    parts = uri.match(/^data:(.*);[ ]*([^,]*),(.*)$/);\r\n                    if (parts.length === 4) {\r\n                        // Base64-encoded or text-based stuff?\r\n                        if (parts[2] == \"base64\") {\r\n                            // Base64-encoded - probably an image\r\n                            if (parts[1].match(/^image\\//)) {\r\n                                // Yep, an image. Let's create a temporary image placeholder,\r\n                                // so that user can use do Save As.\r\n                                this.showModal(\"<img src=\\\"\" + uri + \"\\\" style=\\\"float: left; max-width: 50%; max-height: 80%; margin: 0 1em 0.5em 0; border: 1px solid #eee;\\\" />\" +\r\n                                    \"<p>\" + this.language.translate(\"To save the image, right-click thumbnail on the left and choose \\\"Save picture as...\\\"\") +\r\n                                    \"</p>\" +\r\n                                    \"<p style=\\\"text-align: center;\\\"><small>\" + this.language.translate(\"(Press ESC to close this message)\") + \"</small></p>\", this.language.translate(\"Image Export Complete\"));\r\n                            }\r\n                        }\r\n                        else {\r\n                            contentType = void 0;\r\n                            if (fileName.match(/\\.svg$/)) {\r\n                                contentType = \"image/svg+xml\";\r\n                            }\r\n                            else {\r\n                                contentType = \"text/plain\";\r\n                                fileName += \".txt\";\r\n                            }\r\n                            iframe = document.createElement(\"iframe\");\r\n                            iframe.width = \"1px\";\r\n                            iframe.height = \"1px\";\r\n                            iframe.style.display = \"none\";\r\n                            document.body.appendChild(iframe);\r\n                            idoc = iframe.contentDocument;\r\n                            idoc.open(contentType, \"replace\");\r\n                            // TODO test this with various encodings (e.g. UTF)\r\n                            //idoc.charset = parts[2].replace(/charset=/, \"\");\r\n                            idoc.write(decodeURIComponent(parts[3]));\r\n                            idoc.close();\r\n                            idoc.execCommand(\"SaveAs\", true, fileName);\r\n                            // Destroy the iframe\r\n                            document.body.removeChild(iframe);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    /**\r\n                     * Something else - perhaps a mobile.\r\n                     * Let's just display it in the same page.\r\n                     * (hey we don't like it either)\r\n                     */\r\n                    window.location.href = uri;\r\n                }\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Returns `true` if browser has any supported methods to trigger download\r\n     * of a binary file.\r\n     *\r\n     * @return Supports downloads?\r\n     */\r\n    Export.prototype.downloadSupport = function () {\r\n        //return !this.legacyIE();\r\n        return this.linkDownloadSupport() || this.msBlobDownloadSupport();\r\n    };\r\n    /**\r\n     * Checks if the browser supports \"download\" attribute on links.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.linkDownloadSupport = function () {\r\n        // Do we have this cached?\r\n        var cache = registry.getCache(\"linkDownloadSupport\");\r\n        if (cache === false || cache === true) {\r\n            return cache;\r\n        }\r\n        var a = document.createElement(\"a\");\r\n        var res = typeof a.download !== \"undefined\";\r\n        registry.setCache(\"linkDownloadSupport\", res);\r\n        return res;\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.blobDownloadSupport = function () {\r\n        return $type.hasValue(window.Blob);\r\n    };\r\n    /**\r\n     * Checks if the browser supports download via `msBlob`.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Browser supports triggering downloads?\r\n     */\r\n    Export.prototype.msBlobDownloadSupport = function () {\r\n        return $type.hasValue(window.navigator.msSaveOrOpenBlob);\r\n    };\r\n    /**\r\n     * Checks if this is a legacy version of IE.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return IE9 or less?\r\n     */\r\n    Export.prototype.legacyIE = function () {\r\n        // Create a temporary <div> with conditional tags in it an an <i> tag.\r\n        // Count <i>s. If there are some, we have IE9 or late on our hands.\r\n        var div = document.createElement(\"div\");\r\n        div.innerHTML = \"<!--[if lt IE 10]><i></i><![endif]-->\";\r\n        return div.getElementsByTagName(\"i\").length == 1;\r\n    };\r\n    /**\r\n     * Initiates print of the chart.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @param data     Data URI for the image\r\n     * @param options  Options\r\n     * @param title    Optional title to use (uses window's title by default)\r\n     * @return Promise\r\n     * @async\r\n     */\r\n    Export.prototype.print = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                if (options.printMethod == \"css\") {\r\n                    return [2 /*return*/, this.printViaCSS(data, options, title)];\r\n                }\r\n                else {\r\n                    return [2 /*return*/, this.printViaIframe(data, options, title)];\r\n                }\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaCSS = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var scroll, rule, originalTitle, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                scroll = document.documentElement.scrollTop || document.body.scrollTop;\r\n                rule = new StyleRule($dom.getShadowRoot(this.container), \"body > *\", {\r\n                    \"display\": \"none\",\r\n                    \"position\": \"fixed\",\r\n                    \"visibility\": \"hidden\",\r\n                    \"opacity\": \"0\",\r\n                    \"clipPath\": \"polygon(0px 0px,0px 0px,0px 0px,0px 0px);\"\r\n                });\r\n                if (title && document && document.title) {\r\n                    originalTitle = document.title;\r\n                    document.title = title;\r\n                }\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.display = \"block\";\r\n                img.style.position = \"relative\";\r\n                img.style.visibility = \"visible\";\r\n                img.style.opacity = \"1\";\r\n                img.style.clipPath = \"none\";\r\n                document.body.appendChild(img);\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    window.print();\r\n                }, 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(img);\r\n                    // Reset back all elements\r\n                    /*for (let len = items.length, i = 0; i < len; i++) {\r\n                        let item = <HTMLElement>items[i];\r\n                        if ($dom.isElement(item)) {\r\n                            item.style.display = states[i];\r\n                        }\r\n                    }*/\r\n                    rule.dispose();\r\n                    // Restore title\r\n                    if (originalTitle) {\r\n                        document.title = document.title;\r\n                    }\r\n                    // Scroll back the document the way it was before\r\n                    document.documentElement.scrollTop = document.body.scrollTop = scroll;\r\n                }, options.delay || 500);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    Export.prototype.printViaIframe = function (data, options, title) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var iframe, img, isIOS;\r\n            return __generator(this, function (_a) {\r\n                iframe = document.createElement(\"iframe\");\r\n                iframe.style.visibility = \"hidden\";\r\n                document.body.appendChild(iframe);\r\n                // This is needed for FireFox\r\n                iframe.contentWindow.document.open();\r\n                iframe.contentWindow.document.close();\r\n                img = new Image();\r\n                img.src = data;\r\n                img.style.maxWidth = \"100%\";\r\n                img.style.height = \"auto\";\r\n                if (title) {\r\n                    iframe.contentWindow.document.title = title;\r\n                }\r\n                iframe.contentWindow.document.body.appendChild(img);\r\n                iframe.load = function () {\r\n                    iframe.contentWindow.document.body.appendChild(img);\r\n                };\r\n                // Print\r\n                this.setTimeout(function () {\r\n                    try {\r\n                        if (!iframe.contentWindow.document.execCommand(\"print\", false, null)) {\r\n                            iframe.contentWindow.print();\r\n                        }\r\n                    }\r\n                    catch (e) {\r\n                        iframe.contentWindow.print();\r\n                    }\r\n                }, options.delay || 50);\r\n                isIOS = /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n                if (isIOS && (options.delay < 1000)) {\r\n                    options.delay = 1000;\r\n                }\r\n                else if (options.delay < 100) {\r\n                    options.delay = 100;\r\n                }\r\n                // Delay function that resets back the document the way ot was before\r\n                this.setTimeout(function () {\r\n                    // Remove image\r\n                    document.body.removeChild(iframe);\r\n                }, options.delay + 50 || 100);\r\n                return [2 /*return*/, true];\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Finds a background color for the element. If element is transparent it goes\r\n     * up the DOM hierarchy to find a parent element that does.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param element Element\r\n     * @return Color code\r\n     */\r\n    Export.prototype.findBackgroundColor = function (element) {\r\n        // Check if element has styles set\r\n        var opacity = 1, currentColor = getComputedStyle(element, \"background-color\");\r\n        // Check opacity\r\n        if (currentColor.match(/[^,]*,[^,]*,[^,]*,[ ]?0/) || currentColor == \"transparent\") {\r\n            opacity = 0;\r\n        }\r\n        if (opacity == 0) {\r\n            var parent_2 = element.parentElement; // || <Element>element.parentNode;\r\n            // Completely transparent. Look for a parent\r\n            if (parent_2) {\r\n                return this.findBackgroundColor(parent_2);\r\n            }\r\n            else {\r\n                return color(\"#fff\");\r\n            }\r\n        }\r\n        else {\r\n            return color(currentColor, opacity);\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"container\", {\r\n        /**\r\n         * @return Reference\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"container\", {\r\n                container: this._container\r\n            }).container;\r\n        },\r\n        /**\r\n         * A reference to a container to be used to place [[ExportMenu]] in.\r\n         *\r\n         * @param value Reference\r\n         */\r\n        set: function (value) {\r\n            this._container = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"sprite\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"sprite\", {\r\n                sprite: this._sprite\r\n            }).sprite;\r\n        },\r\n        /**\r\n         * A reference to [[Sprite]] to export. Can be any Sprite, including some\r\n         * internal elements.\r\n         *\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._sprite = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"extraSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"extraSprites\", {\r\n                extraSprites: this._extraSprites\r\n            }).extraSprites;\r\n        },\r\n        /**\r\n         * An array of extra [[Sprite]] elements to include in export.\r\n         *\r\n         * It can be used to export any external elements, or even other charts.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.extraSprites.push(chart2);\r\n         * ```\r\n         *\r\n         * IMPORTANT: This setting is ignored when exporting to SVG format.\r\n         *\r\n         * @since 4.2.0\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._extraSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"validateSprites\", {\r\n        /**\r\n         * @return Sprite\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"validateSprites\", {\r\n                validateSprites: this._validateSprites\r\n            }).validateSprites;\r\n        },\r\n        /**\r\n         * An array of [[Sprite]] elements that need to be valid before export\r\n         * commences.\r\n         *\r\n         * If any of those elements is not completely ready when export is triggered,\r\n         * the export will wait until they are (their `validated` event triggers)\r\n         * before going through with the export opertaion.\r\n         *\r\n         * This is useful if you need to modify chart appearance for the export.\r\n         *\r\n         * E.g.:\r\n         *\r\n         * ```TypeScript\r\n         * // Add watermark\r\n         * let watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         * ```JavaScript\r\n         * // Add watermark\r\n         * var watermark = chart.createChild(am4core.Label);\r\n         * watermark.text = \"Copyright (C) 2019\";\r\n         * watermark.disabled = true;\r\n         *\r\n         * // Add watermark to validated sprites\r\n         * chart.exporting.validateSprites.push(watermark);\r\n         *\r\n         * // Enable watermark on export\r\n         * chart.exporting.events.on(\"exportstarted\", function(ev) {\r\n         *   watermark.disabled = false;\r\n         * });\r\n         *\r\n         * // Disable watermark when export finishes\r\n         * chart.exporting.events.on(\"exportfinished\", function(ev) {\r\n         *   watermark.disabled = true;\r\n         * });\r\n         * ```\r\n         *\r\n         * @since 4.6.8\r\n         * @param value Sprite\r\n         */\r\n        set: function (value) {\r\n            this._validateSprites = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"data\", {\r\n        /**\r\n         * @return Data\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"data\", {\r\n                data: this._data\r\n            }).data;\r\n        },\r\n        /**\r\n         * Data to export.\r\n         *\r\n         * @param value Data\r\n         */\r\n        set: function (value) {\r\n            this._data = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dataFields\", {\r\n        /**\r\n         * @return Field names `{ field: fieldName }`\r\n         */\r\n        get: function () {\r\n            if (!this._dataFields) {\r\n                this.generateDataFields();\r\n            }\r\n            return this.adapter.apply(\"dataFields\", {\r\n                dataFields: this._dataFields\r\n            }).dataFields;\r\n        },\r\n        /**\r\n         * Data fields in `{ field: fieldName }` format. Those are used for\r\n         * exporting in data formats to name the columns.\r\n         *\r\n         * @see {@link https://www.amcharts.com/docs/v4/concepts/exporting/#Changing_order_and_names_of_columns} for examples and details\r\n         * @param value Field names\r\n         */\r\n        set: function (value) {\r\n            this._dataFields = value;\r\n            this._dynamicDataFields = false;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Called after target chart's data updates.\r\n     *\r\n     * @ignore\r\n     */\r\n    Export.prototype.handleDataUpdated = function () {\r\n        if (this._dynamicDataFields) {\r\n            this._dataFields = undefined;\r\n        }\r\n        var hasData = this.data.length > 0;\r\n        if (this._prevHasData != hasData) {\r\n            this._prevHasData = hasData;\r\n            if (this.menu) {\r\n                this.menu.invalidate();\r\n            }\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"dateFormatter\", {\r\n        /**\r\n         * @return A DateFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._dateFormatter) {\r\n                this._dateFormatter = new DateFormatter();\r\n                this._dateFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"dateFormatter\", {\r\n                dateFormatter: this._dateFormatter\r\n            }).dateFormatter;\r\n        },\r\n        /**\r\n         * A [[DateFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @param value DateFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._dateFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFormat\", {\r\n        /**\r\n         * @return Date format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"dateFormat\", {\r\n                dateFormat: this._dateFormat\r\n            }).dateFormat;\r\n        },\r\n        /**\r\n         * A date format to use for exporting dates. Will use [[DateFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @param value Date format\r\n         */\r\n        set: function (value) {\r\n            this._dateFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"dateFields\", {\r\n        /**\r\n         * @return Date field list\r\n         */\r\n        get: function () {\r\n            if (!this._dateFields) {\r\n                this._dateFields = new List();\r\n            }\r\n            return this.adapter.apply(\"dateFields\", {\r\n                dateFields: this._dateFields\r\n            }).dateFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold date values.\r\n         *\r\n         * @param value Date field list\r\n         */\r\n        set: function (value) {\r\n            this._dateFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormatter\", {\r\n        /**\r\n         * @return A NumberFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._numberFormatter) {\r\n                this._numberFormatter = new NumberFormatter();\r\n                this._numberFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"numberFormatter\", {\r\n                numberFormatter: this._numberFormatter\r\n            }).numberFormatter;\r\n        },\r\n        /**\r\n         * A [[NumberFormatter]] to use when formatting dates when exporting data.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value NumberFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._numberFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFormat\", {\r\n        /**\r\n         * @return Number format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"numberFormat\", {\r\n                numberFormat: this._numberFormat\r\n            }).numberFormat;\r\n        },\r\n        /**\r\n         * A number format to use for exporting dates. Will use [[NumberFormatter]]\r\n         * format if not set.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number format\r\n         */\r\n        set: function (value) {\r\n            this._numberFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"numberFields\", {\r\n        /**\r\n         * @return Number field list\r\n         */\r\n        get: function () {\r\n            if (!this._numberFields) {\r\n                this._numberFields = new List();\r\n            }\r\n            return this.adapter.apply(\"numberFields\", {\r\n                numberFields: this._numberFields\r\n            }).numberFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold number values.\r\n         *\r\n         * @since 4.5.15\r\n         * @param value Number field list\r\n         */\r\n        set: function (value) {\r\n            this._numberFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormatter\", {\r\n        /**\r\n         * @return A DurationFormatter instance\r\n         */\r\n        get: function () {\r\n            if (!this._durationFormatter) {\r\n                this._durationFormatter = new DurationFormatter();\r\n                this._durationFormatter.language = this.language;\r\n            }\r\n            return this.adapter.apply(\"durationFormatter\", {\r\n                durationFormatter: this._durationFormatter\r\n            }).durationFormatter;\r\n        },\r\n        /**\r\n         * A [[DurationFormatter]] to use when formatting duration values when\r\n         * exporting data.\r\n         *\r\n         * @param value  DurationFormatter instance\r\n         */\r\n        set: function (value) {\r\n            this._durationFormatter = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFormat\", {\r\n        /**\r\n         * @return Duration format\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"durationFormat\", {\r\n                durationFormat: this._durationFormat\r\n            }).durationFormat;\r\n        },\r\n        /**\r\n         * A format to use when formatting values from `durationFields`.\r\n         * Will use [[DurationFormatter]] format if not set.\r\n         *\r\n         * @param value Duration format\r\n         */\r\n        set: function (value) {\r\n            this._durationFormat = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"durationFields\", {\r\n        /**\r\n         * @return Duration field list\r\n         */\r\n        get: function () {\r\n            if (!this._durationFields) {\r\n                this._durationFields = new List();\r\n            }\r\n            return this.adapter.apply(\"durationFields\", {\r\n                durationFields: this._durationFields\r\n            }).durationFields;\r\n        },\r\n        /**\r\n         * A list of fields that hold duration values.\r\n         *\r\n         * @param value Duration field list\r\n         */\r\n        set: function (value) {\r\n            this._durationFields = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Generates data fields out of the first row of data.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.generateDataFields = function () {\r\n        var _this = this;\r\n        this._dataFields = {};\r\n        if (this.data.length) {\r\n            $array.each(this.data, function (row) {\r\n                $object.each(row, function (key, value) {\r\n                    if (!$type.hasValue(_this._dataFields[key])) {\r\n                        _this._dataFields[key] = _this.adapter.apply(\"dataFieldName\", {\r\n                            name: key,\r\n                            field: key\r\n                        }).name;\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Cheks against `dateFields` property to determine if this field holds\r\n     * dates.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDateField = function (field) {\r\n        return this.adapter.apply(\"isDateField\", {\r\n            isDateField: this.dateFields.contains(field),\r\n            field: field\r\n        }).isDateField;\r\n    };\r\n    /**\r\n     * Cheks against `numberFields` property to determine if this field holds\r\n     * numbers.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a number field\r\n     */\r\n    Export.prototype.isNumberField = function (field) {\r\n        return this.adapter.apply(\"isNumberField\", {\r\n            isNumberField: this.numberFields.contains(field),\r\n            field: field\r\n        }).isNumberField;\r\n    };\r\n    /**\r\n     * Cheks against `durationFields` property to determine if this field holds\r\n     * durations.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param field   Field name\r\n     * @param options Options\r\n     * @return `true` if it's a date field\r\n     */\r\n    Export.prototype.isDurationField = function (field) {\r\n        return this.adapter.apply(\"isDurationField\", {\r\n            isDurationField: this.durationFields.contains(field),\r\n            field: field\r\n        }).isDurationField;\r\n    };\r\n    /**\r\n     * Returns proper content type for the export type.\r\n     *\r\n     * @param type  Export format/type\r\n     * @return Proper content type, i.e. \"image/jpeg\"\r\n     */\r\n    Export.prototype.getContentType = function (type) {\r\n        var contentType = \"\";\r\n        switch (type) {\r\n            case \"png\":\r\n            case \"gif\":\r\n                contentType = \"image/\" + type;\r\n                break;\r\n            case \"jpg\":\r\n                contentType = \"image/jpeg\";\r\n                break;\r\n            case \"svg\":\r\n                contentType = \"image/svg+xml\";\r\n                break;\r\n            case \"csv\":\r\n                contentType = \"text/csv\";\r\n                break;\r\n            case \"json\":\r\n                contentType = \"application/json\";\r\n                break;\r\n            case \"html\":\r\n                contentType = \"text/html\";\r\n                break;\r\n            case \"pdf\":\r\n            case \"pdfdata\":\r\n                contentType = \"application/pdf\";\r\n                break;\r\n            case \"xlsx\":\r\n                contentType = \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\";\r\n                break;\r\n        }\r\n        return this.adapter.apply(\"contentType\", {\r\n            contentType: contentType,\r\n            type: type\r\n        }).contentType;\r\n    };\r\n    Object.defineProperty(Export.prototype, \"filePrefix\", {\r\n        /**\r\n         * @return File prefix\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"filePrefix\", {\r\n                filePrefix: this._filePrefix\r\n            }).filePrefix;\r\n        },\r\n        /**\r\n         * A file prefix to be used for all exported formats.\r\n         *\r\n         * Export will apply format-related extension to it. E.g. if this is set to\r\n         * \"myExport\", the file name of the PNG exported image will be \"myExport.png\".\r\n         *\r\n         * @param value File prefix\r\n         */\r\n        set: function (value) {\r\n            this._filePrefix = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"backgroundColor\", {\r\n        /**\r\n         * @return Background color\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"backgroundColor\", {\r\n                backgroundColor: this._backgroundColor\r\n            }).backgroundColor;\r\n        },\r\n        /**\r\n         * A background color to be used for exported images. If set, this will\r\n         * override the automatically acquired background color.\r\n         *\r\n         * @param value Color\r\n         */\r\n        set: function (value) {\r\n            this._backgroundColor = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"title\", {\r\n        /**\r\n         * @return Title\r\n         */\r\n        get: function () {\r\n            return this.adapter.apply(\"title\", {\r\n                title: this._title\r\n            }).title;\r\n        },\r\n        /**\r\n         * A title to be used when printing.\r\n         *\r\n         * @param value Title\r\n         */\r\n        set: function (value) {\r\n            this._title = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @todo Add ability to change text\r\n     */\r\n    Export.prototype.showPreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 0.5;\r\n            preloader.label.text = \"...\";\r\n        }\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hidePreloader = function () {\r\n        var preloader = this.preloader;\r\n        if (preloader) {\r\n            preloader.progress = 1;\r\n        }\r\n    };\r\n    Object.defineProperty(Export.prototype, \"preloader\", {\r\n        /**\r\n         * Returns a an instance of [[Preloader]] associated with the Sprite being\r\n         * exported.\r\n         *\r\n         * @return Preloader\r\n         */\r\n        get: function () {\r\n            return this._sprite && this._sprite.parent && this._sprite.parent.preloader ?\r\n                this._sprite.parent.preloader :\r\n                undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Displays a modal saying export is taking longer than expected.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.showTimeout = function () {\r\n        this.showModal(this.adapter.apply(\"timeoutMessage\", {\r\n            message: this.language.translate(\"Export operation took longer than expected. Something might have gone wrong.\")\r\n        }).message);\r\n    };\r\n    /**\r\n     * Hides preloader/exporting indicator.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideTimeout = function () {\r\n        if (this._timeoutTimeout) {\r\n            this.removeDispose(this._timeoutTimeout);\r\n            this._timeoutTimeout = null;\r\n        }\r\n        this.hideModal();\r\n    };\r\n    Object.defineProperty(Export.prototype, \"language\", {\r\n        /**\r\n         * @return A [[Language]] instance to be used\r\n         */\r\n        get: function () {\r\n            if (!this._language) {\r\n                this._language = new Language();\r\n            }\r\n            return this._language;\r\n        },\r\n        /**\r\n         * A [[Language]] instance to be used for translations.\r\n         *\r\n         * @param value An instance of [[Language]]\r\n         */\r\n        set: function (value) {\r\n            this._language = value;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"modal\", {\r\n        /**\r\n         * Returns (and creates) [[Modal]].\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Modal instance\r\n         */\r\n        get: function () {\r\n            if (!this._modal) {\r\n                this._modal = new Modal();\r\n                // Prefix with Sprite's class name\r\n                this._modal.adapter.add(\"classPrefix\", function (value) {\r\n                    value = options.classNamePrefix + value;\r\n                    return value;\r\n                });\r\n            }\r\n            return this._modal;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Shows [[Modal]] with specific text.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param text Modal contents\r\n     */\r\n    Export.prototype.showModal = function (text, title) {\r\n        // Hide previous modal and preloader\r\n        this.hideModal();\r\n        this.hidePreloader();\r\n        // Create modal\r\n        var modal = this.modal;\r\n        modal.container = this.sprite.svgContainer.SVGContainer;\r\n        modal.content = text;\r\n        modal.readerTitle = title;\r\n        modal.open();\r\n    };\r\n    /**\r\n     * Hides modal window if one's currently open.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.prototype.hideModal = function () {\r\n        if (this._modal) {\r\n            this.modal.close();\r\n        }\r\n    };\r\n    /**\r\n     * Loads canvg dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of canvg\r\n     * @async\r\n     */\r\n    Export.prototype._canvg = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var canvg;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"canvg\" */ \"../../canvg/index.js\")];\r\n                    case 1:\r\n                        canvg = (_a.sent());\r\n                        if (canvg.default != null) {\r\n                            return [2 /*return*/, canvg.default];\r\n                        }\r\n                        else {\r\n                            return [2 /*return*/, canvg];\r\n                        }\r\n                        return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"canvg\", {\r\n        /**\r\n         * Returns canvg instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of canvg\r\n         */\r\n        get: function () {\r\n            return this._canvg();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Export.prototype, \"pdfmake\", {\r\n        /**\r\n         * Returns pdfmake instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            if (pdfmakePromise == null) {\r\n                pdfmakePromise = _pdfmake();\r\n            }\r\n            return pdfmakePromise;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Loads xlsx dynamic module.\r\n     *\r\n     * This is an asynchronous function. Check the description of `getImage()`\r\n     * for description and example usage.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @return Instance of pdfmake\r\n     * @async\r\n     */\r\n    Export.prototype._xlsx = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0: return [4 /*yield*/, import(/* webpackChunkName: \"xlsx\" */ \"xlsx/dist/xlsx.core.min.js\")];\r\n                    case 1: return [2 /*return*/, _a.sent()];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    Object.defineProperty(Export.prototype, \"xlsx\", {\r\n        /**\r\n         * Returns xlsx instance.\r\n         *\r\n         * @ignore Exclude from docs\r\n         * @return Instance of pdfmake\r\n         */\r\n        get: function () {\r\n            return this._xlsx();\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Sets options for a format.\r\n     */\r\n    Export.prototype.setFormatOptions = function (type, options) {\r\n        this._formatOptions.setKey(type, options);\r\n    };\r\n    /**\r\n     * Returns current options for a format.\r\n     */\r\n    Export.prototype.getFormatOptions = function (type) {\r\n        return this._formatOptions.getKey(type);\r\n    };\r\n    Object.defineProperty(Export.prototype, \"formatOptions\", {\r\n        /**\r\n         * A [[Dictionary]] object containing format-specific options.\r\n         *\r\n         * May be used to change specific option for the format:\r\n         *\r\n         * ```TypeScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JavaScript\r\n         * chart.exporting.formatOptions.getKey(\"csv\").disabled = true;\r\n         * ```\r\n         * ```JSON\r\n         * {\r\n         *   // ...\r\n         *   \"exporting\": {\r\n         *     // ...\r\n         *     \"formatOptions\": {\r\n         *       \"csv\": {\r\n         *         \"disabled\": true\r\n         *       }\r\n         *     }\r\n         *   }\r\n         * }\r\n         * ```\r\n         *\r\n         * @since 4.9.12\r\n         * @return  Options\r\n         */\r\n        get: function () {\r\n            return this._formatOptions;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Disables interactivity on parent chart.\r\n     */\r\n    Export.prototype._disablePointers = function () {\r\n        if (!$type.hasValue(this._spriteInteractionsEnabled)) {\r\n            this._spriteInteractionsEnabled = this.sprite.interactionsEnabled;\r\n        }\r\n        this.sprite.interactionsEnabled = false;\r\n    };\r\n    /**\r\n     * Releases temporarily disabled pointers on parent chart.\r\n     */\r\n    Export.prototype._releasePointers = function () {\r\n        if ($type.hasValue(this._spriteInteractionsEnabled) && !this._exportRunning) {\r\n            this.sprite.interactionsEnabled = this._spriteInteractionsEnabled;\r\n        }\r\n    };\r\n    /**\r\n     * Hides all elements that should not be included in the exported image.\r\n     */\r\n    Export.prototype.hideNonExportableSprites = function () {\r\n        var _this = this;\r\n        if (this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        var svgContainer = this.sprite.svgContainer;\r\n        if (svgContainer) {\r\n            $array.each(svgContainer.nonExportableSprites, function (item) {\r\n                if (!item.isHidden && !item.isHiding && item.visible) {\r\n                    _this._hiddenObjects.push(item);\r\n                }\r\n                item.hide(0);\r\n            });\r\n        }\r\n        this._objectsAlreadyHidden = true;\r\n    };\r\n    /**\r\n     * Respores elements that were hidden before export.\r\n     */\r\n    Export.prototype.restoreNonExportableSprites = function () {\r\n        if (!this._objectsAlreadyHidden) {\r\n            return;\r\n        }\r\n        $array.each(this._hiddenObjects, function (item) {\r\n            item.show(0);\r\n        });\r\n        this._hiddenObjects = [];\r\n        this._objectsAlreadyHidden = false;\r\n    };\r\n    /**\r\n     * Checks if there are elements that absolutely need to be validated before\r\n     * export.\r\n     *\r\n     * If there are invalid elements, it will await for them to be validated.\r\n     *\r\n     * @return Promise\r\n     */\r\n    Export.prototype.awaitValidSprites = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var promises;\r\n            return __generator(this, function (_a) {\r\n                switch (_a.label) {\r\n                    case 0:\r\n                        promises = [];\r\n                        if (this.validateSprites.length) {\r\n                            $array.each(this.validateSprites, function (sprite, index) {\r\n                                if (sprite.invalid) {\r\n                                    promises.push(new Promise(function (resolve, reject) {\r\n                                        sprite.events.once(\"validated\", function (ev) {\r\n                                            resolve();\r\n                                        });\r\n                                    }));\r\n                                }\r\n                            });\r\n                        }\r\n                        if (!promises.length) return [3 /*break*/, 2];\r\n                        return [4 /*yield*/, Promise.all(promises)];\r\n                    case 1:\r\n                        _a.sent();\r\n                        _a.label = 2;\r\n                    case 2: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Processes JSON-based config before it is applied to the object.\r\n     *\r\n     * @ignore Exclude from docs\r\n     * @param config  Config\r\n     */\r\n    Export.prototype.processConfig = function (config) {\r\n        registry.registeredClasses[\"ExportMenu\"] = ExportMenu;\r\n        if (config) {\r\n            // Set up menu\r\n            if ($type.hasValue(config.menu) && !$type.hasValue(config.menu.type)) {\r\n                config.menu.type = \"ExportMenu\";\r\n            }\r\n            if ($type.hasValue(config.dataFields) && $type.isObject(config.dataFields)) {\r\n                this.dataFields = config.dataFields;\r\n                delete config.dataFields;\r\n            }\r\n        }\r\n        _super.prototype.processConfig.call(this, config);\r\n    };\r\n    /**\r\n     * XLINK namespace definition.\r\n     *\r\n     * @ignore Exclude from docs\r\n     */\r\n    Export.XLINK = \"http://www.w3.org/1999/xlink\";\r\n    return Export;\r\n}(Validatable));\r\nexport { Export };\r\n"],"mappings":"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AAC;QAC3B,KAAK,CAAC;UACF6D,QAAQ,CAACjB,IAAI,CAACG,WAAW,CAACY,MAAM,CAAC;UACjC,OAAO,CAAC,CAAC,CAAC,eAAe;QAC7B,KAAK,CAAC;UAAE,OAAO,CAAC,CAAC,CAAC,WAAW;MACjC;IACJ,CAAC,CAAC;EACN,CAAC,CAAC;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIQ,MAAM,GAAG,aAAe,UAAUC,MAAM,EAAE;EAC1C1G,SAAS,CAACyG,MAAM,EAAEC,MAAM,CAAC;EACzB;AACJ;AACA;EACI,SAASD,MAAMA,CAACE,SAAS,EAAE;IACvB,IAAIC,KAAK,GAAGF,MAAM,CAACG,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI;IACrC;AACR;AACA;IACQD,KAAK,CAACE,OAAO,GAAG,IAAI3G,OAAO,CAACyG,KAAK,CAAC;IAClC;AACR;AACA;AACA;AACA;IACQA,KAAK,CAACG,cAAc,GAAG,IAAIxG,UAAU,CAAC,CAAC;IACvC;AACR;AACA;IACQqG,KAAK,CAACI,aAAa,GAAG,EAAE;IACxB;AACR;AACA;AACA;IACQJ,KAAK,CAACK,gBAAgB,GAAG,EAAE;IAC3B;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACQL,KAAK,CAACM,eAAe,GAAG,EAAE;IAC1B;AACR;AACA;AACA;IACQN,KAAK,CAACO,kBAAkB,GAAG,IAAI;IAC/B;AACR;AACA;AACA;AACA;AACA;AACA;IACQP,KAAK,CAACQ,eAAe,GAAG,IAAI9G,IAAI,CAAC,CAAC;IAClC;AACR;AACA;AACA;IACQsG,KAAK,CAACS,cAAc,GAAG,EAAE;IACzB;AACR;AACA;IACQT,KAAK,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"},"metadata":{},"sourceType":"module"}