import { Component, Input } from "@angular/core";
import { AngularComponentFactory, BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "@angular/forms";
import * as i2 from "@angular/common";
export class TextareaJsonEditorComponent extends BaseAngular {
    getModel() {
        return this.model;
    }
    ngOnInit() {
        this.model.canShowErrors = false;
        super.ngOnInit();
    }
}
TextareaJsonEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TextareaJsonEditorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
TextareaJsonEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TextareaJsonEditorComponent, selector: "svc-tab-json-editor-textarea", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-creator-tab__content\">\n    <div class=\"svc-json-editor-tab__content\">\n      <textarea class=\"svc-json-editor-tab__content-area\"\n        [attr.aria-label]=\"model.ariaLabel\"\n        [disabled]=\"model.readOnly\"\n        [(ngModel)]=\"model.text\"\n        (keydown)=\"model.checkKey(model, $event)\">\n      </textarea>\n      <button type=\"button\" *ngIf=\"model.userFriendlyErrors.length !== 0\" class=\"svc-json-editor-tab__errros_button\"\n        (click)=\"model.toggleErrors()\">{{model.errorButtonText}}</button>\n      <ng-container *ngIf=\"model.canShowErrors\">\n        <div class=\"svc-json-editor-tab__content-errors\" *ngFor=\"let error of model.userFriendlyErrors\">\n          <span><b>Error:</b></span>\n          <span>{{error}}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], directives: [{ type: i1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i1.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TextareaJsonEditorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-tab-json-editor-textarea",
                    templateUrl: "./json-editor-textarea.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-tab-json-editor-textarea", TextareaJsonEditorComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi1lZGl0b3ItdGV4dGFyZWEuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3RhYnMvanNvbi9qc29uLWVkaXRvci10ZXh0YXJlYS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9zcmMvdGFicy9qc29uL2pzb24tZWRpdG9yLXRleHRhcmVhLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQU96RSxNQUFNLE9BQU8sMkJBQTRCLFNBQVEsV0FBb0M7SUFFekUsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNlLFFBQVE7UUFDdEIsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEdBQUcsS0FBSyxDQUFDO1FBQ2pDLEtBQUssQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUNuQixDQUFDOzt5SEFSVSwyQkFBMkI7NkdBQTNCLDJCQUEyQix1SENUeEMsdTNCQW1CYzs0RkRWRCwyQkFBMkI7a0JBTHZDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLDhCQUE4QjtvQkFDeEMsV0FBVyxFQUFFLHVDQUF1QztvQkFDcEQsTUFBTSxFQUFFLENBQUMsMEJBQTBCLENBQUM7aUJBQ3JDOzhCQUVVLEtBQUs7c0JBQWIsS0FBSzs7QUFTUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsOEJBQThCLEVBQUUsMkJBQTJCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRhYkpzb25FZGl0b3JUZXh0YXJlYVBsdWdpbiwgVGV4dGFyZWFKc29uRWRpdG9yTW9kZWwgfSBmcm9tIFwic3VydmV5LWNyZWF0b3ItY29yZVwiO1xuaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEFuZ3VsYXJDb21wb25lbnRGYWN0b3J5LCBCYXNlQW5ndWxhciB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLXRhYi1qc29uLWVkaXRvci10ZXh0YXJlYVwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2pzb24tZWRpdG9yLXRleHRhcmVhLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIFRleHRhcmVhSnNvbkVkaXRvckNvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPFRleHRhcmVhSnNvbkVkaXRvck1vZGVsPiBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIEBJbnB1dCgpIG1vZGVsITogVGV4dGFyZWFKc29uRWRpdG9yTW9kZWw7XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBUZXh0YXJlYUpzb25FZGl0b3JNb2RlbCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgcHVibGljIG92ZXJyaWRlIG5nT25Jbml0KCk6IHZvaWQge1xuICAgIHRoaXMubW9kZWwuY2FuU2hvd0Vycm9ycyA9IGZhbHNlO1xuICAgIHN1cGVyLm5nT25Jbml0KCk7XG4gIH1cbn1cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3ZjLXRhYi1qc29uLWVkaXRvci10ZXh0YXJlYVwiLCBUZXh0YXJlYUpzb25FZGl0b3JDb21wb25lbnQpOyIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJzdmMtY3JlYXRvci10YWJfX2NvbnRlbnRcIj5cbiAgICA8ZGl2IGNsYXNzPVwic3ZjLWpzb24tZWRpdG9yLXRhYl9fY29udGVudFwiPlxuICAgICAgPHRleHRhcmVhIGNsYXNzPVwic3ZjLWpzb24tZWRpdG9yLXRhYl9fY29udGVudC1hcmVhXCJcbiAgICAgICAgW2F0dHIuYXJpYS1sYWJlbF09XCJtb2RlbC5hcmlhTGFiZWxcIlxuICAgICAgICBbZGlzYWJsZWRdPVwibW9kZWwucmVhZE9ubHlcIlxuICAgICAgICBbKG5nTW9kZWwpXT1cIm1vZGVsLnRleHRcIlxuICAgICAgICAoa2V5ZG93bik9XCJtb2RlbC5jaGVja0tleShtb2RlbCwgJGV2ZW50KVwiPlxuICAgICAgPC90ZXh0YXJlYT5cbiAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiICpuZ0lmPVwibW9kZWwudXNlckZyaWVuZGx5RXJyb3JzLmxlbmd0aCAhPT0gMFwiIGNsYXNzPVwic3ZjLWpzb24tZWRpdG9yLXRhYl9fZXJycm9zX2J1dHRvblwiXG4gICAgICAgIChjbGljayk9XCJtb2RlbC50b2dnbGVFcnJvcnMoKVwiPnt7bW9kZWwuZXJyb3JCdXR0b25UZXh0fX08L2J1dHRvbj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC5jYW5TaG93RXJyb3JzXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtanNvbi1lZGl0b3ItdGFiX19jb250ZW50LWVycm9yc1wiICpuZ0Zvcj1cImxldCBlcnJvciBvZiBtb2RlbC51c2VyRnJpZW5kbHlFcnJvcnNcIj5cbiAgICAgICAgICA8c3Bhbj48Yj5FcnJvcjo8L2I+PC9zcGFuPlxuICAgICAgICAgIDxzcGFuPnt7ZXJyb3J9fTwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPiJdfQ==