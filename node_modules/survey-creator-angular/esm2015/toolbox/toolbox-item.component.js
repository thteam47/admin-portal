import { Component, Input } from "@angular/core";
import { editorLocalization } from "survey-creator-core";
import { BaseAngular, AngularComponentFactory } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class ToolboxItemComponent extends BaseAngular {
    constructor() {
        super(...arguments);
        this.isCompact = false;
    }
    getModel() {
        return this.viewModel;
    }
    get item() {
        return this.model;
    }
    get ariaLabel() {
        return this.item.tooltip + " " + editorLocalization.getString("toolbox") + " item";
    }
}
ToolboxItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxItemComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToolboxItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ToolboxItemComponent, selector: "svc-toolbox-item", inputs: { creator: "creator", model: "model", isCompact: "isCompact", viewModel: "viewModel" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-toolbox__item\" role=\"button\" [attr.aria-label]=\"ariaLabel\"\n    [class]=\"'svc-toolbox__item--' + item.iconName\" (click)=\"viewModel.click($event)\" [key2click]>\n    <span class=\"svc-toolbox__item-container\">\n      <svg [iconName]=\"item.iconName\" [size]=\"24\" [title]=\"ariaLabel\" sv-ng-svg-icon></svg>\n    </span>\n    <span *ngIf=\"isCompact\" class=\"svc-toolbox__item-banner svc-item__banner\">\n      <svg [iconName]=\"item.iconName\" [size]=\"24\" [title]=\"ariaLabel\" class=\"svc-toolbox__item-icon\" sv-ng-svg-icon></svg>\n      <span class=\"svc-toolbox__item-title\">{{item.title}}</span>\n    </span>\n    <span *ngIf=\"!isCompact\" class=\"svc-toolbox__item-title\">\n      {{item.title}}\n    </span>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }], directives: [{ type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ToolboxItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-toolbox-item",
                    templateUrl: "./toolbox-item.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { creator: [{
                type: Input
            }], model: [{
                type: Input
            }], isCompact: [{
                type: Input
            }], viewModel: [{
                type: Input
            }] } });
AngularComponentFactory.Instance.registerComponent("svc-toolbox-item", ToolboxItemComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJveC1pdGVtLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b29sYm94L3Rvb2xib3gtaXRlbS5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvdG9vbGJveC90b29sYm94LWl0ZW0uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUEyRCxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ2xILE9BQU8sRUFBRSxXQUFXLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQVF6RSxNQUFNLE9BQU8sb0JBQXFCLFNBQVEsV0FBaUM7SUFMM0U7O1FBUVcsY0FBUyxHQUFZLEtBQUssQ0FBQztLQVdyQztJQVRXLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFDRCxJQUFXLElBQUk7UUFDYixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNELElBQVcsU0FBUztRQUNsQixPQUFPLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEdBQUcsR0FBRyxrQkFBa0IsQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDLEdBQUcsT0FBTyxDQUFDO0lBQ3JGLENBQUM7O2tIQWJVLG9CQUFvQjtzR0FBcEIsb0JBQW9CLCtLQ1ZqQyxpeUJBY2M7NEZESkQsb0JBQW9CO2tCQUxoQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQkFBa0I7b0JBQzVCLFdBQVcsRUFBRSwrQkFBK0I7b0JBQzVDLE1BQU0sRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNyQzs4QkFFVSxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSzs7QUFXUix1QkFBdUIsQ0FBQyxRQUFRLENBQUMsaUJBQWlCLENBQUMsa0JBQWtCLEVBQUUsb0JBQW9CLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgVG9vbGJveFRvb2xWaWV3TW9kZWwsIENyZWF0b3JCYXNlLCBJUXVlc3Rpb25Ub29sYm94SXRlbSwgZWRpdG9yTG9jYWxpemF0aW9uIH0gZnJvbSBcInN1cnZleS1jcmVhdG9yLWNvcmVcIjtcbmltcG9ydCB7IEJhc2VBbmd1bGFyLCBBbmd1bGFyQ29tcG9uZW50RmFjdG9yeSB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuaW1wb3J0IHsgQWN0aW9uIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdmMtdG9vbGJveC1pdGVtXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vdG9vbGJveC1pdGVtLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIFRvb2xib3hJdGVtQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8VG9vbGJveFRvb2xWaWV3TW9kZWw+IHtcbiAgQElucHV0KCkgY3JlYXRvciE6IENyZWF0b3JCYXNlO1xuICBASW5wdXQoKSBtb2RlbCE6IEFjdGlvbjtcbiAgQElucHV0KCkgaXNDb21wYWN0OiBib29sZWFuID0gZmFsc2U7XG4gIEBJbnB1dCgpIHZpZXdNb2RlbCE6IFRvb2xib3hUb29sVmlld01vZGVsXG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBUb29sYm94VG9vbFZpZXdNb2RlbCB7XG4gICAgcmV0dXJuIHRoaXMudmlld01vZGVsO1xuICB9XG4gIHB1YmxpYyBnZXQgaXRlbSgpIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICBwdWJsaWMgZ2V0IGFyaWFMYWJlbCgpOiBzdHJpbmcge1xuICAgIHJldHVybiB0aGlzLml0ZW0udG9vbHRpcCArIFwiIFwiICsgZWRpdG9yTG9jYWxpemF0aW9uLmdldFN0cmluZyhcInRvb2xib3hcIikgKyBcIiBpdGVtXCI7XG4gIH1cbn1cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3ZjLXRvb2xib3gtaXRlbVwiLCBUb29sYm94SXRlbUNvbXBvbmVudCk7XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICA8ZGl2IGNsYXNzPVwic3ZjLXRvb2xib3hfX2l0ZW1cIiByb2xlPVwiYnV0dG9uXCIgW2F0dHIuYXJpYS1sYWJlbF09XCJhcmlhTGFiZWxcIlxuICAgIFtjbGFzc109XCInc3ZjLXRvb2xib3hfX2l0ZW0tLScgKyBpdGVtLmljb25OYW1lXCIgKGNsaWNrKT1cInZpZXdNb2RlbC5jbGljaygkZXZlbnQpXCIgW2tleTJjbGlja10+XG4gICAgPHNwYW4gY2xhc3M9XCJzdmMtdG9vbGJveF9faXRlbS1jb250YWluZXJcIj5cbiAgICAgIDxzdmcgW2ljb25OYW1lXT1cIml0ZW0uaWNvbk5hbWVcIiBbc2l6ZV09XCIyNFwiIFt0aXRsZV09XCJhcmlhTGFiZWxcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICA8L3NwYW4+XG4gICAgPHNwYW4gKm5nSWY9XCJpc0NvbXBhY3RcIiBjbGFzcz1cInN2Yy10b29sYm94X19pdGVtLWJhbm5lciBzdmMtaXRlbV9fYmFubmVyXCI+XG4gICAgICA8c3ZnIFtpY29uTmFtZV09XCJpdGVtLmljb25OYW1lXCIgW3NpemVdPVwiMjRcIiBbdGl0bGVdPVwiYXJpYUxhYmVsXCIgY2xhc3M9XCJzdmMtdG9vbGJveF9faXRlbS1pY29uXCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICA8c3BhbiBjbGFzcz1cInN2Yy10b29sYm94X19pdGVtLXRpdGxlXCI+e3tpdGVtLnRpdGxlfX08L3NwYW4+XG4gICAgPC9zcGFuPlxuICAgIDxzcGFuICpuZ0lmPVwiIWlzQ29tcGFjdFwiIGNsYXNzPVwic3ZjLXRvb2xib3hfX2l0ZW0tdGl0bGVcIj5cbiAgICAgIHt7aXRlbS50aXRsZX19XG4gICAgPC9zcGFuPlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19