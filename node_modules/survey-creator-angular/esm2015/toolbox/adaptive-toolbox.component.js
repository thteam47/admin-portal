import { Component, Input, ViewChild } from "@angular/core";
import { VerticalResponsivityManager } from "survey-core";
import { BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "./toolbox-category.component";
import * as i2 from "./toolbox-tool.component";
import * as i3 from "@angular/common";
export class AdaptiveToolboxComponent extends BaseAngular {
    get model() {
        return this.creator.toolbox;
    }
    ngAfterViewInit() {
        this.responsivityManager =
            new VerticalResponsivityManager(this.container.nativeElement, this.model, ".svc-toolbox__tool:not(.sv-dots)");
    }
    getModel() {
        return this.model;
    }
    ngOnDestroy() {
        var _a;
        (_a = this.responsivityManager) === null || _a === void 0 ? void 0 : _a.dispose();
        super.ngOnDestroy();
    }
}
AdaptiveToolboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AdaptiveToolboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AdaptiveToolboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: AdaptiveToolboxComponent, selector: "svc-adaptive-toolbox", inputs: { creator: "creator" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-toolbox\" [class.svc-toolbox--compact]=\"model.isCompact\" #container>\n    <div class=\"svc-toolbox__container\">\n      <ng-container *ngIf=\"!(model.isCompact || model.categories.length == 1 || !model.showCategoryTitles)\">\n        <svc-toolbox-category *ngFor=\"let category of model.categories\" [category]=\"category\" [toolbox]=\"model\"></svc-toolbox-category>\n      </ng-container>\n      <ng-container *ngIf=\"model.isCompact || model.categories.length == 1 || !model.showCategoryTitles\">\n        <div class=\"svc-toolbox__category\">\n          <svc-toolbox-tool *ngFor=\"let item of model.renderedActions\" [creator]=\"creator\" [item]=\"item\" [isCompact]=\"model.isCompact\"></svc-toolbox-tool>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.ToolboxCategoryComponent, selector: "svc-toolbox-category ", inputs: ["category", "toolbox"] }, { type: i2.ToolboxToolComponent, selector: "svc-toolbox-tool", inputs: ["creator", "item", "isCompact"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: AdaptiveToolboxComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-adaptive-toolbox",
                    templateUrl: "./adaptive-toolbox.component.html",
                    styles: [":host { display: none; }"]
                }]
        }], propDecorators: { creator: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRhcHRpdmUtdG9vbGJveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdG9vbGJveC9hZGFwdGl2ZS10b29sYm94LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy90b29sYm94L2FkYXB0aXZlLXRvb2xib3guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7OztBQU9oRCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBNEI7SUFJeEUsSUFBVyxLQUFLO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUM5QixDQUFDO0lBQ0QsZUFBZTtRQUNiLElBQUksQ0FBQyxtQkFBbUI7WUFDdEIsSUFBSSwyQkFBMkIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQStCLEVBQzVFLElBQUksQ0FBQyxLQUFLLEVBQUUsa0NBQWtDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ1MsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNRLFdBQVc7O1FBQ2xCLE1BQUEsSUFBSSxDQUFDLG1CQUFtQiwwQ0FBRSxPQUFPLEVBQUUsQ0FBQztRQUNwQyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7c0hBbEJVLHdCQUF3QjswR0FBeEIsd0JBQXdCLDJOQ1ZyQyxtMEJBYWM7NEZESEQsd0JBQXdCO2tCQUxwQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxzQkFBc0I7b0JBQ2hDLFdBQVcsRUFBRSxtQ0FBbUM7b0JBQ2hELE1BQU0sRUFBRSxDQUFDLDBCQUEwQixDQUFDO2lCQUNyQzs4QkFFVSxPQUFPO3NCQUFmLEtBQUs7Z0JBQ2tCLFNBQVM7c0JBQWhDLFNBQVM7dUJBQUMsV0FBVyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgSW5wdXQsIFZpZXdDaGlsZCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBDcmVhdG9yQmFzZSwgUXVlc3Rpb25Ub29sYm94IH0gZnJvbSBcInN1cnZleS1jcmVhdG9yLWNvcmVcIjtcbmltcG9ydCB7IFZlcnRpY2FsUmVzcG9uc2l2aXR5TWFuYWdlciB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwic3VydmV5LWFuZ3VsYXItdWlcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2Yy1hZGFwdGl2ZS10b29sYm94XCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vYWRhcHRpdmUtdG9vbGJveC5jb21wb25lbnQuaHRtbFwiLFxuICBzdHlsZXM6IFtcIjpob3N0IHsgZGlzcGxheTogbm9uZTsgfVwiXVxufSlcbmV4cG9ydCBjbGFzcyBBZGFwdGl2ZVRvb2xib3hDb21wb25lbnQgZXh0ZW5kcyBCYXNlQW5ndWxhcjxRdWVzdGlvblRvb2xib3g+IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIGNyZWF0b3IhOiBDcmVhdG9yQmFzZTtcbiAgQFZpZXdDaGlsZChcImNvbnRhaW5lclwiKSBjb250YWluZXIhOiBFbGVtZW50UmVmPEhUTUxFbGVtZW50PjtcbiAgcHJpdmF0ZSByZXNwb25zaXZpdHlNYW5hZ2VyOiBWZXJ0aWNhbFJlc3BvbnNpdml0eU1hbmFnZXIgfCB1bmRlZmluZWQ7XG4gIHB1YmxpYyBnZXQgbW9kZWwoKSB7XG4gICAgcmV0dXJuIHRoaXMuY3JlYXRvci50b29sYm94O1xuICB9XG4gIG5nQWZ0ZXJWaWV3SW5pdCgpIHtcbiAgICB0aGlzLnJlc3BvbnNpdml0eU1hbmFnZXIgPVxuICAgICAgbmV3IFZlcnRpY2FsUmVzcG9uc2l2aXR5TWFuYWdlcih0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50IGFzIEhUTUxEaXZFbGVtZW50LFxuICAgICAgICB0aGlzLm1vZGVsLCBcIi5zdmMtdG9vbGJveF9fdG9vbDpub3QoLnN2LWRvdHMpXCIpO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBRdWVzdGlvblRvb2xib3gge1xuICAgIHJldHVybiB0aGlzLm1vZGVsO1xuICB9XG4gIG92ZXJyaWRlIG5nT25EZXN0cm95KCk6IHZvaWQge1xuICAgIHRoaXMucmVzcG9uc2l2aXR5TWFuYWdlcj8uZGlzcG9zZSgpO1xuICAgIHN1cGVyLm5nT25EZXN0cm95KCk7XG4gIH1cbn1cbiIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveFwiIFtjbGFzcy5zdmMtdG9vbGJveC0tY29tcGFjdF09XCJtb2RlbC5pc0NvbXBhY3RcIiAjY29udGFpbmVyPlxuICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveF9fY29udGFpbmVyXCI+XG4gICAgICA8bmctY29udGFpbmVyICpuZ0lmPVwiIShtb2RlbC5pc0NvbXBhY3QgfHwgbW9kZWwuY2F0ZWdvcmllcy5sZW5ndGggPT0gMSB8fCAhbW9kZWwuc2hvd0NhdGVnb3J5VGl0bGVzKVwiPlxuICAgICAgICA8c3ZjLXRvb2xib3gtY2F0ZWdvcnkgKm5nRm9yPVwibGV0IGNhdGVnb3J5IG9mIG1vZGVsLmNhdGVnb3JpZXNcIiBbY2F0ZWdvcnldPVwiY2F0ZWdvcnlcIiBbdG9vbGJveF09XCJtb2RlbFwiPjwvc3ZjLXRvb2xib3gtY2F0ZWdvcnk+XG4gICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC5pc0NvbXBhY3QgfHwgbW9kZWwuY2F0ZWdvcmllcy5sZW5ndGggPT0gMSB8fCAhbW9kZWwuc2hvd0NhdGVnb3J5VGl0bGVzXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveF9fY2F0ZWdvcnlcIj5cbiAgICAgICAgICA8c3ZjLXRvb2xib3gtdG9vbCAqbmdGb3I9XCJsZXQgaXRlbSBvZiBtb2RlbC5yZW5kZXJlZEFjdGlvbnNcIiBbY3JlYXRvcl09XCJjcmVhdG9yXCIgW2l0ZW1dPVwiaXRlbVwiIFtpc0NvbXBhY3RdPVwibW9kZWwuaXNDb21wYWN0XCI+PC9zdmMtdG9vbGJveC10b29sPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19