import { Component, ElementRef, Input, ViewChild } from "@angular/core";
import { AngularComponentFactory, BaseAngular, SurveyContentComponent } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "./svg-bundle.component";
import * as i3 from "./tabbed-menu/tabbed-menu/tabbed-menu.component";
import * as i4 from "./side-bar/side-bar.component";
import * as i5 from "@angular/common";
export class CreatorComponent extends BaseAngular {
    constructor(changeDetectorRef) {
        super(changeDetectorRef);
        changeDetectorRef.detach();
    }
    getModel() {
        return this.model;
    }
    get creator() {
        return this.model;
    }
    getShouldReattachChangeDetector() {
        return false;
    }
    onModelChanged() {
        this.changeDetectorRef.detectChanges();
    }
    ngAfterViewInit() {
        this.creator.initKeyboardShortcuts(this.container.nativeElement);
        this.creator.initResponsivityManager(this.container.nativeElement);
        super.ngOnInit();
    }
    ngOnDestroy() {
        this.creator.removeKeyboardShortcuts(this.container.nativeElement);
        this.creator.resetResponsivityManager();
        super.ngOnDestroy();
    }
}
CreatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CreatorComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
CreatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: CreatorComponent, selector: "survey-creator", inputs: { model: "model" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, read: ElementRef }], usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"!creator.isCreatorDisposed\">\n  <sv-ng-modal-container></sv-ng-modal-container>\n  <div class=\"svc-creator\" [class.svc-creator--mobile]=\"creator.isMobileView\" #container>\n    <div>\n      <svc-svg-bundle></svc-svg-bundle>\n    </div>\n    <div class=\"svc-full-container svc-creator__area svc-flex-column\"\n      [class.svc-creator__area--with-banner]=\"!creator.haveCommercialLicense\">\n      <div class=\"svc-flex-row svc-full-container\"\n        [class.svc-creator__side-bar--left]=\"creator.sidebarLocation == 'left'\">\n        <div class=\"svc-flex-column svc-flex-row__element svc-flex-row__element--growing\">\n          <div class=\"svc-top-bar\">\n            <div class=\"svc-tabbed-menu-wrapper\" [visible]=\"creator.showTabs\">\n              <svc-tabbed-menu [model]=\"creator.tabbedMenu\"></svc-tabbed-menu>\n            </div>\n            <div *ngIf=\"creator.showToolbar\" class=\"svc-toolbar-wrapper\" [visible]=\"creator.showToolbar\">\n              <sv-action-bar [model]=\"creator.toolbar\"></sv-action-bar>\n            </div>\n          </div>\n          <div class=\"svc-creator__content-wrapper svc-flex-row\"\n            [class.svc-creator__content-wrapper--footer-toolbar]=\"creator.isMobileView\">\n            <div class=\"svc-creator__content-holder svc-flex-column\">\n              <ng-container *ngFor=\"let tab of creator.tabs\">\n                <div class=\"svc-creator-tab\" *ngIf=\"creator.viewType == tab.id && tab.visible\"\n                  [attr.id]=\"'scrollableDiv-' + tab.id\" [class.svc-creator__toolbox--right]=\"creator.toolboxLocation == 'right'\">\n                  <ng-template [component]=\"{ name: tab.componentContent, data: { model: tab.data.model } }\"></ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n          <div *ngIf=\"creator.isMobileView\" class=\"svc-footer-bar\">\n            <div class=\"svc-toolbar-wrapper\" [visible]=\"creator.isMobileView\">\n              <sv-action-bar [model]=\"creator.footerToolbar\"></sv-action-bar>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"creator.sidebar\" [class.sv-mobile-side-bar]=\"creator.isMobileView\">\n          <svc-side-bar [model]=\"creator.sidebar\"></svc-side-bar>\n        </div>\n      </div>\n      <div class=\"svc-creator__banner\" *ngIf=\"!creator.haveCommercialLicense\">\n        <span class=\"svc-creator__non-commercial-text\">\n          <a href=\"https://surveyjs.io/buy\">\n            {{creator.licenseText}}\n          </a>\n        </span>\n      </div>\n      <sv-notifier [notifier]=\"creator.notifier\"></sv-notifier>\n    </div>\n  </div>\n</ng-container>", components: [{ type: i1.ModalComponent, selector: "sv-ng-modal-container" }, { type: i2.SvgBundleComponent, selector: "svc-svg-bundle" }, { type: i3.TabbledMenuComponent, selector: "svc-tabbed-menu", inputs: ["model"] }, { type: i1.ActionBarComponent, selector: "sv-action-bar, sv-ng-action-bar", inputs: ["model", "handleClick"] }, { type: i4.SidebarComponent, selector: "svc-side-bar", inputs: ["model"] }, { type: i1.NotifierComponent, selector: "sv-notifier", inputs: ["notifier"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.VisibleDirective, selector: "[visible]", inputs: ["visible"] }, { type: i5.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i1.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: CreatorComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "survey-creator",
                    templateUrl: "./creator.component.html"
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; }, propDecorators: { model: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container", { read: ElementRef }]
            }] } });
AngularComponentFactory.Instance.registerComponent("survey-widget", SurveyContentComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvY3JlYXRvci5jb21wb25lbnQudHMiLCIuLi8uLi9zcmMvY3JlYXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQW9DLFNBQVMsRUFBRSxVQUFVLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMxRyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsV0FBVyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7Ozs7Ozs7QUFPakcsTUFBTSxPQUFPLGdCQUFpQixTQUFRLFdBQXdCO0lBSTVELFlBQVksaUJBQW9DO1FBQzlDLEtBQUssQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3pCLGlCQUFpQixDQUFDLE1BQU0sRUFBRSxDQUFDO0lBQzdCLENBQUM7SUFDUyxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ0QsSUFBVyxPQUFPO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ2tCLCtCQUErQjtRQUNoRCxPQUFPLEtBQUssQ0FBQztJQUNmLENBQUM7SUFDa0IsY0FBYztRQUMvQixJQUFJLENBQUMsaUJBQWlCLENBQUMsYUFBYSxFQUFFLENBQUM7SUFDekMsQ0FBQztJQUNNLGVBQWU7UUFDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ2pFLElBQUksQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUNuRSxLQUFLLENBQUMsUUFBUSxFQUFFLENBQUM7SUFDbkIsQ0FBQztJQUNlLFdBQVc7UUFDekIsSUFBSSxDQUFDLE9BQU8sQ0FBQyx1QkFBdUIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQWEsQ0FBQyxDQUFDO1FBQ25FLElBQUksQ0FBQyxPQUFPLENBQUMsd0JBQXdCLEVBQUUsQ0FBQztRQUN4QyxLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDdEIsQ0FBQzs7OEdBN0JVLGdCQUFnQjtrR0FBaEIsZ0JBQWdCLHFLQUVLLFVBQVUsb0RDVjVDLCtwRkFrRGU7NEZEMUNGLGdCQUFnQjtrQkFKNUIsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZ0JBQWdCO29CQUMxQixXQUFXLEVBQUUsMEJBQTBCO2lCQUN4Qzt3R0FFVSxLQUFLO3NCQUFiLEtBQUs7Z0JBQ3dDLFNBQVM7c0JBQXRELFNBQVM7dUJBQUMsV0FBVyxFQUFFLEVBQUUsSUFBSSxFQUFFLFVBQVUsRUFBRTs7QUE4QjlDLHVCQUF1QixDQUFDLFFBQVEsQ0FBQyxpQkFBaUIsQ0FBQyxlQUFlLEVBQUUsc0JBQXNCLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFmdGVyVmlld0luaXQsIENoYW5nZURldGVjdG9yUmVmLCBDb21wb25lbnQsIEVsZW1lbnRSZWYsIElucHV0LCBWaWV3Q2hpbGQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnksIEJhc2VBbmd1bGFyLCBTdXJ2ZXlDb250ZW50Q29tcG9uZW50IH0gZnJvbSBcInN1cnZleS1hbmd1bGFyLXVpXCI7XG5pbXBvcnQgeyBDcmVhdG9yQmFzZSB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdXJ2ZXktY3JlYXRvclwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL2NyZWF0b3IuY29tcG9uZW50Lmh0bWxcIlxufSlcbmV4cG9ydCBjbGFzcyBDcmVhdG9yQ29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8Q3JlYXRvckJhc2U+IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCB7XG4gIEBJbnB1dCgpIG1vZGVsITogQ3JlYXRvckJhc2U7XG4gIEBWaWV3Q2hpbGQoXCJjb250YWluZXJcIiwgeyByZWFkOiBFbGVtZW50UmVmIH0pIGNvbnRhaW5lciE6IEVsZW1lbnRSZWY8SFRNTERpdkVsZW1lbnQ+XG5cbiAgY29uc3RydWN0b3IoY2hhbmdlRGV0ZWN0b3JSZWY6IENoYW5nZURldGVjdG9yUmVmKSB7XG4gICAgc3VwZXIoY2hhbmdlRGV0ZWN0b3JSZWYpO1xuICAgIGNoYW5nZURldGVjdG9yUmVmLmRldGFjaCgpO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBDcmVhdG9yQmFzZSB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgcHVibGljIGdldCBjcmVhdG9yKCk6IENyZWF0b3JCYXNlIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICBwcm90ZWN0ZWQgb3ZlcnJpZGUgZ2V0U2hvdWxkUmVhdHRhY2hDaGFuZ2VEZXRlY3RvcigpOiBib29sZWFuIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIG9uTW9kZWxDaGFuZ2VkKCk6IHZvaWQge1xuICAgIHRoaXMuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xuICB9XG4gIHB1YmxpYyBuZ0FmdGVyVmlld0luaXQoKTogdm9pZCB7XG4gICAgdGhpcy5jcmVhdG9yLmluaXRLZXlib2FyZFNob3J0Y3V0cyh0aGlzLmNvbnRhaW5lci5uYXRpdmVFbGVtZW50KTtcbiAgICB0aGlzLmNyZWF0b3IuaW5pdFJlc3BvbnNpdml0eU1hbmFnZXIodGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudCk7XG4gICAgc3VwZXIubmdPbkluaXQoKTtcbiAgfVxuICBwdWJsaWMgb3ZlcnJpZGUgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5jcmVhdG9yLnJlbW92ZUtleWJvYXJkU2hvcnRjdXRzKHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQpO1xuICAgIHRoaXMuY3JlYXRvci5yZXNldFJlc3BvbnNpdml0eU1hbmFnZXIoKTtcbiAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xuICB9XG59XG5cbkFuZ3VsYXJDb21wb25lbnRGYWN0b3J5Lkluc3RhbmNlLnJlZ2lzdGVyQ29tcG9uZW50KFwic3VydmV5LXdpZGdldFwiLCBTdXJ2ZXlDb250ZW50Q29tcG9uZW50KTtcbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCIhY3JlYXRvci5pc0NyZWF0b3JEaXNwb3NlZFwiPlxuICA8c3YtbmctbW9kYWwtY29udGFpbmVyPjwvc3YtbmctbW9kYWwtY29udGFpbmVyPlxuICA8ZGl2IGNsYXNzPVwic3ZjLWNyZWF0b3JcIiBbY2xhc3Muc3ZjLWNyZWF0b3ItLW1vYmlsZV09XCJjcmVhdG9yLmlzTW9iaWxlVmlld1wiICNjb250YWluZXI+XG4gICAgPGRpdj5cbiAgICAgIDxzdmMtc3ZnLWJ1bmRsZT48L3N2Yy1zdmctYnVuZGxlPlxuICAgIDwvZGl2PlxuICAgIDxkaXYgY2xhc3M9XCJzdmMtZnVsbC1jb250YWluZXIgc3ZjLWNyZWF0b3JfX2FyZWEgc3ZjLWZsZXgtY29sdW1uXCJcbiAgICAgIFtjbGFzcy5zdmMtY3JlYXRvcl9fYXJlYS0td2l0aC1iYW5uZXJdPVwiIWNyZWF0b3IuaGF2ZUNvbW1lcmNpYWxMaWNlbnNlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ZjLWZsZXgtcm93IHN2Yy1mdWxsLWNvbnRhaW5lclwiXG4gICAgICAgIFtjbGFzcy5zdmMtY3JlYXRvcl9fc2lkZS1iYXItLWxlZnRdPVwiY3JlYXRvci5zaWRlYmFyTG9jYXRpb24gPT0gJ2xlZnQnXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtZmxleC1jb2x1bW4gc3ZjLWZsZXgtcm93X19lbGVtZW50IHN2Yy1mbGV4LXJvd19fZWxlbWVudC0tZ3Jvd2luZ1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9wLWJhclwiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN2Yy10YWJiZWQtbWVudS13cmFwcGVyXCIgW3Zpc2libGVdPVwiY3JlYXRvci5zaG93VGFic1wiPlxuICAgICAgICAgICAgICA8c3ZjLXRhYmJlZC1tZW51IFttb2RlbF09XCJjcmVhdG9yLnRhYmJlZE1lbnVcIj48L3N2Yy10YWJiZWQtbWVudT5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPGRpdiAqbmdJZj1cImNyZWF0b3Iuc2hvd1Rvb2xiYXJcIiBjbGFzcz1cInN2Yy10b29sYmFyLXdyYXBwZXJcIiBbdmlzaWJsZV09XCJjcmVhdG9yLnNob3dUb29sYmFyXCI+XG4gICAgICAgICAgICAgIDxzdi1hY3Rpb24tYmFyIFttb2RlbF09XCJjcmVhdG9yLnRvb2xiYXJcIj48L3N2LWFjdGlvbi1iYXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ZjLWNyZWF0b3JfX2NvbnRlbnQtd3JhcHBlciBzdmMtZmxleC1yb3dcIlxuICAgICAgICAgICAgW2NsYXNzLnN2Yy1jcmVhdG9yX19jb250ZW50LXdyYXBwZXItLWZvb3Rlci10b29sYmFyXT1cImNyZWF0b3IuaXNNb2JpbGVWaWV3XCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ZjLWNyZWF0b3JfX2NvbnRlbnQtaG9sZGVyIHN2Yy1mbGV4LWNvbHVtblwiPlxuICAgICAgICAgICAgICA8bmctY29udGFpbmVyICpuZ0Zvcj1cImxldCB0YWIgb2YgY3JlYXRvci50YWJzXCI+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cInN2Yy1jcmVhdG9yLXRhYlwiICpuZ0lmPVwiY3JlYXRvci52aWV3VHlwZSA9PSB0YWIuaWQgJiYgdGFiLnZpc2libGVcIlxuICAgICAgICAgICAgICAgICAgW2F0dHIuaWRdPVwiJ3Njcm9sbGFibGVEaXYtJyArIHRhYi5pZFwiIFtjbGFzcy5zdmMtY3JlYXRvcl9fdG9vbGJveC0tcmlnaHRdPVwiY3JlYXRvci50b29sYm94TG9jYXRpb24gPT0gJ3JpZ2h0J1wiPlxuICAgICAgICAgICAgICAgICAgPG5nLXRlbXBsYXRlIFtjb21wb25lbnRdPVwieyBuYW1lOiB0YWIuY29tcG9uZW50Q29udGVudCwgZGF0YTogeyBtb2RlbDogdGFiLmRhdGEubW9kZWwgfSB9XCI+PC9uZy10ZW1wbGF0ZT5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8ZGl2ICpuZ0lmPVwiY3JlYXRvci5pc01vYmlsZVZpZXdcIiBjbGFzcz1cInN2Yy1mb290ZXItYmFyXCI+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwic3ZjLXRvb2xiYXItd3JhcHBlclwiIFt2aXNpYmxlXT1cImNyZWF0b3IuaXNNb2JpbGVWaWV3XCI+XG4gICAgICAgICAgICAgIDxzdi1hY3Rpb24tYmFyIFttb2RlbF09XCJjcmVhdG9yLmZvb3RlclRvb2xiYXJcIj48L3N2LWFjdGlvbi1iYXI+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgKm5nSWY9XCJjcmVhdG9yLnNpZGViYXJcIiBbY2xhc3Muc3YtbW9iaWxlLXNpZGUtYmFyXT1cImNyZWF0b3IuaXNNb2JpbGVWaWV3XCI+XG4gICAgICAgICAgPHN2Yy1zaWRlLWJhciBbbW9kZWxdPVwiY3JlYXRvci5zaWRlYmFyXCI+PC9zdmMtc2lkZS1iYXI+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ZjLWNyZWF0b3JfX2Jhbm5lclwiICpuZ0lmPVwiIWNyZWF0b3IuaGF2ZUNvbW1lcmNpYWxMaWNlbnNlXCI+XG4gICAgICAgIDxzcGFuIGNsYXNzPVwic3ZjLWNyZWF0b3JfX25vbi1jb21tZXJjaWFsLXRleHRcIj5cbiAgICAgICAgICA8YSBocmVmPVwiaHR0cHM6Ly9zdXJ2ZXlqcy5pby9idXlcIj5cbiAgICAgICAgICAgIHt7Y3JlYXRvci5saWNlbnNlVGV4dH19XG4gICAgICAgICAgPC9hPlxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICAgIDxzdi1ub3RpZmllciBbbm90aWZpZXJdPVwiY3JlYXRvci5ub3RpZmllclwiPjwvc3Ytbm90aWZpZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy1jb250YWluZXI+Il19