import { Component } from "@angular/core";
import { AngularComponentFactory } from "survey-angular-ui";
import { QuestionDesignerComponent } from "./question.component";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class PanelDesignerComponent extends QuestionDesignerComponent {
}
PanelDesignerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PanelDesignerComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PanelDesignerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: PanelDesignerComponent, selector: "svc-panel", usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div *ngIf=\"adorner\" class=\"svc-question__adorner\" [class]=\"adorner.rootCss()\"\n    (mouseover)=\"adorner.hover($event, $event.currentTarget)\" (mouseleave)=\"adorner.hover($event, $event.currentTarget)\"\n    [attr.data-sv-drop-target-survey-element]=\"adorner.element.name || null\" #container>\n\n    <div [class]=\"adorner.css()\" [key2click]\n      (click)=\"adorner.element.isInteractiveDesignElement ? adorner.select(adorner, $event) : null\"\n      [attr.tabindex]=\"adorner.element.isInteractiveDesignElement ? undefined : -1\">\n      <div *ngIf=\"adorner.allowDragging && adorner.element.isInteractiveDesignElement\" class=\"svc-question__drag-area\"\n        (pointerdown)=\"adorner.onPointerDown($event)\">\n        <svg class=\"svc-question__drag-element\" [iconName]=\"'icon-drag-area-indicator_24x16'\" [size]=\"24\"\n          sv-ng-svg-icon></svg>\n      </div>\n\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n\n      <div *ngIf=\"adorner.isEmptyElement\" class=\"svc-panel__placeholder_frame\">\n        <div class=\"svc-panel__placeholder\">{{ adorner.placeholderText }}</div>\n        <div *ngIf=\"adorner.showAddQuestionButton\" class=\"svc-panel__add-new-question svc-action-button\" [key2click]\n          (click)=\"addNewQuestion($event)\">\n          <span class=\"svc-text svc-text--normal svc-text--bold\">\n            {{ adorner.addNewQuestionText }}\n          </span>\n        </div>\n      </div>\n\n      <ng-template *ngIf=\"adornerComponent && adorner.element.isInteractiveDesignElement\"\n        [component]=\"{ name: adornerComponent, data: { adorner: adorner, question: model } }\">\n      </ng-template>\n\n      <div *ngIf=\"!adorner.isEmptyElement && adorner.showAddQuestionButton\"\n        class=\"svc-panel__add-new-question-container\">\n        <div class=\"svc-panel__add-new-question svc-action-button\" [key2click] (click)=\"addNewQuestion($event)\">\n          <span class=\"svc-text svc-text--normal svc-text--bold\">\n            {{ adorner.addNewQuestionText }}\n          </span>\n        </div>\n        <button type=\"button\" [attr.title]=\"adorner.addNewQuestionText\" [key2click] (click)=\"selectQuestionType($event)\"\n          class=\"svc-panel__question-type-selector\">\n          <svg class=\"svc-panel__question-type-selector-icon\" [iconName]=\"adorner.questionTypeSelectorModel.iconName\"\n            [size]=\"24\" sv-ng-svg-icon></svg>\n          <sv-ng-popup [popupModel]=\"adorner.questionTypeSelectorModel.popupModel\"></sv-ng-popup>\n        </button>\n      </div>\n\n      <div *ngIf=\"adorner.element.isInteractiveDesignElement\" class=\"svc-question__content-actions\">\n        <sv-action-bar [model]=\"adorner.actionContainer\" [handleClick]=\"false\"></sv-action-bar>\n      </div>\n    </div>\n  </div>\n</ng-template>", styles: [":host { display: none; }"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i1.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel"] }, { type: i1.ActionBarComponent, selector: "sv-action-bar, sv-ng-action-bar", inputs: ["model", "handleClick"] }], directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i1.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: PanelDesignerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: "svc-panel",
                    templateUrl: "./panel.component.html",
                    styles: [":host { display: none; }"]
                }]
        }] });
AngularComponentFactory.Instance.registerComponent("svc-panel", PanelDesignerComponent);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFuZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL3BhbmVsLmNvbXBvbmVudC50cyIsIi4uLy4uL3NyYy9wYW5lbC5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQXFCLFNBQVMsRUFBMkIsTUFBTSxlQUFlLENBQUM7QUFDdEYsT0FBTyxFQUFFLHVCQUF1QixFQUE2QyxNQUFNLG1CQUFtQixDQUFDO0FBSXZHLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLHNCQUFzQixDQUFDOzs7O0FBT2pFLE1BQU0sT0FBTyxzQkFBdUIsU0FBUSx5QkFBeUI7O29IQUF4RCxzQkFBc0I7d0dBQXRCLHNCQUFzQix3RUNabkMsdzBGQWtEYzs0RkR0Q0Qsc0JBQXNCO2tCQUxsQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixXQUFXLEVBQUUsd0JBQXdCO29CQUNyQyxNQUFNLEVBQUUsQ0FBQywwQkFBMEIsQ0FBQztpQkFDckM7O0FBSUQsdUJBQXVCLENBQUMsUUFBUSxDQUFDLGlCQUFpQixDQUFDLFdBQVcsRUFBRSxzQkFBc0IsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgSW5wdXQsIFZpZXdDb250YWluZXJSZWYgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQW5ndWxhckNvbXBvbmVudEZhY3RvcnksIEJhc2VBbmd1bGFyLCBFbWJlZGRlZFZpZXdDb250ZW50Q29tcG9uZW50IH0gZnJvbSBcInN1cnZleS1hbmd1bGFyLXVpXCI7XG5pbXBvcnQgeyBQYWdlTW9kZWwsIFF1ZXN0aW9uLCBTdXJ2ZXlNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgQ3JlYXRvckJhc2UsIFF1ZXN0aW9uQWRvcm5lclZpZXdNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5pbXBvcnQgeyBDcmVhdG9yTW9kZWxDb21wb25lbnQgfSBmcm9tIFwiLi9jcmVhdG9yLW1vZGVsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgUXVlc3Rpb25EZXNpZ25lckNvbXBvbmVudCB9IGZyb20gXCIuL3F1ZXN0aW9uLmNvbXBvbmVudFwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLXBhbmVsXCIsXG4gIHRlbXBsYXRlVXJsOiBcIi4vcGFuZWwuY29tcG9uZW50Lmh0bWxcIixcbiAgc3R5bGVzOiBbXCI6aG9zdCB7IGRpc3BsYXk6IG5vbmU7IH1cIl1cbn0pXG5leHBvcnQgY2xhc3MgUGFuZWxEZXNpZ25lckNvbXBvbmVudCBleHRlbmRzIFF1ZXN0aW9uRGVzaWduZXJDb21wb25lbnQge1xufVxuXG5Bbmd1bGFyQ29tcG9uZW50RmFjdG9yeS5JbnN0YW5jZS5yZWdpc3RlckNvbXBvbmVudChcInN2Yy1wYW5lbFwiLCBQYW5lbERlc2lnbmVyQ29tcG9uZW50KTtcbiIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgKm5nSWY9XCJhZG9ybmVyXCIgY2xhc3M9XCJzdmMtcXVlc3Rpb25fX2Fkb3JuZXJcIiBbY2xhc3NdPVwiYWRvcm5lci5yb290Q3NzKClcIlxuICAgIChtb3VzZW92ZXIpPVwiYWRvcm5lci5ob3ZlcigkZXZlbnQsICRldmVudC5jdXJyZW50VGFyZ2V0KVwiIChtb3VzZWxlYXZlKT1cImFkb3JuZXIuaG92ZXIoJGV2ZW50LCAkZXZlbnQuY3VycmVudFRhcmdldClcIlxuICAgIFthdHRyLmRhdGEtc3YtZHJvcC10YXJnZXQtc3VydmV5LWVsZW1lbnRdPVwiYWRvcm5lci5lbGVtZW50Lm5hbWUgfHwgbnVsbFwiICNjb250YWluZXI+XG5cbiAgICA8ZGl2IFtjbGFzc109XCJhZG9ybmVyLmNzcygpXCIgW2tleTJjbGlja11cbiAgICAgIChjbGljayk9XCJhZG9ybmVyLmVsZW1lbnQuaXNJbnRlcmFjdGl2ZURlc2lnbkVsZW1lbnQgPyBhZG9ybmVyLnNlbGVjdChhZG9ybmVyLCAkZXZlbnQpIDogbnVsbFwiXG4gICAgICBbYXR0ci50YWJpbmRleF09XCJhZG9ybmVyLmVsZW1lbnQuaXNJbnRlcmFjdGl2ZURlc2lnbkVsZW1lbnQgPyB1bmRlZmluZWQgOiAtMVwiPlxuICAgICAgPGRpdiAqbmdJZj1cImFkb3JuZXIuYWxsb3dEcmFnZ2luZyAmJiBhZG9ybmVyLmVsZW1lbnQuaXNJbnRlcmFjdGl2ZURlc2lnbkVsZW1lbnRcIiBjbGFzcz1cInN2Yy1xdWVzdGlvbl9fZHJhZy1hcmVhXCJcbiAgICAgICAgKHBvaW50ZXJkb3duKT1cImFkb3JuZXIub25Qb2ludGVyRG93bigkZXZlbnQpXCI+XG4gICAgICAgIDxzdmcgY2xhc3M9XCJzdmMtcXVlc3Rpb25fX2RyYWctZWxlbWVudFwiIFtpY29uTmFtZV09XCInaWNvbi1kcmFnLWFyZWEtaW5kaWNhdG9yXzI0eDE2J1wiIFtzaXplXT1cIjI0XCJcbiAgICAgICAgICBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8bmctdGVtcGxhdGUgW2NvbXBvbmVudF09XCJ7IG5hbWU6IGNvbXBvbmVudE5hbWUsIGRhdGE6IGNvbXBvbmVudERhdGEgfVwiPjwvbmctdGVtcGxhdGU+XG5cbiAgICAgIDxkaXYgKm5nSWY9XCJhZG9ybmVyLmlzRW1wdHlFbGVtZW50XCIgY2xhc3M9XCJzdmMtcGFuZWxfX3BsYWNlaG9sZGVyX2ZyYW1lXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtcGFuZWxfX3BsYWNlaG9sZGVyXCI+e3sgYWRvcm5lci5wbGFjZWhvbGRlclRleHQgfX08L2Rpdj5cbiAgICAgICAgPGRpdiAqbmdJZj1cImFkb3JuZXIuc2hvd0FkZFF1ZXN0aW9uQnV0dG9uXCIgY2xhc3M9XCJzdmMtcGFuZWxfX2FkZC1uZXctcXVlc3Rpb24gc3ZjLWFjdGlvbi1idXR0b25cIiBba2V5MmNsaWNrXVxuICAgICAgICAgIChjbGljayk9XCJhZGROZXdRdWVzdGlvbigkZXZlbnQpXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdmMtdGV4dCBzdmMtdGV4dC0tbm9ybWFsIHN2Yy10ZXh0LS1ib2xkXCI+XG4gICAgICAgICAgICB7eyBhZG9ybmVyLmFkZE5ld1F1ZXN0aW9uVGV4dCB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPG5nLXRlbXBsYXRlICpuZ0lmPVwiYWRvcm5lckNvbXBvbmVudCAmJiBhZG9ybmVyLmVsZW1lbnQuaXNJbnRlcmFjdGl2ZURlc2lnbkVsZW1lbnRcIlxuICAgICAgICBbY29tcG9uZW50XT1cInsgbmFtZTogYWRvcm5lckNvbXBvbmVudCwgZGF0YTogeyBhZG9ybmVyOiBhZG9ybmVyLCBxdWVzdGlvbjogbW9kZWwgfSB9XCI+XG4gICAgICA8L25nLXRlbXBsYXRlPlxuXG4gICAgICA8ZGl2ICpuZ0lmPVwiIWFkb3JuZXIuaXNFbXB0eUVsZW1lbnQgJiYgYWRvcm5lci5zaG93QWRkUXVlc3Rpb25CdXR0b25cIlxuICAgICAgICBjbGFzcz1cInN2Yy1wYW5lbF9fYWRkLW5ldy1xdWVzdGlvbi1jb250YWluZXJcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInN2Yy1wYW5lbF9fYWRkLW5ldy1xdWVzdGlvbiBzdmMtYWN0aW9uLWJ1dHRvblwiIFtrZXkyY2xpY2tdIChjbGljayk9XCJhZGROZXdRdWVzdGlvbigkZXZlbnQpXCI+XG4gICAgICAgICAgPHNwYW4gY2xhc3M9XCJzdmMtdGV4dCBzdmMtdGV4dC0tbm9ybWFsIHN2Yy10ZXh0LS1ib2xkXCI+XG4gICAgICAgICAgICB7eyBhZG9ybmVyLmFkZE5ld1F1ZXN0aW9uVGV4dCB9fVxuICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxidXR0b24gdHlwZT1cImJ1dHRvblwiIFthdHRyLnRpdGxlXT1cImFkb3JuZXIuYWRkTmV3UXVlc3Rpb25UZXh0XCIgW2tleTJjbGlja10gKGNsaWNrKT1cInNlbGVjdFF1ZXN0aW9uVHlwZSgkZXZlbnQpXCJcbiAgICAgICAgICBjbGFzcz1cInN2Yy1wYW5lbF9fcXVlc3Rpb24tdHlwZS1zZWxlY3RvclwiPlxuICAgICAgICAgIDxzdmcgY2xhc3M9XCJzdmMtcGFuZWxfX3F1ZXN0aW9uLXR5cGUtc2VsZWN0b3ItaWNvblwiIFtpY29uTmFtZV09XCJhZG9ybmVyLnF1ZXN0aW9uVHlwZVNlbGVjdG9yTW9kZWwuaWNvbk5hbWVcIlxuICAgICAgICAgICAgW3NpemVdPVwiMjRcIiBzdi1uZy1zdmctaWNvbj48L3N2Zz5cbiAgICAgICAgICA8c3YtbmctcG9wdXAgW3BvcHVwTW9kZWxdPVwiYWRvcm5lci5xdWVzdGlvblR5cGVTZWxlY3Rvck1vZGVsLnBvcHVwTW9kZWxcIj48L3N2LW5nLXBvcHVwPlxuICAgICAgICA8L2J1dHRvbj5cbiAgICAgIDwvZGl2PlxuXG4gICAgICA8ZGl2ICpuZ0lmPVwiYWRvcm5lci5lbGVtZW50LmlzSW50ZXJhY3RpdmVEZXNpZ25FbGVtZW50XCIgY2xhc3M9XCJzdmMtcXVlc3Rpb25fX2NvbnRlbnQtYWN0aW9uc1wiPlxuICAgICAgICA8c3YtYWN0aW9uLWJhciBbbW9kZWxdPVwiYWRvcm5lci5hY3Rpb25Db250YWluZXJcIiBbaGFuZGxlQ2xpY2tdPVwiZmFsc2VcIj48L3N2LWFjdGlvbi1iYXI+XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG48L25nLXRlbXBsYXRlPiJdfQ==