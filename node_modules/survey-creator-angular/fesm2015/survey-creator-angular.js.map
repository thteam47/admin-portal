{"version":3,"file":"survey-creator-angular.js","sources":["../../src/svg-bundle.component.ts","../../src/tabbed-menu/tabbed-menu/tabbed-menu-item-wrapper.component.ts","../../src/tabbed-menu/tabbed-menu/tabbed-menu-item-wrapper.component.html","../../src/tabbed-menu/tabbed-menu/tabbed-menu.component.ts","../../src/tabbed-menu/tabbed-menu/tabbed-menu.component.html","../../src/side-bar/side-bar-tab.component.ts","../../src/side-bar/side-bar-tab.component.html","../../src/side-bar/side-bar.component.ts","../../src/side-bar/side-bar.component.html","../../src/creator.component.ts","../../src/creator.component.html","../../src/creator-model.component.ts","../../src/toolbox/toolbox-tool.component.ts","../../src/toolbox/toolbox-tool.component.html","../../src/toolbox/toolbox-category.component.ts","../../src/toolbox/toolbox-category.component.html","../../src/toolbox/adaptive-toolbox.component.ts","../../src/toolbox/adaptive-toolbox.component.html","../../src/page.component.ts","../../src/page.component.html","../../src/tabs/designer/designer-pages.component.ts","../../src/tabs/designer/designer-pages.component.html","../../src/page-navigator/page-navigator-item.component.ts","../../src/page-navigator/page-navigator-item.component.html","../../src/page-navigator/page-navigator.component.ts","../../src/page-navigator/page-navigator.component.html","../../src/tabs/designer/designer-survey.component.ts","../../src/tabs/designer/designer-survey.component.html","../../src/tabs/designer/designer.component.ts","../../src/tabs/designer/designer.component.html","../../src/tabbed-menu/tabbed-menu/tabbed-menu-item.component.ts","../../src/tabbed-menu/tabbed-menu/tabbed-menu-item.component.html","../../src/property-panel/object-selector.component.ts","../../src/property-panel/object-selector.component.html","../../src/property-panel/property-grid.component.ts","../../src/property-panel/property-grid.component.html","../../src/tabs/json/json-editor-textarea.component.ts","../../src/tabs/json/json-editor-textarea.component.html","../../src/tabs/json/json-editor-ace.component.ts","../../src/tabs/json/json-editor-ace.component.html","../../src/tabs/logic/logic-add-btn.component.ts","../../src/tabs/logic/logic-add-btn.component.html","../../src/tabs/logic/logic.component.ts","../../src/tabs/logic/logic.component.html","../../src/components/action-button.component.ts","../../src/components/action-button.component.html","../../src/questions/question-link-value.component.ts","../../src/questions/question-link-value.component.html","../../src/questions/question-embedded-survey.component.ts","../../src/questions/question-embedded-survey.component.html","../../src/tabs/translation/translation.component.ts","../../src/tabs/translation/translation.component.html","../../src/tabs/translation/translation-line-skeleton.component.ts","../../src/tabs/translation/translation-line-skeleton.component.html","../../src/tabs/preview/simulator.component.ts","../../src/tabs/preview/simulator.component.html","../../src/tabs/preview/test-again.component.ts","../../src/tabs/preview/test-again.component.html","../../src/tabs/preview/survey-results-row.component.ts","../../src/tabs/preview/survey-results-row.component.html","../../src/tabs/preview/survey-results.component.ts","../../src/tabs/preview/survey-results.component.html","../../src/tabs/preview/test.component.ts","../../src/tabs/preview/test.component.html","../../src/question.component.ts","../../src/question.component.html","../../src/adorners/item-value.component.ts","../../src/adorners/item-value.component.html","../../src/adorners/image-item-value.component.ts","../../src/adorners/image-item-value.component.html","../../src/adorners/question-dropdown.component.ts","../../src/adorners/question-dropdown.component.html","../../src/adorners/question-image.component.ts","../../src/adorners/question-image.component.html","../../src/panel.component.ts","../../src/panel.component.html","../../src/toolbox/toolbox-item.component.ts","../../src/toolbox/toolbox-item.component.html","../../src/string-editor.component.ts","../../src/string-editor.component.html","../../src/questions/logic-operator.component.ts","../../src/questions/logic-operator.component.html","../../src/adorners/matrix-cell.component.ts","../../src/adorners/matrix-cell.component.html","../../src/question-editor.component.ts","../../src/question-editor.component.html","../../src/adorners/cell-question.component.ts","../../src/adorners/cell-question.component.html","../../src/adorners/cell-question-dropdown.component.ts","../../src/adorners/cell-question-dropdown.component.html","../../src/row.component.ts","../../src/row.component.html","../../src/question-widget.component.ts","../../src/question-widget.component.html","../../src/toolbox/toolbox.component.ts","../../src/toolbox/toolbox.component.html","../../src/adorners/question-rating.component.ts","../../src/adorners/question-rating.component.html","../../src/header/logo-image.component.ts","../../src/header/logo-image.component.html","../../src/custom-questions/spin-editor.component.ts","../../src/custom-questions/spin-editor.component.html","../../src/custom-questions/color.component.ts","../../src/custom-questions/color.component.html","../../src/custom-questions/file.component.ts","../../src/custom-questions/file.component.html","../../src/angular-ui.module.ts","../../src/survey-creator-angular.ts"],"sourcesContent":["import { SvgRegistry } from \"survey-core\";\nimport { Component, ElementRef, OnInit, ViewChild } from \"@angular/core\";\n@Component({\n  selector: \"svc-svg-bundle\",\n  template: \"<svg id='sv-icon-holder-global-container' #svgContainer></svg>\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SvgBundleComponent implements OnInit {\n  @ViewChild(\"svgContainer\", { static: true }) svgContainer!: ElementRef<SVGElement>;\n  ngOnInit(): void {\n    this.svgContainer.nativeElement.innerHTML = SvgRegistry.iconsRenderedHtml();\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { TabbedMenuItem } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tabbed-menu-item-wrapper\",\n  templateUrl: \"./tabbed-menu-item-wrapper.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TabbedMenuItemWrapperComponent extends BaseAngular<TabbedMenuItem> {\n  @Input() model!: TabbedMenuItem;\n  protected getModel(): TabbedMenuItem {\n    return this.model;\n  }\n}","<ng-template #template>\n  <span class=\"svc-tabbed-menu-item-container\" [class.sv-action--hidden]=\"!model.isVisible\" [class]=\"model.css\">\n    <div class=\"sv-action__content\">\n      <ng-template [component]=\"{ name: model.component || 'svc-tabbed-menu-item', data: { model } }\"></ng-template>\n    </div>\n  </span>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { ResponsivityManager } from \"survey-core\";\nimport { TabbedMenuContainer } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tabbed-menu\",\n  templateUrl: \"./tabbed-menu.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TabbledMenuComponent extends BaseAngular<TabbedMenuContainer> implements AfterViewInit {\n  @Input() model!: TabbedMenuContainer;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  private responsivityManager!: ResponsivityManager;\n  protected getModel(): TabbedMenuContainer {\n    return this.model;\n  }\n  ngAfterViewInit(): void {\n    this.responsivityManager = new ResponsivityManager(\n      this.container.nativeElement,\n      this.model,\n      \".svc-tabbed-menu-item-container:not(.sv-dots)>.sv-action__content\"\n    );\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.responsivityManager.dispose();\n  }\n\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tabbed-menu\", TabbledMenuComponent);","<ng-template #template>\n  <div class=\"svc-tabbed-menu\" #container>\n    <ng-container *ngFor=\"let action of model.renderedActions\">  \n      <svc-tabbed-menu-item-wrapper [model]=\"action\"></svc-tabbed-menu-item-wrapper>\n    </ng-container>\n  </div>\n</ng-template>","\nimport { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { SidebarTabModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-side-bar-tab\",\n  templateUrl: \"./side-bar-tab.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SidebarTabComponent extends BaseAngular<SidebarTabModel> {\n  @Input() model!: SidebarTabModel;\n  protected getModel(): SidebarTabModel {\n    return this.model;\n  }\n}","<ng-template #template>\n  <ng-container *ngIf=\"model.visible\">\n    <ng-template [component]=\"{ name: model.componentName, data: { model: model.model } }\"></ng-template>\n  </ng-container>\n</ng-template>","import { SidebarModel } from \"survey-creator-core\";\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-side-bar\",\n  templateUrl: \"./side-bar.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SidebarComponent extends BaseAngular<SidebarModel> implements AfterViewInit {\n  @Input() model!: SidebarModel;\n  @ViewChild(\"container\") container!: ElementRef<HTMLElement>;\n  protected getModel(): SidebarModel {\n    return this.model;\n  }\n\n  override ngOnDestroy(): void {\n    this.model.resetResizeManager();\n    super.ngOnDestroy();\n  }\n  ngAfterViewInit(): void {\n    this.model.initResizeManager(this.container.nativeElement as HTMLDivElement);\n  }\n}","<ng-template #template>\n  <div class=\"svc-side-bar\" [class.svc-flyout-side-bar]=\"model.flyoutPanelMode\" [visible]=\"model.hasVisibleTabs\">\n    <div class=\"svc-side-bar__shadow\" (click)=\"model.collapseSidebar()\"></div>\n    <div class=\"svc-flex-column svc-side-bar__wrapper\">\n      <div class=\"svc-side-bar__container\" [visible]=\"model.visible\" #container>\n        <div class=\"svc-side-bar__container-header\">\n          <div class=\"svc-side-bar__container-actions\">\n            <sv-action-bar [model]=\"model.toolbar\"></sv-action-bar>\n          </div>\n          <div *ngIf=\"!!model.headerText\" class=\"svc-side-bar__container-title\">{{model.headerText}}</div>\n        </div>\n        <div class=\"svc-side-bar__container-content\">\n          <ng-container *ngFor=\"let tab of model.tabs\">\n            <svc-side-bar-tab [model]=\"tab\"></svc-side-bar-tab> \n          </ng-container>\n        </div>\n        <div class=\"svc-side-bar__container-close\">\n          <div class=\"sd-btn sd-btn--action svc-side-bar__container-close-button\"\n            (click)=\"model.collapseSidebar()\"> {{ model.closeText }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, SurveyContentComponent } from \"survey-angular-ui\";\nimport { CreatorBase } from \"survey-creator-core\";\n\n@Component({\n  selector: \"survey-creator\",\n  templateUrl: \"./creator.component.html\"\n})\nexport class CreatorComponent extends BaseAngular<CreatorBase> implements AfterViewInit {\n  @Input() model!: CreatorBase;\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef<HTMLDivElement>\n\n  constructor(changeDetectorRef: ChangeDetectorRef) {\n    super(changeDetectorRef);\n    changeDetectorRef.detach();\n  }\n  protected getModel(): CreatorBase {\n    return this.model;\n  }\n  public get creator(): CreatorBase {\n    return this.model;\n  }\n  protected override getShouldReattachChangeDetector(): boolean {\n    return false;\n  }\n  protected override onModelChanged(): void {\n    this.changeDetectorRef.detectChanges();\n  }\n  public ngAfterViewInit(): void {\n    this.creator.initKeyboardShortcuts(this.container.nativeElement);\n    this.creator.initResponsivityManager(this.container.nativeElement);\n    super.ngOnInit();\n  }\n  public override ngOnDestroy(): void {\n    this.creator.removeKeyboardShortcuts(this.container.nativeElement);\n    this.creator.resetResponsivityManager();\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"survey-widget\", SurveyContentComponent);\n","<ng-container *ngIf=\"!creator.isCreatorDisposed\">\n  <sv-ng-modal-container></sv-ng-modal-container>\n  <div class=\"svc-creator\" [class.svc-creator--mobile]=\"creator.isMobileView\" #container>\n    <div>\n      <svc-svg-bundle></svc-svg-bundle>\n    </div>\n    <div class=\"svc-full-container svc-creator__area svc-flex-column\"\n      [class.svc-creator__area--with-banner]=\"!creator.haveCommercialLicense\">\n      <div class=\"svc-flex-row svc-full-container\"\n        [class.svc-creator__side-bar--left]=\"creator.sidebarLocation == 'left'\">\n        <div class=\"svc-flex-column svc-flex-row__element svc-flex-row__element--growing\">\n          <div class=\"svc-top-bar\">\n            <div class=\"svc-tabbed-menu-wrapper\" [visible]=\"creator.showTabs\">\n              <svc-tabbed-menu [model]=\"creator.tabbedMenu\"></svc-tabbed-menu>\n            </div>\n            <div *ngIf=\"creator.showToolbar\" class=\"svc-toolbar-wrapper\" [visible]=\"creator.showToolbar\">\n              <sv-action-bar [model]=\"creator.toolbar\"></sv-action-bar>\n            </div>\n          </div>\n          <div class=\"svc-creator__content-wrapper svc-flex-row\"\n            [class.svc-creator__content-wrapper--footer-toolbar]=\"creator.isMobileView\">\n            <div class=\"svc-creator__content-holder svc-flex-column\">\n              <ng-container *ngFor=\"let tab of creator.tabs\">\n                <div class=\"svc-creator-tab\" *ngIf=\"creator.viewType == tab.id && tab.visible\"\n                  [attr.id]=\"'scrollableDiv-' + tab.id\" [class.svc-creator__toolbox--right]=\"creator.toolboxLocation == 'right'\">\n                  <ng-template [component]=\"{ name: tab.componentContent, data: { model: tab.data.model } }\"></ng-template>\n                </div>\n              </ng-container>\n            </div>\n          </div>\n          <div *ngIf=\"creator.isMobileView\" class=\"svc-footer-bar\">\n            <div class=\"svc-toolbar-wrapper\" [visible]=\"creator.isMobileView\">\n              <sv-action-bar [model]=\"creator.footerToolbar\"></sv-action-bar>\n            </div>\n          </div>\n        </div>\n        <div *ngIf=\"creator.sidebar\" [class.sv-mobile-side-bar]=\"creator.isMobileView\">\n          <svc-side-bar [model]=\"creator.sidebar\"></svc-side-bar>\n        </div>\n      </div>\n      <div class=\"svc-creator__banner\" *ngIf=\"!creator.haveCommercialLicense\">\n        <span class=\"svc-creator__non-commercial-text\">\n          <a href=\"https://surveyjs.io/buy\">\n            {{creator.licenseText}}\n          </a>\n        </span>\n      </div>\n      <sv-notifier [notifier]=\"creator.notifier\"></sv-notifier>\n    </div>\n  </div>\n</ng-container>","import { ChangeDetectorRef, Component, KeyValueDiffers, ViewContainerRef } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { Base } from \"survey-core\";\n\n@Component({\n  template: \"\"\n})\nexport abstract class CreatorModelComponent<T extends Base> extends BaseAngular<T> {\n  protected abstract getPropertiesToTrack(): string[];\n  protected abstract createModel(): void;\n\n  private hash!: { [index: string]: any };\n\n  private createHash() {\n    this.hash = {};\n    this.getPropertiesToTrack().forEach((prop: string) => {\n      this.hash[prop] = (<any>this)[prop];\n    });\n  }\n\n  override ngOnInit(): void {\n    this.createModel();\n    this.createHash();\n    super.ngOnInit();\n  }\n  override ngDoCheck(): void {\n    if (this.needUpdateModel())\n      this.createModel();\n    super.ngDoCheck();\n  }\n  needUpdateModel(): boolean {\n    let res = false;\n    Object.keys(this.hash).forEach(key => {\n      if (this.hash[key] != (<any>this)[key]) {\n        this.hash[key] = (<any>this)[key];\n        res = true;\n      }\n    });\n    return res;\n  }\n}","import { Component, Input } from \"@angular/core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\nimport { CreatorBase, IQuestionToolboxItem, ToolboxToolViewModel } from \"survey-creator-core\";\nimport { Action } from \"survey-core\";\n\n@Component({\n  selector: \"svc-toolbox-tool\",\n  templateUrl: \"./toolbox-tool.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ToolboxToolComponent extends CreatorModelComponent<Action> {\n  @Input() creator!: CreatorBase;\n  @Input() item!: Action;\n  @Input() isCompact: boolean = false;\n  public model!: ToolboxToolViewModel;\n  createModel() {\n    this.model = new ToolboxToolViewModel(<any>this.item, this.creator);\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"item\"];\n  }\n  protected getModel(): Action {\n    return this.item;\n  }\n  protected override getPropertiesToUpdateSync(): string[] {\n    return [\"mode\"];\n  }\n}\n","<ng-template #template>\n    <div class=\"svc-toolbox__tool\"\n        [class.sv-action--hidden]=\"!item.isVisible\" [class]=\"item.css\" (pointerdown)=\"model.onPointerDown($event)\">\n        <div class=\"sv-action__content\">\n            <div class=\"svc-toolbox__category-separator\" *ngIf=\"item.needSeparator && !creator.toolbox.showCategoryTitles\"></div>\n            <ng-template [component]=\"{ name: item.component || 'svc-toolbox-item', default: 'svc-toolbox-item', data: { model: item, viewModel: model, creator: creator, isCompact: isCompact } }\"></ng-template>\n        </div>\n    </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { QuestionToolbox, QuestionToolboxCategory } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-toolbox-category \",\n  templateUrl: \"./toolbox-category.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ToolboxCategoryComponent extends BaseAngular<QuestionToolboxCategory> {\n  @Input() category!: QuestionToolboxCategory;\n  @Input() toolbox!: QuestionToolbox;\n  getModel() {\n    return this.category;\n  }\n}\n","<ng-template #template>\n  <div class=\"svc-toolbox__category\" [class.svc-toolbox__category--collapsed]=\"category.collapsed\">\n    <div class=\"svc-toolbox__category-header\"\n      (click)=\"category.toggleState()\" [key2click] [class.svc-toolbox__category-header--collapsed]=\"toolbox.canCollapseCategories\">\n      <span class=\"svc-toolbox__category-title\">{{category.name}}</span>\n      <div *ngIf=\"toolbox.canCollapseCategories\" class=\"svc-toolbox__category-header__controls\">\n        <svg [iconName]=\"'icon-arrow-down'\" class=\"svc-toolbox__category-header__button svc-string-editor__button--expand\" [size]=\"24\" sv-ng-svg-icon [visible]=\"category.collapsed\"></svg>\n        <svg [iconName]=\"'icon-arrow-up'\" class=\"svc-toolbox__category-header__button svc-string-editor__button--collapse\" [size]=\"24\" sv-ng-svg-icon [visible]=\"!category.collapsed\"></svg>\n      </div>\n    </div>\n      <ng-container *ngFor=\"let item of category.items\">\n        <svc-toolbox-tool [item]=\"item\" [creator]=\"toolbox.creator\" [isCompact]=\"false\" ></svc-toolbox-tool>\n      </ng-container>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { CreatorBase, QuestionToolbox } from \"survey-creator-core\";\nimport { VerticalResponsivityManager } from \"survey-core\";\nimport { BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-adaptive-toolbox\",\n  templateUrl: \"./adaptive-toolbox.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class AdaptiveToolboxComponent extends BaseAngular<QuestionToolbox> implements AfterViewInit {\n  @Input() creator!: CreatorBase;\n  @ViewChild(\"container\") container!: ElementRef<HTMLElement>;\n  private responsivityManager: VerticalResponsivityManager | undefined;\n  public get model() {\n    return this.creator.toolbox;\n  }\n  ngAfterViewInit() {\n    this.responsivityManager =\n      new VerticalResponsivityManager(this.container.nativeElement as HTMLDivElement,\n        this.model, \".svc-toolbox__tool:not(.sv-dots)\");\n  }\n  protected getModel(): QuestionToolbox {\n    return this.model;\n  }\n  override ngOnDestroy(): void {\n    this.responsivityManager?.dispose();\n    super.ngOnDestroy();\n  }\n}\n","<ng-template #template>\n  <div class=\"svc-toolbox\" [class.svc-toolbox--compact]=\"model.isCompact\" #container>\n    <div class=\"svc-toolbox__container\">\n      <ng-container *ngIf=\"!(model.isCompact || model.categories.length == 1 || !model.showCategoryTitles)\">\n        <svc-toolbox-category *ngFor=\"let category of model.categories\" [category]=\"category\" [toolbox]=\"model\"></svc-toolbox-category>\n      </ng-container>\n      <ng-container *ngIf=\"model.isCompact || model.categories.length == 1 || !model.showCategoryTitles\">\n        <div class=\"svc-toolbox__category\">\n          <svc-toolbox-tool *ngFor=\"let item of model.renderedActions\" [creator]=\"creator\" [item]=\"item\" [isCompact]=\"model.isCompact\"></svc-toolbox-tool>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { PageModel, SurveyModel } from \"survey-core\";\nimport { CreatorBase, PageAdorner } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"./creator-model.component\";\n\n@Component({\n  selector: \"svc-page\",\n  templateUrl: \"./page.component.html\",\n  styles: []\n})\nexport class PageDesignerComponent extends CreatorModelComponent<PageAdorner> {\n  @Input() model!: PageModel;\n  @Input() survey!: SurveyModel;\n  @Input() creator!: CreatorBase;\n  @Input() isGhost?: boolean;\n  public adorner!: PageAdorner;\n  protected createModel(): void {\n    if (this.model) {\n      this.previousModel?.dispose();\n      this.adorner = new PageAdorner(this.creator, this.model);\n    }\n  }\n  protected getModel(): PageAdorner {\n    return this.adorner;\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"model\"];\n  }\n  public addNewQuestion(event: any) {\n    event.stopPropagation();\n    this.adorner.addNewQuestion(this.adorner, event);\n  }\n  public selectQuestionType(event: any) {\n    event.stopPropagation();\n    this.adorner.questionTypeSelectorModel.action();\n  }\n  override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this.adorner.dispose();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-page\", PageDesignerComponent);\n\n","<div *ngIf=\"model && adorner && (isGhost === undefined || isGhost === adorner.isGhost)\" class=\"svc-page__content\" [class]=\"adorner.css\" [key2click]\n  (click)=\"adorner.select(adorner, $event)\" (mouseover)=\"adorner.hover($event, $event.currentTarget)\"\n  (mouseleave)=\"adorner.hover($event, $event.target)\" [id]=\"adorner.page.id\" data-bind=\"clickBubble: false\">\n  <div class=\"svc-page__content-actions\">\n    <sv-action-bar [model]=\"adorner.actionContainer\"></sv-action-bar>\n  </div>\n  <page [model]=\"model\" [survey]=\"survey\"></page>\n  <div *ngIf=\"adorner.showAddQuestionButton\" class=\"svc-page__add-new-question svc-btn\" [key2click]\n    (click)=\"addNewQuestion($event)\" (mouseover)=\"adorner.hoverStopper($event, $event.currentTarget)\"\n    data-bind=\"clickBubble: false\">\n    <span class=\"svc-text svc-text--normal svc-text--bold\">\n      {{ adorner.addNewQuestionText }}\n    </span>\n    <!-- ko with: questionTypeSelectorModel -->\n    <button type=\"button\" [key2click] (click)=\"selectQuestionType($event)\"\n      [attr.title]=\"adorner.questionTypeSelectorModel.title\" [attr.aria-label]=\"adorner.questionTypeSelectorModel.title\"\n      class=\"svc-page__question-type-selector\">\n      <svg class=\"svc-page__question-type-selector-icon\" [iconName]=\"adorner.questionTypeSelectorModel.iconName\"\n        [size]=\"24\" sv-ng-svg-icon></svg>\n        <sv-ng-popup [popupModel]=\"adorner.questionTypeSelectorModel.popupModel\"></sv-ng-popup>\n      </button>\n    <!-- /ko -->\n  </div>\n</div>","import { Component, Input } from \"@angular/core\";\nimport { PagesController, TabDesignerViewModel } from \"survey-creator-core\";\nimport { BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-designer-pages\",\n  templateUrl: \"./designer-pages.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class DesignerPagesComponent extends BaseAngular<PagesController> {\n  @Input() model!: TabDesignerViewModel;\n  protected getModel(): PagesController {\n    return this.model.pagesController;\n  }\n  public get creator() {\n    return this.model.creator;\n  }\n  public get survey() {\n    return this.creator.survey;\n  }\n}","<ng-template #template>\n  <svc-page class=\"svc-page\" [attr.data-sv-drop-target-survey-element]=\"'newGhostPage'\" [attr.data-sv-drop-target-page]=\"model.pagesController.page2Display.name\" [model]=\"model.pagesController.page2Display\" [survey]=\"survey\" [creator]=\"creator\"></svc-page>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { Action, IAction } from \"survey-core\";\nimport { BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-page-navigator-item\",\n  templateUrl: \"./page-navigator-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class PageNavigatorItemComponent extends BaseAngular<Action> {\n  @Input() model!: Action | IAction;\n  protected getModel(): Action {\n    return this.model as Action;\n  }\n  get anyModel(): any {\n    return this.model as any;\n  }\n  click(event: any) {\n    this.getModel().action();\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}","<ng-template #template>\n  <div class=\"svc-page-navigator-item\">\n    <div class=\"svc-page-navigator-item-content\" (click)=\"click($event)\" [key2click]\n      [class.svc-page-navigator-item--selected]=\"model.active\"\n      [class.svc-page-navigator-item--disabled]=\"anyModel.disabled\">\n      <div class=\"svc-page-navigator-item__dot\" [attr.title]=\"model.title\"></div>\n\n      <div class=\"svc-page-navigator-item__banner svc-item__banner\">\n        <span class=\"svc-text svc-text--small svc-text--bold\">{{model.title}}</span>\n        <span class=\"svc-page-navigator-item__dot\"></span>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { PageNavigatorViewModel, PagesController } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\n\n@Component({\n  selector: \"svc-page-navigator\",\n  templateUrl: \"./page-navigator.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class PageNavigatorComponent extends CreatorModelComponent<PageNavigatorViewModel> implements AfterViewInit {\n  public model!: PageNavigatorViewModel;\n  @Input() pagesController!: PagesController;\n  @Input() pageEditMode!: string;\n  @ViewChild(\"container\") container!: ElementRef<HTMLDivElement>;\n  createModel(): void {\n    this.model = new PageNavigatorViewModel(\n      this.pagesController,\n      this.pageEditMode\n    );\n  }\n  protected getModel(): PageNavigatorViewModel {\n    return this.model;\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"pagesController\", \"pageEditMode\"];\n  }\n  public ngAfterViewInit(): void {\n    if (this.pageEditMode !== \"bypage\") {\n      const el = this.container.nativeElement;\n      if (!!el && !!el.parentElement?.parentElement?.parentElement) {\n        const self = this;\n        const scrollableViewPort = el.parentElement.parentElement.parentElement;\n        scrollableViewPort.onscroll = function (this: GlobalEventHandlers, ev: Event) {\n          return self.model.onContainerScroll(ev.currentTarget as HTMLDivElement);\n        };\n        self.model.setScrollableContainer(scrollableViewPort);\n        self.model.setItemsContainer(el.parentElement);\n      }\n    }\n  }\n  public override ngOnDestroy(): void {\n    super.ngOnDestroy();\n    const el = this.container.nativeElement;\n    if (!!el && !!el.parentElement?.parentElement?.parentElement) {\n      el.parentElement.parentElement.parentElement.onscroll = <any>undefined;\n    }\n    this.model.stopItemsContainerHeightObserver();\n    this.model.dispose();\n  }\n}","<ng-template #template>\n  <div class=\"svc-page-navigator\" #container>\n    <ng-container *ngIf=\"model.visible\">\n      <div class=\"svc-page-navigator__selector\"\n          (click)=\"model.togglePageSelector($event)\" [key2click] [attr.title]=\"model.pageSelectorCaption\" [class.svc-page-navigator__selector--opened]=\"model.isPopupOpened\">\n          <svg class=\"svc-page-navigator__navigator-icon\" [iconName]=\"model.icon\" [size]=\"24\" sv-ng-svg-icon></svg>\n          <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n      </div>\n      <div>\n        <svc-page-navigator-item *ngFor=\"let item of model.visibleItems\" [model]=\"item\"></svc-page-navigator-item>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { SurveyModel } from \"survey-core\";\nimport { TabDesignerViewModel } from \"survey-creator-core\";\nimport { BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-designer-survey\",\n  templateUrl: \"./designer-survey.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class DesignerSurveyComponent extends BaseAngular<SurveyModel> {\n  @Input() model!: TabDesignerViewModel;\n  protected getModel(): SurveyModel {\n    return this.model.survey;\n  }\n  public get creator() {\n    return this.model.creator;\n  }\n  public get survey() {\n    return this.creator.survey;\n  }\n}","<ng-template #template>\n  <div [class]=\"model.designerCss\" [style.maxWidth]=\"survey.renderedWidth\">\n    <div *ngIf=\"creator.allowEditSurveyTitle\" class=\"svc-designer-header\">\n      <div *ngIf=\"survey.renderedHasHeader\" [class]=\"survey.css.header\" [survey]=\"survey\" sv-ng-survey-header></div>\n    </div>\n\n    <!-- ko if: survey.isShowProgressBarOnTop -->\n    <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->\n    <!-- /ko -->\n    <!-- /ko -->\n    <ng-container *ngIf=\"creator.pageEditMode !== 'bypage'\">\n      <ng-container *ngFor=\"let page of survey.pages\">\n        <svc-page class=\"svc-page\" *ngIf=\"!model.showNewPage || page !== model.newPage\"\n          [attr.data-sv-drop-target-survey-element]=\"page.name\" [attr.data-sv-drop-target-page]=\"page.name\"\n          [model]=\"page\" [survey]=\"survey\" [creator]=\"creator\"></svc-page>\n      </ng-container>\n      <svc-page *ngIf=\"model.showNewPage && model.newPage\" class=\"svc-page\"\n        [attr.data-sv-drop-target-survey-element]=\"'newGhostPage'\" [model]=\"model.newPage\" [survey]=\"survey\"\n        [creator]=\"creator\" [isGhost]=\"true\"></svc-page>\n    </ng-container>\n    <ng-container *ngIf=\"model.pagesController.page2Display && creator.pageEditMode === 'bypage'\">\n      <svc-designer-pages [model]=\"model\"></svc-designer-pages>\n    </ng-container>\n\n    <!-- ko if: survey.isShowProgressBarOnBottom -->\n    <!-- ko component: { name: 'sv-progress-' + survey.progressBarType, params: { model: survey } } -->\n    <!-- /ko -->\n    <!-- /ko -->\n  </div>\n\n  <div *ngIf=\"creator.showPageNavigator\" class=\"svc-tab-designer__page-navigator\">\n    <svc-page-navigator [pagesController]=\"model.pagesController\" [pageEditMode]=\"creator.pageEditMode\">\n    </svc-page-navigator>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { TabDesignerViewModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tab-designer\",\n  templateUrl: \"./designer.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class DesignerTabComponent extends BaseAngular<TabDesignerViewModel> {\n  @Input() model!: TabDesignerViewModel;\n  public get survey() {\n    return this.creator.survey;\n  }\n  public get creator() {\n    return this.model.creator;\n  }\n  protected getModel(): TabDesignerViewModel {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-designer\", DesignerTabComponent);","<ng-template #template>\n  <div class=\"svc-flex-column\">\n    <svc-adaptive-toolbox *ngIf=\"model.isToolboxVisible\" [creator]=\"creator\"></svc-adaptive-toolbox>\n  </div>\n  <div class=\"svc-tab-designer\" [class]=\"model.getRootCss()\" (click)=\"model.clickDesigner()\">\n    <div class=\"svc-tab-designer_content\">\n      <ng-container *ngIf=\"model.showPlaceholder\">\n        <div *ngIf=\"creator.showHeaderInEmptySurvey && creator.allowEditSurveyTitle\" class=\"svc-designer-header\">\n          <div *ngIf=\"survey.renderedHasHeader\" [class]=\"survey.css.header\" [survey]=\"survey\" sv-ng-survey-header></div>\n        </div>\n        <div class=\"svc-designer__placeholder-container\" [attr.data-sv-drop-target-survey-element]=\"'newGhostPage'\">\n          <span class=\"svc-designer-placeholder-text svc-text svc-text--normal\">\n            {{ model.placeholderText }}\n          </span>\n          <svc-page class=\"svc-designer-placeholder-page\" [model]=\"model.newPage\" [survey]=\"survey\" [creator]=\"creator\"></svc-page>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"!model.showPlaceholder\">\n        <svc-designer-survey [model]=\"model\"></svc-designer-survey>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { TabbedMenuItem } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tabbed-menu-item\",\n  templateUrl: \"./tabbed-menu-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TabbedMenuItemComponent extends BaseAngular<TabbedMenuItem> {\n  @Input() model!: TabbedMenuItem;\n  protected getModel(): TabbedMenuItem {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tabbed-menu-item\", TabbedMenuItemComponent);","<ng-template #template>\n  <div\n    class=\"svc-tabbed-menu-item\"\n    [class.svc-tabbed-menu-item--selected]=\"model.active\"\n    [class.svc-tabbed-menu-item--disabled]=\"model.disabled\"\n    (click)=\"model.action()\" [key2click]\n  >\n    <span\n      class=\"svc-text svc-text--normal svc-tabbed-menu-item__text\"\n      [class.svc-text--bold]=\"model.active\"\n    >\n    {{model.title}}\n  </span>\n  </div>\n</ng-template>\n","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { ObjectSelectorModel, SidebarTabModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-object-selector\",\n  templateUrl: \"./object-selector.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ObjectSelectorComponent extends BaseAngular<ObjectSelectorModel> {\n  @Input() model!: ObjectSelectorModel;\n  protected getModel(): ObjectSelectorModel {\n    return this.model;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-object-selector\", ObjectSelectorComponent);","<ng-template #template>\n    <ng-container *ngIf=\"model.isVisible\">\n        <sv-ng-list [model]=\"model.list\"></sv-ng-list>\n    </ng-container>\n</ng-template>","import { PropertyGridViewModel } from \"survey-creator-core\";\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, ButtonGroupQuestionComponent } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-property-grid\",\n  templateUrl: \"./property-grid.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class PropertyGridComponent extends BaseAngular<PropertyGridViewModel> {\n  @Input() model!: PropertyGridViewModel;\n  protected getModel(): PropertyGridViewModel {\n    return this.model;\n  }\n  protected override getPropertiesToUpdateSync(): Array<string> {\n    return [\"survey\"];\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"buttongroup-question\", ButtonGroupQuestionComponent);\nAngularComponentFactory.Instance.registerComponent(\"svc-property-grid\", PropertyGridComponent);","<ng-template #template>\n    <survey-content *ngIf=\"!!model.survey\" [model]=\"model.survey\"></survey-content>\n</ng-template>","import { TabJsonEditorTextareaPlugin, TextareaJsonEditorModel } from \"survey-creator-core\";\nimport { Component, Input, OnInit } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-tab-json-editor-textarea\",\n  templateUrl: \"./json-editor-textarea.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TextareaJsonEditorComponent extends BaseAngular<TextareaJsonEditorModel> implements OnInit {\n  @Input() model!: TextareaJsonEditorModel;\n  protected getModel(): TextareaJsonEditorModel {\n    return this.model;\n  }\n  public override ngOnInit(): void {\n    this.model.canShowErrors = false;\n    super.ngOnInit();\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-json-editor-textarea\", TextareaJsonEditorComponent);","<ng-template #template>\n  <div class=\"svc-creator-tab__content\">\n    <div class=\"svc-json-editor-tab__content\">\n      <textarea class=\"svc-json-editor-tab__content-area\"\n        [attr.aria-label]=\"model.ariaLabel\"\n        [disabled]=\"model.readOnly\"\n        [(ngModel)]=\"model.text\"\n        (keydown)=\"model.checkKey(model, $event)\">\n      </textarea>\n      <button type=\"button\" *ngIf=\"model.userFriendlyErrors.length !== 0\" class=\"svc-json-editor-tab__errros_button\"\n        (click)=\"model.toggleErrors()\">{{model.errorButtonText}}</button>\n      <ng-container *ngIf=\"model.canShowErrors\">\n        <div class=\"svc-json-editor-tab__content-errors\" *ngFor=\"let error of model.userFriendlyErrors\">\n          <span><b>Error:</b></span>\n          <span>{{error}}</span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","\nimport { AceJsonEditorModel, TabJsonEditorAcePlugin } from \"survey-creator-core\";\nimport { AfterViewInit, Component, ElementRef, Input, OnInit, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-tab-json-editor-ace\",\n  templateUrl: \"./json-editor-ace.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class AceJsonEditorComponent extends BaseAngular<AceJsonEditorModel> implements AfterViewInit {\n  @Input() model!: AceJsonEditorModel;\n  @ViewChild(\"inputEl\") inputEl!: ElementRef<HTMLElement>;\n  protected getModel(): AceJsonEditorModel {\n    return this.model;\n  }\n\n  public ngAfterViewInit(): void {\n    //todo fix ts \n    this.model.init((<any>window).ace.edit(\n      this.inputEl.nativeElement\n    ));\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-json-editor-ace\", AceJsonEditorComponent);","<ng-template #template>\n    <div class=\"svc-creator-tab__content\">\n        <div class=\"svc-json-editor-tab__content\">\n            <div class=\"svc-json-editor-tab__ace-editor\" #inputEl></div>\n        </div>\n    </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { Action } from \"survey-core\";\nimport { SurveyLogicUI } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tab-logic-add-btn\",\n  templateUrl: \"./logic-add-btn.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class LogicAddButtonComponent extends BaseAngular<Action> {\n  @Input() model!: Action;\n\n  protected getModel(): Action {\n    return this.model;\n  }\n  onClick(event: any) {\n    event.stopPropagation();\n    this.model.action();\n  }\n}\n\n","<ng-template #template>\n  <div role=\"button\" class=\"svc-logic-tab__content-action svc-btn\"\n        (click)=\"onClick($event)\" [key2click] [class.svc-logic-tab__content-action--disabled]=\"model.enabled !== undefined && !model.enabled\">\n        <span class=\"svc-text svc-text--normal svc-text--bold\">\n          {{model.title}}\n        </span>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { SurveyLogicUI } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tab-logic\",\n  templateUrl: \"./logic.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class LogicTabComponent extends BaseAngular<SurveyLogicUI> {\n  @Input() model!: SurveyLogicUI;\n\n  protected getModel(): SurveyLogicUI {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-logic\", LogicTabComponent);\n\n","<ng-template #template>\n  <div class=\"svc-creator-tab__content\">\n    <div class=\"svc-plugin-tab__content svc-logic-tab__content\" [class.svc-logic-tab__empty]=\"!model.hasItems\">\n      <survey-content [model]=\"model.itemsSurvey\"></survey-content>\n      <div *ngIf=\"!model.hasItems\" class=\"svc-logic-tab__content-empty\">\n        <span class=\"svc-text\">{{model.emptyTabPlaceholder}}</span>\n      </div>\n      <ng-container *ngIf=\"!model.readOnly\">\n        <svc-tab-logic-add-btn [model]=\"model.addNewButton\"></svc-tab-logic-add-btn>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, EmbeddedViewContentComponent } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-action-button\",\n  templateUrl: \"./action-button.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ActionButtonComponent extends EmbeddedViewContentComponent {\n\n  @Input() classes: string = \"\";\n  @Input() click!: () => void;\n  @Input() selected: boolean = false;\n  @Input() disabled: boolean = false;\n  @Input() text: string = \"\";\n  @Input() title: string = \"\";\n  @Input() allowBubble: boolean = false;\n  onClick(event: any) {\n    this.click();\n    if (!this.allowBubble) {\n      event.stopPropagation();\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-action-button\", ActionButtonComponent);\n\n","<ng-template #template>\n  <span *ngIf=\"disabled\" class=\"svc-action-button svc-action-button--disabled\"\n    [class]=\"classes\" [attr.title]=\"title\">{{text}}</span>\n  <span *ngIf=\"!disabled\" role=\"button\" class=\"svc-action-button\"\n    (click)=\"onClick($event)\" [key2click] [attr.title]=\"title\" [class.svc-action-button--selected]=\"selected\" [class]=\"classes\">{{text}}</span>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { editorLocalization, QuestionLinkValueModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-link-value\",\n  templateUrl: \"./question-link-value.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class LinkValueQuestionComponent extends QuestionAngular<QuestionLinkValueModel> {\n  get clearCaption() {\n    return editorLocalization.getString(\"pe.clear\");\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"linkvalue-question\", LinkValueQuestionComponent);\n","<ng-template #template>\n  <svc-action-button [text]=\"model.linkValueText\" [click]=\"model.doLinkClick.bind(model)\" [selected]=\"model.isSelected\"\n    [disabled]=\"!model.isClickable\" [classes]=\"model.linkSetButtonCssClasses\" [title]=\"model.tooltip\">\n  </svc-action-button>\n  <ng-container *ngIf=\"!model.isReadOnly && model.showClear\">\n    <svc-action-button [text]=\"clearCaption\" [click]=\"model.doClearClick.bind(model)\" [selected]=\"model.isSelected\"\n      [disabled]=\"false\" [classes]=\"model.linkClearButtonCssClasses\">\n    </svc-action-button>\n  </ng-container>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { QuestionEmbeddedSurveyModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-embeddedsurvey-question\",\n  templateUrl: \"./question-embedded-survey.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class EmbeddedSurveyQuestionComponent extends QuestionAngular<QuestionEmbeddedSurveyModel> {\n  public get survey() {\n    return this.model.embeddedSurvey;\n  }\n  protected override onModelChanged(): void {\n    super.onModelChanged();\n    if (!!this.model) {\n      this.model.onEmbeddedSurveyValueChanged = () => {\n        this.detectChanges();\n      };\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"embeddedsurvey-question\", EmbeddedSurveyQuestionComponent);","<ng-template #template>\n  <ng-container *ngIf=\"!!model && !!survey && survey.currentPage\">\n    <page [model]=\"survey.currentPage\" [survey]=\"survey\"></page>\n  </ng-container>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { Translation } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-tab-translation\",\n  templateUrl: \"./translation.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TranslationTabComponent extends BaseAngular<Translation> {\n  @Input() model!: Translation;\n\n  protected getModel(): Translation {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-translation\", TranslationTabComponent);\n\n","<ng-template #template>\n  <div class=\"svc-creator-tab__content svc-translation-tab\">\n    <div class=\"st-content\">\n      <div *ngIf=\"model.isEmpty\" class=\"st-no-strings\">\n        <span>{{model.noStringsText}}</span>\n      </div>\n      <div *ngIf=\"!model.isEmpty\" class=\"svc-flex-column st-strings-wrapper\">\n        <div class=\"svc-flex-row st-strings-header\">\n          <survey-content [model]=\"model.stringsHeaderSurvey\"></survey-content>\n        </div>\n        <div class=\"svc-flex-row svc-plugin-tab__content st-strings\">\n          <survey-content [model]=\"model.stringsSurvey\"></survey-content>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, EmbeddedViewContentComponent } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"sd-translation-line-skeleton\",\n  templateUrl: \"./translation-line-skeleton.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TranslationSkeletonComponent extends EmbeddedViewContentComponent { }\nAngularComponentFactory.Instance.registerComponent(\"sd-translation-line-skeleton\", TranslationSkeletonComponent);\n\n","<ng-template #template>\n  <div class=\"sd-translation-line-skeleton\"></div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\nimport { SurveySimulatorModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"survey-simulator\",\n  templateUrl: \"./simulator.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SimulatorComponent extends BaseAngular<SurveySimulatorModel> {\n  @Input() model!: SurveySimulatorModel;\n  protected getModel(): SurveySimulatorModel {\n    return this.model;\n  }\n  public get simulatorFrame(): any {\n    return this.model.simulatorFrame;\n  }\n  activateZoom() {\n    if (this.model.device !== \"desktop\") {\n      this.model.activateZoom();\n    }\n  }\n  deactivateZoom() {\n    if (this.model.device !== \"desktop\") {\n      this.model.deactivateZoom();\n    }\n  }\n}","<ng-template #template>\n  <div [class]=\"model.getRootCss()\" (keydown)=\"model.tryToZoom($event, $event)\" (mouseover)=\"activateZoom()\" (mouseout)=\"deactivateZoom()\">\n    <div *ngIf=\"model.hasFrame\" class=\"svd-simulator-wrapper\" id=\"svd-simulator-wrapper\" [style.width]=\"simulatorFrame.frameWidth + 'px'\" [style.height]=\"simulatorFrame.frameHeight + 'px'\">\n      <div class=\"svd-simulator-frame\" [style.width]=\"simulatorFrame.landscapedFrameWidth + 'px'\" [style.height]=\"simulatorFrame.landscapedFrameHeight + 'px'\" [class]=\"simulatorFrame.cssClass\"></div>\n      <div class=\"svd-simulator\" [style.width]=\"simulatorFrame.deviceWidth + 'px'\" [style.height]=\"simulatorFrame.deviceHeight + 'px'\" [style.transform]=\"'scale(' + simulatorFrame.scale + ') translate(-50%, -50%)'\">\n        <div class=\"svd-simulator-content\">\n          <ng-template [component]=\"{ name: 'survey-widget', data: { model: model.survey } }\"></ng-template>\n        </div>\n      </div>\n    </div>\n    <div *ngIf=\"!model.hasFrame\" class=\"svd-simulator-content\">\n      <ng-template [component]=\"{ name: 'survey-widget', data: { model: model.survey } }\"></ng-template>\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { Action } from \"survey-core\";\n\n@Component({\n  selector: \"survey-test-again\",\n  templateUrl: \"./test-again.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TestAgainActionComponent extends BaseAngular<Action> {\n  @Input() model!: Action;\n  protected getModel(): Action {\n    return this.model;\n  }\n}","<ng-template #template>\n  <div role=\"button\" class=\"svc-preview__test-again svc-btn\" (click)=\"model.action()\" [key2click]>\n    <span class=\"svc-text svc-text--normal svc-text--bold\">\n      {{model.title}}\n    </span>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { BaseAngular } from \"survey-angular-ui\";\nimport { Action } from \"survey-core\";\nimport { SurveyResultsItemModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"survey-results-table-row\",\n  templateUrl: \"./survey-results-row.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SurveyResultsTableRowComponent extends BaseAngular<SurveyResultsItemModel> {\n  @Input() model!: SurveyResultsItemModel;\n  protected getModel(): SurveyResultsItemModel {\n    return this.model;\n  }\n}","<ng-template #template>\n  <tr (click)=\"model.toggle()\" [key2click]>\n    <td class=\"svd-dark-border-color\"\n        [style.paddingLeft]=\"model.textMargin \">\n        <span *ngIf=\"model.isNode\" class=\"svd-test-results__marker\"\n              [class.svd-test-results__marker--expanded]=\"!model.collapsed\"\n                         [style.left]=\"model.markerMargin\">\n            <svg [iconName]=\"'icon-expand_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </span>\n        <span >{{model.title}}</span></td>\n    <td [class.svd-test-results__node-value]=\"model.isNode\" [class.svd-dark-border-color]=\"!model.isNode\">\n      {{model.getString(model.displayValue)}}\n    </td>\n  </tr>\n  <ng-container *ngIf=\"model.isNode && !model.collapsed\">\n    <ng-container *ngFor=\"let row of model.data\">\n      <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n    </ng-container>\n  </ng-container>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { CreatorModelComponent } from \"../../creator-model.component\";\nimport { SurveyModel } from \"survey-core\";\nimport { SurveyResultsModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"survey-results\",\n  templateUrl: \"./survey-results.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class SurveyResultsComponent extends CreatorModelComponent<SurveyResultsModel> {\n  @Input() survey!: SurveyModel;\n  public model!: SurveyResultsModel;\n\n  public createModel(): void {\n    if (!!this.survey) {\n      this.model = new SurveyResultsModel(this.survey);\n    }\n  }\n  protected getModel(): SurveyResultsModel {\n    return this.model;\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"survey\"];\n  }\n}","<ng-template #template>\n<div class=\"svd-test-results\">\n  <div class=\"svd-test-results__header\">\n      <div class=\"svd-test-results__header-text\">{{model.surveyResultsText}}</div>\n      <div class=\"svd-test-results__header-types\">\n        <svc-action-button [text]=\"model.surveyResultsTableText\" [click]=\"model.selectTableClick\" [disabled]=\"false\" [selected]=\"model.isTableSelected\"></svc-action-button>\n        <svc-action-button [text]=\"model.surveyResultsJsonText\" [click]=\"model.selectJsonClick\" [disabled]=\"false\" [selected]=\"model.isJsonSelected\"></svc-action-button>\n      </div>\n  </div>\n  <div class=\"svd-test-results__text svd-light-bg-color\" [visible]=\"model.resultViewType === 'text'\">\n      <div>{{model.resultText}}</div>\n  </div>\n  <div class=\"svd-test-results__table svd-light-bg-color\" [visible]=\"model.resultViewType === 'table'\">\n      <table>\n          <thead>\n              <tr class=\"svd-light-background-color\">\n                  <th class=\"svd-dark-border-color\">{{model.resultsTitle}}</th>\n                  <th class=\"svd-dark-border-color\">{{model.resultsDisplayValue}}</th>\n              </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let row of model.resultData\">\n              <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n            </ng-container>\n          </tbody>\n      </table>\n  </div>\n</div>\n</ng-template>","import { TestSurveyTabViewModel } from \"survey-creator-core\";\nimport { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-tab-test\",\n  templateUrl: \"./test.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class TestTabComponent extends BaseAngular<TestSurveyTabViewModel> {\n  @Input() model!: TestSurveyTabViewModel;\n  protected getModel(): TestSurveyTabViewModel {\n    return this.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-tab-test\", TestTabComponent);\n","<ng-template #template>\n  <div class=\"svc-creator-tab__content svc-test-tab__content\" [class.svc-creator-tab__content--with-toolbar]=\"model.isPageToolbarVisible\">\n    <div class=\"svc-plugin-tab__content\">\n      <survey-simulator [model]=\"model.simulator\"></survey-simulator>\n      <ng-container *ngIf=\"!model.isRunning\">\n        <survey-test-again [model]=\"model.testAgainAction\"></survey-test-again>\n        <survey-results [survey]=\"model.survey\"></survey-results>\n      </ng-container>\n    </div>\n    <div *ngIf=\"model.isPageToolbarVisible\" class=\"svc-plugin-tab__content-actions svc-test-tab__content-actions\">\n      <sv-action-bar [model]=\"model.pages\"></sv-action-bar>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, ViewContainerRef, ViewEncapsulation } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { PageModel, PanelModel, Question, SurveyModel } from \"survey-core\";\nimport { CreatorBase, QuestionAdornerViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"./creator-model.component\";\n\n@Component({\n  selector: \"svc-question\",\n  templateUrl: \"./question.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionDesignerComponent extends CreatorModelComponent<QuestionAdornerViewModel> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  public adorner!: QuestionAdornerViewModel;\n  protected get creator(): CreatorBase {\n    return this.componentData.data;\n  }\n  public get model(): Question | PanelModel {\n    return this.componentData.model;\n  }\n  protected createModel(): void {\n    if (this.componentData) {\n      this.adorner = new QuestionAdornerViewModel(this.creator, this.model, <any>null);\n    }\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"model\", \"creator\"];\n  }\n  protected getModel(): QuestionAdornerViewModel {\n    return this.adorner;\n  }\n  public get placeholderComponent(): string {\n    return \"\";\n  }\n  public get placeholderComponentData(): any {\n    return null;\n  }\n  public get showPlaceholderComponent(): boolean {\n    return false;\n  }\n  public selectQuestionType(event: any) {\n    event.stopPropagation();\n    this.adorner.questionTypeSelectorModel?.action(this.adorner.questionTypeSelectorModel, event);\n  }\n  public addNewQuestion(event: any) {\n    event.stopPropagation();\n    this.adorner.addNewQuestion();\n  }\n  adornerComponent = \"\";\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-question\", QuestionDesignerComponent);\n\n","<ng-template #template>\n  <div *ngIf=\"adorner\" class=\"svc-question__adorner\" [class]=\"adorner.rootCss()\"\n    (mouseover)=\"adorner.hover($event, $event.currentTarget)\" (mouseleave)=\"adorner.hover($event, $event.currentTarget)\"\n    [attr.data-sv-drop-target-survey-element]=\"adorner.element.name || null\" #container>\n\n    <div [class]=\"adorner.css()\" [key2click] (click)=\"adorner.select(adorner, $event)\">\n      <div *ngIf=\"adorner.allowDragging\" class=\"svc-question__drag-area\" (pointerdown)=\"adorner.onPointerDown($event)\">\n        <svg class=\"svc-question__drag-element\" [iconName]=\"'icon-drag-area-indicator_24x16'\" [size]=\"24\"\n          sv-ng-svg-icon></svg>\n      </div>\n\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n\n      <div *ngIf=\"adorner.isEmptyElement && !showPlaceholderComponent\" class=\"svc-panel__placeholder_frame\">\n        <div class=\"svc-panel__placeholder\">{{ adorner.placeholderText }}</div>\n      </div>\n      <ng-template *ngIf=\"adorner.isEmptyElement && !!showPlaceholderComponent\"\n        [component]=\"{ name: placeholderComponent, data: placeholderComponentData }\">\n      </ng-template>\n\n      <ng-template *ngIf=\"adornerComponent\"\n        [component]=\"{ name: adornerComponent, data: { adorner: adorner, question: model } }\">\n      </ng-template>\n\n      <div class=\"svc-question__content-actions\">\n        <sv-action-bar [model]=\"adorner.actionContainer\" [handleClick]=\"false\"></sv-action-bar>\n      </div>\n    </div>\n  </div>\n</ng-template>","\nimport { ChangeDetectorRef, Component, Input, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { ItemValue, PageModel, PanelModel, Question, QuestionSelectBase, SurveyModel } from \"survey-core\";\nimport { CreatorBase, ItemValueWrapperViewModel, QuestionAdornerViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\n\n@Component({\n  selector: \"svc-item-value\",\n  templateUrl: \"./item-value.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ItemValueDesignerComponent extends CreatorModelComponent<ItemValueWrapperViewModel> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  public adorner!: ItemValueWrapperViewModel;\n  private get creator(): CreatorBase {\n    return this.componentData.data.creator;\n  }\n  public get question(): QuestionSelectBase {\n    return this.componentData.question;\n  }\n  public get item(): ItemValue {\n    return this.componentData.model;\n  }\n  public onBlur(event: any) {\n    this.adorner.onFocusOut(event);\n  }\n  protected createModel(): void {\n    if (this.componentData) {\n      this.adorner = new ItemValueWrapperViewModel(this.creator, this.question, this.item);\n    }\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"question\", \"item\"];\n  }\n  protected getModel(): ItemValueWrapperViewModel {\n    return this.adorner;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-item-value\", ItemValueDesignerComponent);\n","<ng-template #template>\n  <div class=\"svc-item-value-wrapper\" (pointerdown)=\"adorner.onPointerDown($event)\"\n    [attr.data-sv-drop-target-item-value]=\"adorner.isDraggable ? item.value : null\"\n    [ngClass]=\"{'svc-item-value--new': adorner.isNew, 'svc-item-value--dragging': adorner.isDragging, 'svc-item-value--ghost': adorner.isDragDropGhost, 'svc-item-value--movedown': adorner.isDragDropMoveDown, 'svc-item-value--moveup': adorner.isDragDropMoveUp}\">\n    <div class=\"svc-item-value__ghost\"></div>\n    <div class=\"svc-item-value-controls\">\n      <span *ngIf=\"adorner.isDraggable\" class=\"svc-item-value-controls__button svc-item-value-controls__drag\">\n        <svg class=\"svc-item-value-controls__drag-icon\" [iconName]=\"'icon-drag-area-indicator'\" [size]=\"24\"\n          [attr.title]=\"adorner.dragTooltip\" sv-ng-svg-icon></svg>\n      </span>\n      <span *ngIf=\"adorner.allowAdd\" class=\"svc-item-value-controls__button svc-item-value-controls__add\" [key2click]\n        (click)=\"adorner.add(adorner)\" [attr.aria-label]=\"undefined\"><svg [iconName]=\"'icon-add_16x16'\" [size]=\"16\"\n          [attr.title]=\"undefined\" sv-ng-svg-icon></svg></span>\n      <span *ngIf=\"adorner.allowRemove\" class=\"svc-item-value-controls__button svc-item-value-controls__remove\"\n        [key2click] (click)=\"adorner.remove(adorner)\" (blur)=\"onBlur($event)\" [attr.aria-label]=\"undefined\"><svg\n          [iconName]=\"'icon-remove_16x16'\" [size]=\"16\" [attr.title]=\"undefined\" sv-ng-svg-icon></svg></span>\n    </div>\n\n    <div class=\"svc-item-value__item\" (click)=\"adorner.select(adorner, $event)\">\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n  </div>\n</ng-template>","\nimport { Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\nimport { ImageItemValue, QuestionImagePickerModel } from \"survey-core\";\nimport { CreatorBase, ImageItemValueWrapperViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\n\n@Component({\n  selector: \"svc-image-item-value\",\n  templateUrl: \"./image-item-value.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ImageItemValueDesignerComponent extends CreatorModelComponent<ImageItemValueWrapperViewModel> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef;\n  public adorner!: ImageItemValueWrapperViewModel;\n  private get creator(): CreatorBase {\n    return this.componentData.data.creator;\n  }\n  public get question(): QuestionImagePickerModel {\n    return this.componentData.question;\n  }\n  public get item(): ImageItemValue {\n    return this.componentData.model;\n  }\n  protected createModel(): void {\n    if (this.componentData) {\n      this.adorner = new ImageItemValueWrapperViewModel(this.creator, this.question, this.item, <any>null, <any>null);\n    }\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"question\", \"item\"];\n  }\n  protected getModel(): ImageItemValueWrapperViewModel {\n    return this.adorner;\n  }\n\n  get showDragDropGhostOnTop(): boolean {\n    return this.adorner.ghostPosition === \"top\";\n  }\n  get showDragDropGhostOnBottom(): boolean {\n    return this.adorner.ghostPosition === \"bottom\";\n  }\n  public blockEvent(event: MouseEvent): void {\n    event.stopPropagation();\n  }\n\n  getNewItemStyle(): any {\n    const needStyle = !this.adorner.getIsNewItemSingle();\n    return { width: needStyle ? this.question.renderedImageWidth : undefined, height: needStyle ? this.question.renderedImageHeight : undefined };\n  }\n  public ngAfterViewInit() {\n    this.adorner.itemsRoot = this.container.nativeElement;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-image-item-value\", ImageItemValueDesignerComponent);\n","<ng-template #template>\n  <div (pointerdown)=\"adorner.onPointerDown($event)\" [class]=\"adorner.getRootCss()\" [attr.data-sv-drop-target-item-value]=\"adorner.isDraggable ? this.item.value : null\" #container>\n    <div class=\"svc-image-item-value-wrapper__ghost\" [style]=\"getNewItemStyle()\"></div>\n\n    <div class=\"svc-image-item-value-wrapper__content\">\n      <input type=\"file\" aria-hidden=\"true\" tabindex=\"-1\" accept=\"image/*\" class=\"svc-choose-file-input\" />\n\n      <ng-container *ngIf=\"!adorner.isNew\">\n        <div *ngIf=\"!adorner.isNew\" class=\"svc-image-item-value__item\">\n          <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n        </div>\n        <span class=\"svc-image-item-value-controls__button svc-image-item-value-controls__drag-area-indicator\" (pointerdown)=\"adorner.onPointerDown($event)\" [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n          <svg [iconName]=\"'icon-drag-area-indicator'\" [size]=\"24\" sv-ng-svg-icon></svg>\n        </span>\n        <div class=\"svc-image-item-value-controls\" data-bind=\"event: { pointerdown: blockEvent }\">\n          <ng-container *ngIf=\"adorner.allowRemove && !adorner.isUploading\">\n            <span class=\"svc-image-item-value-controls__button svc-image-item-value-controls__choose-file\" (click)=\"adorner.chooseFile(adorner)\" [key2click] [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n              <svg [iconName]=\"'icon-file'\" [size]=\"24\" sv-ng-svg-icon></svg>\n            </span>\n            <span class=\"svc-image-item-value-controls__button svc-image-item-value-controls__remove\" (click)=\"adorner.remove(adorner)\" [key2click] [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n              <svg [iconName]=\"'icon-delete'\" [size]=\"24\" sv-ng-svg-icon></svg>\n            </span>\n          </ng-container>\n        </div>\n      </ng-container>\n\n      <ng-container *ngIf=\"adorner.isNew\">\n        <div class=\"svc-image-item-value__item\"\n          data-bind=\"event: { dragover: dragover, drop: drop, dragleave: dragleave }\">\n          <div class=\"sd-imagepicker__item sd-imagepicker__item--inline\">\n            <label class=\"sd-imagepicker__label\">\n              <div [style]=\"getNewItemStyle()\" class=\"sd-imagepicker__image\"></div>\n            </label>\n          </div>\n        </div>\n\n        <div class=\"svc-image-item-value-controls\" data-bind=\"event: { pointerdown: blockEvent }\">\n          <span class=\"svc-image-item-value-controls__button svc-image-item-value-controls__add\" [key2click] (click)=\"adorner.chooseNewFile(adorner)\" [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n            <svg *ngIf=\"adorner.allowAdd && !adorner.isUploading\" [iconName]=\"'icon-add-lg'\" [size]=\"24\" sv-ng-svg-icon></svg>\n          </span>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { ItemValue, PageModel, Question, SurveyModel } from \"survey-core\";\nimport { CreatorBase, QuestionAdornerViewModel, QuestionDropdownAdornerViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\nimport { QuestionDesignerComponent } from \"../question.component\";\n\n@Component({\n  selector: \"svc-dropdown-question\",\n  templateUrl: \"../question.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionDropdownDesignerComponent extends QuestionDesignerComponent {\n  protected override createModel(): void {\n    if (this.componentData) {\n      this.adorner = new QuestionDropdownAdornerViewModel(this.creator, this.model, <any>null);\n    }\n  }\n  public override adornerComponent = \"svc-dropdown-question-adorner\";\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-dropdown-question\", QuestionDropdownDesignerComponent);\n\n@Component({\n  selector: \"svc-dropdown-question-adorner\",\n  templateUrl: \"./question-dropdown.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionDropdownAdornerDesignerComponent extends EmbeddedViewContentComponent {\n  @Input() adorner!: any;\n  @Input() question!: any;\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.question.getItemValueWrapperComponentName(item) || \"sv-ng-selectbase-item\";\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    return {\n      componentName: \"sv-ng-selectbase-item\",\n      componentData: {\n        question: this.question,\n        model: item,\n        inputType: \"radio\",\n        data: this.question.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-dropdown-question-adorner\", QuestionDropdownAdornerDesignerComponent);\n","<ng-template #template>\n  <div class=\"svc-question__dropdown-choices--wrapper\">\n    <div class=\"svc-question__dropdown-choices\">\n      <div *ngFor=\"let item of adorner.getRenderedItems()\" [class]=\"adorner.getChoiceCss()\"\n        data-bind=\"css: $parent.getChoiceCss()\">\n        <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\">\n        </ng-template>\n      </div>\n    </div>\n    <svc-action-button *ngIf=\"adorner.needToCollapse\" [text]=\"adorner.getButtonText()\"\n      [click]=\"adorner.switchCollapse.bind(adorner)\" [allowBubble]=\"true\"> \n    </svc-action-button>\n    <!-- ko if: needToCollapse -->\n    <!-- <svc-action-button params=\"text: getButtonText(), click: switchCollapse, allowBubble: true\">\n    </svc-action-button> -->\n    <!-- /ko -->\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { AngularComponentFactory, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { QuestionImageAdornerViewModel } from \"survey-creator-core\";\nimport { QuestionDesignerComponent } from \"../question.component\";\n\n@Component({\n  selector: \"svc-image-question\",\n  templateUrl: \"../question.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionImageDesignerComponent extends QuestionDesignerComponent implements AfterViewInit {\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef<HTMLDivElement>\n\n  protected override createModel(): void {\n    if (this.componentData) {\n      this.adorner = new QuestionImageAdornerViewModel(this.creator, this.model, <any>null, this.viewContainerRef?.element.nativeElement.nextSibling);\n    }\n  }\n  public override adornerComponent = \"svc-image-question-adorner\";\n  public override get placeholderComponent(): string {\n    return \"file-question\";\n  }\n  public override get placeholderComponentData() {\n    return { model: (<QuestionImageAdornerViewModel>this.adorner).filePresentationModel };\n  }\n  public override get showPlaceholderComponent(): boolean {\n    return !!this.placeholderComponentData;\n  }\n  ngAfterViewInit(): void {\n    (<QuestionImageAdornerViewModel>this.adorner).questionRoot = this.container.nativeElement;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-image-question\", QuestionImageDesignerComponent);\n\n@Component({\n  selector: \"svc-image-question-adorner\",\n  templateUrl: \"./question-image.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionImageAdornerDesignerComponent extends EmbeddedViewContentComponent {\n  @Input() adorner!: QuestionImageAdornerViewModel;\n  @Input() question!: any;\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-image-question-adorner\", QuestionImageAdornerDesignerComponent);\n\n","<ng-template #template>\n  <div class=\"svc-image-question-controls\">\n    <ng-container *ngIf=\"adorner.allowEdit && !adorner.isUploading && !adorner.isEmptyElement\">\n      <input type=\"file\" aria-hidden=\"true\" tabindex=\"-1\" accept=\"image/*\" class=\"svc-choose-file-input\" />\n      <span class=\"svc-image-question-controls__button\" [key2click] [attr.title]=\"undefined\" [attr.aria-label]=\"undefined\">\n        <svg  [iconName]=\"'icon-file'\" [size]=\"24\" (click)=\"adorner.chooseFile(adorner)\" sv-ng-svg-icon></svg>\n      </span>\n    </ng-container>\n  </div>\n</ng-template>","import { ChangeDetectorRef, Component, Input, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { PageModel, Question, SurveyModel } from \"survey-core\";\nimport { CreatorBase, QuestionAdornerViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"./creator-model.component\";\nimport { QuestionDesignerComponent } from \"./question.component\";\n\n@Component({\n  selector: \"svc-panel\",\n  templateUrl: \"./panel.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class PanelDesignerComponent extends QuestionDesignerComponent {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-panel\", PanelDesignerComponent);\n","<ng-template #template>\n  <div *ngIf=\"adorner\" class=\"svc-question__adorner\" [class]=\"adorner.rootCss()\"\n    (mouseover)=\"adorner.hover($event, $event.currentTarget)\" (mouseleave)=\"adorner.hover($event, $event.currentTarget)\"\n    [attr.data-sv-drop-target-survey-element]=\"adorner.element.name || null\" #container>\n\n    <div [class]=\"adorner.css()\" [key2click]\n      (click)=\"adorner.element.isInteractiveDesignElement ? adorner.select(adorner, $event) : null\"\n      [attr.tabindex]=\"adorner.element.isInteractiveDesignElement ? undefined : -1\">\n      <div *ngIf=\"adorner.allowDragging && adorner.element.isInteractiveDesignElement\" class=\"svc-question__drag-area\"\n        (pointerdown)=\"adorner.onPointerDown($event)\">\n        <svg class=\"svc-question__drag-element\" [iconName]=\"'icon-drag-area-indicator_24x16'\" [size]=\"24\"\n          sv-ng-svg-icon></svg>\n      </div>\n\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n\n      <div *ngIf=\"adorner.isEmptyElement\" class=\"svc-panel__placeholder_frame\">\n        <div class=\"svc-panel__placeholder\">{{ adorner.placeholderText }}</div>\n        <div *ngIf=\"adorner.showAddQuestionButton\" class=\"svc-panel__add-new-question svc-action-button\" [key2click]\n          (click)=\"addNewQuestion($event)\">\n          <span class=\"svc-text svc-text--normal svc-text--bold\">\n            {{ adorner.addNewQuestionText }}\n          </span>\n        </div>\n      </div>\n\n      <ng-template *ngIf=\"adornerComponent && adorner.element.isInteractiveDesignElement\"\n        [component]=\"{ name: adornerComponent, data: { adorner: adorner, question: model } }\">\n      </ng-template>\n\n      <div *ngIf=\"!adorner.isEmptyElement && adorner.showAddQuestionButton\"\n        class=\"svc-panel__add-new-question-container\">\n        <div class=\"svc-panel__add-new-question svc-action-button\" [key2click] (click)=\"addNewQuestion($event)\">\n          <span class=\"svc-text svc-text--normal svc-text--bold\">\n            {{ adorner.addNewQuestionText }}\n          </span>\n        </div>\n        <button type=\"button\" [attr.title]=\"adorner.addNewQuestionText\" [key2click] (click)=\"selectQuestionType($event)\"\n          class=\"svc-panel__question-type-selector\">\n          <svg class=\"svc-panel__question-type-selector-icon\" [iconName]=\"adorner.questionTypeSelectorModel.iconName\"\n            [size]=\"24\" sv-ng-svg-icon></svg>\n          <sv-ng-popup [popupModel]=\"adorner.questionTypeSelectorModel.popupModel\"></sv-ng-popup>\n        </button>\n      </div>\n\n      <div *ngIf=\"adorner.element.isInteractiveDesignElement\" class=\"svc-question__content-actions\">\n        <sv-action-bar [model]=\"adorner.actionContainer\" [handleClick]=\"false\"></sv-action-bar>\n      </div>\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { ToolboxToolViewModel, CreatorBase, IQuestionToolboxItem, editorLocalization } from \"survey-creator-core\";\nimport { BaseAngular, AngularComponentFactory } from \"survey-angular-ui\";\nimport { Action } from \"survey-core\";\n\n@Component({\n  selector: \"svc-toolbox-item\",\n  templateUrl: \"./toolbox-item.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ToolboxItemComponent extends BaseAngular<ToolboxToolViewModel> {\n  @Input() creator!: CreatorBase;\n  @Input() model!: Action;\n  @Input() isCompact: boolean = false;\n  @Input() viewModel!: ToolboxToolViewModel\n  protected getModel(): ToolboxToolViewModel {\n    return this.viewModel;\n  }\n  public get item() {\n    return this.model;\n  }\n  public get ariaLabel(): string {\n    return this.item.tooltip + \" \" + editorLocalization.getString(\"toolbox\") + \" item\";\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-toolbox-item\", ToolboxItemComponent);\n","<ng-template #template>\n  <div class=\"svc-toolbox__item\" role=\"button\" [attr.aria-label]=\"ariaLabel\"\n    [class]=\"'svc-toolbox__item--' + item.iconName\" (click)=\"viewModel.click($event)\" [key2click]>\n    <span class=\"svc-toolbox__item-container\">\n      <svg [iconName]=\"item.iconName\" [size]=\"24\" [title]=\"ariaLabel\" sv-ng-svg-icon></svg>\n    </span>\n    <span *ngIf=\"isCompact\" class=\"svc-toolbox__item-banner svc-item__banner\">\n      <svg [iconName]=\"item.iconName\" [size]=\"24\" [title]=\"ariaLabel\" class=\"svc-toolbox__item-icon\" sv-ng-svg-icon></svg>\n      <span class=\"svc-toolbox__item-title\">{{item.title}}</span>\n    </span>\n    <span *ngIf=\"!isCompact\" class=\"svc-toolbox__item-title\">\n      {{item.title}}\n    </span>\n  </div>\n</ng-template>","import { AfterViewInit, ChangeDetectorRef, Component, ElementRef, Input, NgZone, ViewChild, ViewContainerRef } from \"@angular/core\";\nimport { LocalizableString, CharacterCounter } from \"survey-core\";\nimport { StringEditorViewModelBase, CreatorBase, editableStringRendererName } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"./creator-model.component\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-string-edtior\",\n  templateUrl: \"./string-editor.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class StringEditorComponent extends CreatorModelComponent<StringEditorViewModelBase> {\n  public baseModel!: StringEditorViewModelBase;\n  private justFocused: boolean = false;\n  @Input() model!: any;\n  @ViewChild(\"container\") container!: ElementRef<HTMLElement>;\n  constructor(cdr: ChangeDetectorRef, vcr: ViewContainerRef, private ngZone: NgZone) {\n    super(cdr, vcr);\n  }\n  public createModel(): void {\n    this.baseModel = new StringEditorViewModelBase(this.locString, this.creator);\n    this.baseModel.blurEditor = () => {\n      this.container.nativeElement.blur();\n      this.container.nativeElement.spellcheck = false;\n    };\n    this.baseModel.getEditorElement = () => this.container.nativeElement;\n    this.ngZone.runOutsideAngular(() => {\n      setTimeout(() => this.baseModel.afterRender());\n    });\n  }\n  public get locString(): LocalizableString {\n    return this.model.locStr;\n  }\n  public get creator(): CreatorBase {\n    return this.model.creator;\n  }\n  protected getModel(): StringEditorViewModelBase {\n    return this.baseModel;\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"locString\"];\n  }\n  public get placeholder(): string {\n    return this.baseModel.placeholder;\n  }\n  public get contentEditable(): boolean {\n    return this.baseModel.contentEditable;\n  }\n  public get characterCounter(): CharacterCounter {\n    return this.baseModel.characterCounter;\n  }\n  public get showCharacterCounter(): boolean {\n    return this.baseModel.showCharacterCounter;\n  }\n  public get getCharacterCounterClass(): string {\n    return this.baseModel.getCharacterCounterClass;\n  }\n\n  public get className(): string {\n    return this.baseModel.className(this.locString.renderedHtml);\n  }\n  public get errorText(): string {\n    return this.baseModel.errorText;\n  }\n  public get editValue(): string {\n    return this.baseModel.focused && this.baseModel.editAsText && this.locString.text || this.locString.renderedHtml;\n  }\n  onChangeHandler = (): void => {\n    this.detectChanges();\n  }\n  public onBlur(event: any): string {\n    this.container.nativeElement.spellcheck = false;\n    (<any>this.locString).__isEditing = false;\n    this.justFocused = false;\n    this.baseModel.onBlur(event);\n    return this.baseModel.errorText;\n  }\n  public onFocus(event: any): void {\n    this.baseModel.onFocus(event);\n    this.justFocused = true;\n  }\n  public done(event: any): void {\n    this.baseModel.done(event);\n    (<any>this.locString).__isEditing = false;\n  }\n  public edit(event: any): void {\n    this.container.nativeElement.focus();\n    (<any>this.locString).__isEditing = true;\n    this.baseModel.onClick(event);\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    if ((<any>this.locString).__isEditing) {\n      this.container.nativeElement.focus();\n    }\n    this.locString?.onStringChanged.add(this.onChangeHandler);\n  }\n  override ngOnDestroy(): void {\n    this.locString?.onStringChanged.remove(this.onChangeHandler);\n    super.ngOnDestroy();\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(editableStringRendererName, StringEditorComponent);","<ng-template #template>\n  <span [class]=\"className\">\n    <span class=\"svc-string-editor__content\">\n        <div class=\"svc-string-editor__border\">\n          <svg [iconName]=\"'icon-arrow-up'\" class=\"svc-string-editor__button svc-string-editor__button--edit\" [size]=\"24\" sv-ng-svg-icon \n            (click)=\"edit($event)\" [iconName]=\"'icon-edit'\" [size]=\"16\"></svg>\n        </div>\n        <span class=\"svc-string-editor__input\">\n          <span role=\"textbox\" *ngIf=\"!locString.hasHtml\" class=\"sv-string-editor\" spellcheck=\"false\"\n              (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\"  (input)=\"baseModel.onInput($event)\" (keydown)=\"baseModel.onKeyDown($event)\" (keyup)=\"baseModel.onKeyUp($event)\" (mouseup)=\"baseModel.onMouseUp($event)\" (click)=\"edit($event)\" [textContent]=\"editValue\" [attr.aria-placeholder]=\"placeholder\" [attr.contenteditable]=\"contentEditable\" #container></span>\n          <span role=\"textbox\" *ngIf=\"locString.hasHtml\" class=\"sv-string-editor sv-string-editor--html\" spellcheck=\"false\"\n          (focus)=\"onFocus($event)\" (blur)=\"onBlur($event)\" (keydown)=\"baseModel.onKeyDown($event)\" (keyup)=\"baseModel.onKeyUp($event)\" (mouseup)=\"baseModel.onMouseUp($event)\"\n          (click)=\"edit($event)\" [attr.aria-placeholder]=\"placeholder\" [attr.contenteditable]=\"contentEditable\" [innerHtml]=\"editValue\" #container></span>\n          <sv-ng-character-counter *ngIf=\"showCharacterCounter\" [counter]=\"characterCounter\" [remainingCharacterCounter]=\"getCharacterCounterClass\"></sv-ng-character-counter>\n        </span>\n    </span>\n    <span *ngIf=\"errorText\" class=\"svc-string-editor__error\">{{errorText}}</span>\n  </span>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { DropdownListModel, QuestionDropdownModel, RendererFactory } from \"survey-core\";\n\n@Component({\n  selector: \"svc-logic-operator\",\n  templateUrl: \"./logic-operator.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class LogicOperatorComponent extends QuestionAngular<QuestionDropdownModel> {\n  private dropdownListModel?: DropdownListModel;\n  get dropdownModel(): DropdownListModel | undefined {\n    return this.dropdownListModel;\n  }\n  click(event: any) {\n    this.dropdownListModel?.onClick(event);\n  }\n  clear(event: any) {\n    this.dropdownListModel?.onClear(event);\n  }\n  keyup(event: any) {\n    this.dropdownListModel?.keyHandler(event);\n  }\n  override ngOnInit(): void {\n    super.ngOnInit();\n    this.dropdownListModel = this.model.dropdownListModel || new DropdownListModel(this.model);\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"sv-logic-operator\", LogicOperatorComponent);\n\nRendererFactory.Instance.registerRenderer(\"dropdown\", \"logicoperator\", \"sv-logic-operator\");","<ng-template #template>\n  <div [class]=\"model.cssClasses.selectWrapper\">\n    <ng-container *ngIf=\"!model.isReadOnly\">\n      <div [class]=\"model.getControlClass()\"  (click)=\"click($event)\" (keyup)=\"keyup($event)\"\n        [attr.id]=\"model.inputId\" \n        [attr.required]=\"model.isRequired\" \n        [attr.tabindex]= \"model.isInputReadOnly ? undefined : 0\"\n        [attr.disabled]=\"model.isInputReadOnly\"\n        [attr.role]=\"model.ariaRole\"\n        [attr.aria-required]=\"model.ariaRequired\" \n        [attr.aria-label]=\"model.ariaLabel\" \n        [attr.aria-invalid]=\"model.ariaInvalid\" \n        [attr.aria-describedby]= \"model.ariaDescribedBy\" \n      >\n        <div [class]=\"model.cssClasses.controlValue\">\n          <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n          <div>{{model.readOnlyText}}</div>\n        </div>\n        <div *ngIf=\"model.allowClear && model.cssClasses.cleanButtonIconId\" [class]=\"model.cssClasses.cleanButton\" (click)=\"clear\" [visible]=\"!model.isEmpty()\">\n          <svg [class]=\"model.cssClasses.cleanButtonSvg\" [iconName]=\"model.cssClasses.cleanButtonIconId\" [size]=\"'auto'\" [title]=\"model.clearCaption\" [size]=\"24\" sv-ng-svg-icon></svg>\n        </div>\n      </div>\n        <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n    </ng-container>\n    <div disabled *ngIf=\"model.isReadOnly\" [class]=\"model.getControlClass()\" [attr.id]=\"model.inputId\">\n      <sv-ng-string *ngIf=\"model.selectedItemLocText\" [model]=\"model.selectedItemLocText\"></sv-ng-string>\n      <div>{{model.readOnlyText}}</div>\n    </div>\n  </div>\n</ng-template>\n","import { ChangeDetectorRef, Component, Input, TemplateRef, ViewContainerRef } from \"@angular/core\";\nimport { AngularComponentFactory, BaseAngular, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { ItemValue, PageModel, PanelModel, Question, QuestionSelectBase, SurveyModel } from \"survey-core\";\nimport { CreatorBase, ItemValueWrapperViewModel, MatrixCellWrapperViewModel, QuestionAdornerViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\n\n@Component({\n  selector: \"svc-matrix-cell\",\n  templateUrl: \"./matrix-cell.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class MatrixCellComponent extends CreatorModelComponent<MatrixCellWrapperViewModel> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  @Input() contentTempl!: TemplateRef<any>;\n  public adorner!: MatrixCellWrapperViewModel;\n  private get creator(): CreatorBase {\n    return this.componentData.creator;\n  }\n  public get question(): QuestionSelectBase {\n    return this.componentData.question;\n  }\n  public get isSupportCellEditor(): boolean {\n    return this.adorner.isSupportCellEditor;\n  }\n  public get column() {\n    return this.componentData.column;\n  }\n  public get element() {\n    return this.componentData.element;\n  }\n  public selectContext(event: MouseEvent) {\n    this.adorner.selectContext(this.adorner, event);\n  }\n\n  public get row() {\n    return this.componentData.row;\n  }\n  protected createModel(): void {\n    if (this.componentData) {\n      this.adorner = new MatrixCellWrapperViewModel(this.creator, this.element, this.question, this.row, this.column);\n    }\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"creator\", \"row\", \"column\", \"question\"];\n  }\n  protected getModel(): MatrixCellWrapperViewModel {\n    return this.adorner;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-matrix-cell\", MatrixCellComponent);\n","<ng-template #template>\n  <div tabindex=\"-1\" class=\"svc-matrix-cell\" (click)=\"selectContext($event)\"\n    (mouseover)=\"adorner.hover($event, $event.currentTarget)\"\n    (mouseleave)=\"adorner.hover($event, $event.currentTarget)\">\n    <div class=\"svc-matrix-cell--selected\" [class.svc-visible]=\"adorner.isSelected\"></div>\n    <ng-container *ngTemplateOutlet=\"contentTempl\"></ng-container>\n    <div *ngIf=\"isSupportCellEditor\" class=\"svc-matrix-cell__question-controls\">\n      <span class=\"svc-matrix-cell__question-controls-button\" (click)=\"adorner.editQuestion(adorner)\" [key2click]>\n        <svg [iconName]=\"'icon-edit'\" [size]=\"24\" [size]=\"24\" sv-ng-svg-icon></svg>\n      </span>\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { AngularComponentFactory, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { Question, SurveyModel } from \"survey-core\";\n\n@Component({\n  selector: \"svc-question-editor-content\",\n  templateUrl: \"./question-editor.component.html\"\n})\nexport class QuestionEditorComponent extends EmbeddedViewContentComponent {\n  @Input() survey!: SurveyModel\n  get question(): Question {\n    return this.survey.getAllQuestions()[0];\n  }\n  protected get elementComponentName(): string {\n    return this.question.isPanel ? \"panel\" : \"question\";\n  }\n  public get componentName(): string {\n    const survey = this.survey;\n    if (!!survey) {\n      const name = survey.getElementWrapperComponentName(this.question);\n      if (!!name) {\n        return name;\n      }\n    }\n    return this.elementComponentName;\n  }\n  public get componentData(): any {\n    const survey = this.survey as SurveyModel;\n    let data: any;\n    if (!!survey) {\n      data = survey.getElementWrapperComponentData(this.question);\n    }\n    return {\n      componentName: this.elementComponentName,\n      componentData: {\n        model: this.question,\n        data: data\n      }\n    };\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-question-editor-content\", QuestionEditorComponent);","<ng-template #template>\n  <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { Question } from \"survey-core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-cell-question\",\n  templateUrl: \"./cell-question.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class CellQuestionComponent<T extends Question> extends BaseAngular<T> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  protected getModel(): T {\n    return this.model;\n  }\n  public get model(): T {\n    return this.componentData.model;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-cell-question\", CellQuestionComponent);","<ng-template #template>\n  <div class=\"svc-question__adorner\">\n    <div class=\"svc-question__content svc-question__content--selected-no-border\">\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n    </div>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { ItemValue, QuestionDropdownModel } from \"survey-core\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\nimport { CellQuestionComponent } from \"./cell-question.component\";\n\n@Component({\n  selector: \"svc-cell-dropdown-question\",\n  templateUrl: \"./cell-question-dropdown.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class CellQuestionDropdownComponent extends CellQuestionComponent<QuestionDropdownModel> {\n  public getItemValueComponentName(item: ItemValue): string {\n    return this.model.getItemValueWrapperComponentName(item) || \"sv-ng-selectbase-item\";\n  }\n  public getItemValueComponentData(item: ItemValue): any {\n    return {\n      componentName: \"sv-ng-selectbase-item\",\n      componentData: {\n        question: this.model,\n        model: item,\n        inputType: \"radio\",\n        data: this.model.getItemValueWrapperComponentData(item)\n      }\n    };\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-cell-dropdown-question\", CellQuestionDropdownComponent);","<ng-template #template>\n  <div class=\"svc-question__adorner\">\n    <div class=\"svc-question__content svc-question__content--selected-no-border\">\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n      <div class=\"svc-question__dropdown-choices\">\n          <div *ngFor=\"let item of model.visibleChoices\"class=\"svc-question__dropdown-choice\">\n            <ng-template [component]=\"{ name: getItemValueComponentName(item), data: getItemValueComponentData(item) }\"></ng-template>\n          </div>\n    </div>\n\n    </div>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { QuestionRowModel } from \"survey-core\";\nimport { CreatorBase, RowViewModel } from \"survey-creator-core\";\nimport { CreatorModelComponent } from \"./creator-model.component\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-row\",\n  templateUrl: \"./row.component.html\"\n})\nexport class CreatorRowComponent extends CreatorModelComponent<RowViewModel> {\n  @Input() componentData!: { creator: CreatorBase, row: QuestionRowModel };\n\n  public model!: RowViewModel;\n\n  public get row() {\n    return this.componentData.row;\n  }\n  public get creator() {\n    return this.componentData.creator;\n  }\n  protected getModel(): RowViewModel {\n    return this.model;\n  }\n  createModel() {\n    this.model = new RowViewModel(this.creator, this.row, <any>undefined);\n  }\n  getPropertiesToTrack(): string[] {\n    return [\"creator\", \"row\"];\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-row\", CreatorRowComponent);","<ng-template #template>\n  <div [class]=\"model.cssClasses\">\n    <sv-ng-row [row]=\"row\"></sv-ng-row>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\nimport { QuestionAdornerViewModel } from \"survey-creator-core\";\nimport { QuestionDesignerComponent } from \"./question.component\";\n\n@Component({\n  selector: \"svc-widget-question\",\n  templateUrl: \"./question-widget.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionWidgetDesignerComponent extends QuestionDesignerComponent {\n  protected override createModel(): void {\n    if (this.componentData) {\n      this.adorner = new QuestionAdornerViewModel(this.creator, this.model, <any>null);\n    }\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-widget-question\", QuestionWidgetDesignerComponent);","<ng-template #template>\n  <div *ngIf=\"adorner\" class=\"svc-question__adorner\" [class]=\"adorner.rootCss()\" (mouseover)=\"adorner.hover($event, $event.currentTarget)\" (mouseleave)=\"adorner.hover($event, $event.currentTarget)\" [attr.data-sv-drop-target-survey-element]=\"adorner.element.name || null\">\n    <div *ngIf=\"adorner.element.isInteractiveDesignElement\" class=\"svc-question__content\" [class]=\"adorner.css()\" [key2click] (click)=\"adorner.select(adorner, $event)\" data-bind=\"clickBubble: false\">\n      <div *ngIf=\"adorner.allowDragging\" class=\"svc-question__drag-area\" (pointerdown)=\"adorner.onPointerDown($event)\">\n        <svg class=\"svc-question__drag-element\" [iconName]=\"'icon-drag-area-indicator_24x16'\" [size]=\"24\" sv-ng-svg-icon></svg>\n      </div>\n      <div class=\"svc-widget__content\">\n        <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n      </div>\n      <div *ngIf=\"adorner.isEmptyElement\" class=\"svc-panel__placeholder_frame\">\n            <div class=\"svc-panel__placeholder\" data-bind=\"text: placeholderText\"></div>\n        </div>\n      <div class=\"svc-question__content-actions\">\n        <sv-action-bar [model]=\"adorner.actionContainer\" [handleClick]=\"false\"></sv-action-bar>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"!adorner.element.isInteractiveDesignElement\">\n      <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n      <div *ngIf=\"adorner.isEmptyElement\" class=\"svc-panel__placeholder_frame\">\n        <div class=\"svc-panel__placeholder\">{{ adorner.placeholderText }}</div>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>","import { Component, Input } from \"@angular/core\";\nimport { CreatorBase, QuestionToolbox } from \"survey-creator-core\";\nimport { AngularComponentFactory, BaseAngular } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-toolbox\",\n  templateUrl: \"./toolbox.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class ToolboxComponent extends BaseAngular<QuestionToolbox> {\n  @Input() model!: CreatorBase;\n  public get toolbox() {\n    return this.model.toolbox;\n  }\n  protected getModel(): QuestionToolbox {\n    return this.toolbox;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-toolbox\", ToolboxComponent);\n","<ng-template #template>\n  <div class=\"svc-toolbox\">\n    <div class=\"svc-toolbox__container\">\n      <ng-container *ngIf=\"!(toolbox.categories.length == 1 || !toolbox.showCategoryTitles)\">\n        <svc-toolbox-category *ngFor=\"let category of toolbox.categories\" [category]=\"category\" [toolbox]=\"toolbox\"></svc-toolbox-category>\n      </ng-container>\n      <ng-container *ngIf=\"toolbox.categories.length == 1 || !toolbox.showCategoryTitles\">\n        <div class=\"svc-toolbox__category\">\n          <svc-toolbox-tool *ngFor=\"let item of toolbox.visibleActions\" [creator]=\"model\" [item]=\"item\" [isCompact]=\"toolbox.isCompact\"></svc-toolbox-tool>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\nimport { AngularComponentFactory, EmbeddedViewContentComponent } from \"survey-angular-ui\";\nimport { CreatorBase, QuestionRatingAdornerViewModel } from \"survey-creator-core\";\nimport { QuestionDesignerComponent } from \"../question.component\";\nimport { QuestionRatingModel } from \"survey-core\";\n\n@Component({\n  selector: \"svc-rating-question\",\n  templateUrl: \"../question.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionRatingDesignerComponent extends QuestionDesignerComponent {\n  public override adornerComponent = \"\";\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-rating-question\", QuestionRatingDesignerComponent);\n\n@Component({\n  selector: \"svc-rating-question-content\",\n  templateUrl: \"./question-rating.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class QuestionRatingAdornerDesignerComponent extends CreatorModelComponent<QuestionRatingAdornerViewModel> {\n  @Input() componentName!: string;\n  @Input() componentData!: any;\n  public adorner!: QuestionRatingAdornerViewModel;\n\n  protected createModel(): void {\n    if (this.componentData) {\n      this.adorner = new QuestionRatingAdornerViewModel(this.componentData.data, this.componentData.model, <any>null);\n    }\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"model\", \"creator\"];\n  }\n  protected getModel(): QuestionRatingAdornerViewModel {\n    return this.adorner;\n  }\n}\n\nAngularComponentFactory.Instance.registerComponent(\"svc-rating-question-content\", QuestionRatingAdornerDesignerComponent);\n\n","<ng-template #template>\n  <div class=\"svc-rating-question-content\">\n    <div class=\"svc-rating-question-controls svc-item-value-controls\">\n      <svg *ngIf=\"adorner.allowRemove\" [iconName]=\"'icon-remove_16x16'\" [size]=\"16\" [key2click] (click)=\"adorner.removeItem(adorner)\"\n      [class]=\"adorner.removeClassNames\" [attr.title]=\"adorner.removeTooltip\" [attr.aria-label]=\"adorner.removeTooltip\" sv-ng-svg-icon></svg>\n      <svg *ngIf=\"adorner.allowAdd\" [iconName]=\"'icon-add_16x16'\" [size]=\"16\" [key2click] (click)=\"adorner.addItem(adorner)\"\n      [class]=\"adorner.addClassNames\" [attr.title]=\"adorner.addTooltip\" [attr.aria-label]=\"adorner.addTooltip\"sv-ng-svg-icon></svg>\n    </div>\n    <ng-template [component]=\"{ name: componentName, data: componentData }\"></ng-template>\n  </div>\n</ng-template>","import { AfterViewInit, Component, ElementRef, Input, ViewChild } from \"@angular/core\";\nimport { CreatorModelComponent } from \"../creator-model.component\";\nimport { SurveyModel } from \"survey-core\";\nimport { CreatorBase, LogoImageViewModel } from \"survey-creator-core\";\nimport { AngularComponentFactory } from \"survey-angular-ui\";\n\n@Component({\n  selector: \"svc-logo-image\",\n  templateUrl: \"./logo-image.component.html\",\n  styles: [\":host { display: none; }\"]\n})\nexport class CreatorLogoImageComponent extends CreatorModelComponent<LogoImageViewModel> implements AfterViewInit {\n  @Input() data!: CreatorBase;\n  @ViewChild(\"container\", { read: ElementRef }) container!: ElementRef<HTMLDivElement>;\n  public model!: LogoImageViewModel;\n  protected createModel(): void {\n    this.model = new LogoImageViewModel(this.creator, null as any);\n  }\n  protected getModel(): LogoImageViewModel {\n    return this.model;\n  }\n  protected getPropertiesToTrack(): string[] {\n    return [\"data\"];\n  }\n  public get creator(): CreatorBase {\n    return this.data;\n  }\n  public get survey(): SurveyModel {\n    return this.creator.survey;\n  }\n  ngAfterViewInit(): void {\n    this.model.root = this.container.nativeElement;\n  }\n}\nAngularComponentFactory.Instance.registerComponent(\"svc-logo-image\", CreatorLogoImageComponent);","<ng-template #template>\n  <div class=\"svc-logo-image\" #container>\n    <input type=\"file\" aria-hidden=\"true\" tabindex=\"-1\" accept=\"image/*\" class=\"svc-choose-file-input\" />\n    <ng-container *ngIf=\"!survey.locLogo.renderedHtml\">\n      <ng-container *ngIf=\"model.allowEdit && !model.isUploading\">\n        <div class=\"svc-logo-image-placeholder\" (click)=\"model.chooseFile(model)\" [key2click]>\n          <svg>\n            <use xlink:href=\"#icon-logo\"></use>\n          </svg>\n        </div>\n      </ng-container>\n    </ng-container>\n    <ng-container *ngIf=\"survey.locLogo.renderedHtml\">\n      <div [class]=\"model.containerCss\" (click)=\"model.chooseFile(model)\" [key2click]>\n        <sv-logo-image [data]=\"survey\"></sv-logo-image>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { QuestionSpinEditorModel } from \"survey-creator-core\";\n\n@Component({\n  templateUrl: \"./spin-editor.component.html\"\n})\nexport class QuestionSpinEditorComponent extends QuestionAngular<QuestionSpinEditorModel> {\n}\nAngularComponentFactory.Instance.registerComponent(\"spinedit-question\", QuestionSpinEditorComponent);","<div [class]=\"model.cssClasses.root\" (keydown)=\"model.onKeyDown($event)\">\n  <input \n    autocomplete=\"off\"\n    [disabled]=\"model.isInputReadOnly\" \n    [attr.id]=\"model.inputId\"\n    [attr.placeholder]=\"model.renderedPlaceholder\" \n    [attr.aria-required]=\"model.ariaRequired\"\n    [attr.aria-label]=\"model.ariaLabel\" \n    [attr.aria-invalid]=\"model.ariaInvalid\"\n    [attr.aria-describedby]=\"model.ariaDescribedBy\" \n    (change)=\"model.onChange($event)\" \n    (keydown)=\"model.onInputKeyDown($event)\" \n    (blur)=\"model.onBlur($event)\" \n    (focus)=\"model.onFocus($event)\" \n    (beforeinput)=\"model.onBeforeInput($event)\"\n    [value]=\"model.renderedValue\"\n    [class]=\"model.cssClasses.control\"/>\n  <span [class]=\"model.cssClasses.buttonsContainer\">\n    <button\n      [class]=\"model.cssClasses.arrowButton\" (mousedown)=\"model.onDownButtonMouseDown()\" (mouseup)=\"model.onButtonMouseUp()\" (blur)=\"model.onBlur($event)\" (focus)=\"model.onFocus($event)\">\n      <svg [iconName]=\"model.cssClasses.decreaseButtonIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    </button>\n    <button\n    [class]=\"model.cssClasses.arrowButton\" (mousedown)=\"model.onUpButtonMouseDown()\" (mouseup)=\"model.onButtonMouseUp()\" (blur)=\"model.onBlur($event)\" (focus)=\"model.onFocus($event)\">\n    <svg [iconName]=\"model.cssClasses.increaseButtonIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n  </button>\n  </span>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { QuestionColorModel } from \"survey-creator-core\";\n\n@Component({\n  templateUrl: \"color.component.html\",\n  selector: \"svc-color\"\n})\n\nexport class QuestionColorComponent extends QuestionAngular<QuestionColorModel> {\n\n}\nAngularComponentFactory.Instance.registerComponent(\"color-question\", QuestionColorComponent)","<div [class]=\"model.cssClasses.root\">\n  <span [class]=\"model.cssClasses.swatch\" [style]=\"model.getSwatchStyle()\"></span>\n  <input autocomplete=\"off\" \n    [disabled]=\"model.isInputReadOnly\" \n    [attr.id]=\"model.inputId\" \n    [placeholder]=\"model.renderedPlaceholder\" \n    [attr.aria-required]=\"model.ariaRequired\" \n    [attr.aria-label]=\"model.ariaLabel\" \n    [attr.aria-invalid]=\"model.ariaInvalid\" \n    [attr.aria-describedby]=\"model.ariaDescribedBy\" \n    (change)=\"model.onChange($event)\" \n    (blur)=\"model.onBlur($event)\" \n    (beforeinput)=\"model.onBeforeInput($event)\"\n    [value]=\"model.renderedValue\"\n    [class]=\"model.cssClasses.control\"/>  \n    <label [class]=\"model.cssClasses.colorDropdown\">\n      <svg [iconName]=\"model.cssClasses.colorDrodownIcon\" [size]=\"'auto'\" sv-ng-svg-icon></svg>\n    <input type=\"color\" [class]=\"model.cssClasses.colorInput\" [value]=\"model.renderedValue\" (change)=\"model.onColorInputChange($event)\"/>\n  </label>\n</div>","import { Component } from \"@angular/core\";\nimport { AngularComponentFactory, QuestionAngular } from \"survey-angular-ui\";\nimport { QuestionFileEditorModel } from \"survey-creator-core\";\n\n@Component({\n  selector: \"svc-file-editor\",\n  templateUrl: \"./file.component.html\"\n})\nexport class QuestionFileEditorComponent extends QuestionAngular<QuestionFileEditorModel> {\n}\n\nAngularComponentFactory.Instance.registerComponent(\"fileedit-question\", QuestionFileEditorComponent)","<div [class]=\"model.cssClasses.root\" (dragenter)=\"model.onDragEnter($event)\" (dragover)=\"model.onDragOver($event)\"\n  (drop)=\"model.onDrop($event)\" (dragleave)=\"model.onDragLeave($event)\">\n  <input type=\"text\" [class]=\"model.cssClasses.control\" [value]=\"model.value ||''\"\n    (change)=\"model.onInputChange($event)\" (blur)=\"model.onInputBlur($event)\" />\n  <div [class]=\"model.cssClasses.buttonsContainer\">\n    <button type=\"button\" [class]=\"model.cssClasses.clearButton\" [disabled]=\"model.getIsClearButtonDisabled()\"\n      (click)=\"model.doClean($event)\">\n      <svg [iconName]=\"model.cssClasses.clearButtonIcon\" size=\"'auto'\" [title]=\"model.clearButtonCaption\"\n        sv-ng-svg-icon></svg>\n    </button>\n    <label tabindex=\"0\" role=\"button\" [class]=\"model.cssClasses.chooseButton\" [attr.for]=\"model.inputId\"\n      [attr.aria-label]=\"model.chooseButtonCaption\">\n      <svg [iconName]=\"model.cssClasses.chooseButtonIcon\" size=\"'auto'\" [title]=\"model.chooseButtonCaption\"\n        sv-ng-svg-icon></svg>\n      <input type=\"file\" tabindex=\"-1\" [class]=\"model.cssClasses.fileInput\" [attr.id]=\"model.inputId\"\n        [attr.aria-required]=\"model.ariaRequired\" [attr.aria-label]=\"model.ariaLabel\"\n        [attr.aria-invalid]=\"model.ariaInvalid\" [attr.aria-describedby]=\"model.ariaDescribedBy\" [attr.multiple]=\"false\"\n        [title]=\"model.inputTitle\" [attr.accept]=\"model.acceptedTypes\" (change)=\"model.doChange($event)\">\n    </label>\n  </div>\n</div>","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { CreatorComponent } from \"./creator.component\";\nimport { SurveyModule } from \"survey-angular-ui\";\nimport { DesignerTabComponent } from \"./tabs/designer/designer.component\";\nimport { SvgBundleComponent } from \"./svg-bundle.component\";\nimport { TabbedMenuItemComponent } from \"./tabbed-menu/tabbed-menu/tabbed-menu-item.component\";\nimport { TabbledMenuComponent } from \"./tabbed-menu/tabbed-menu/tabbed-menu.component\";\nimport { TabbedMenuItemWrapperComponent } from \"./tabbed-menu/tabbed-menu/tabbed-menu-item-wrapper.component\";\nimport { SidebarComponent } from \"./side-bar/side-bar.component\";\nimport { SidebarTabComponent } from \"./side-bar/side-bar-tab.component\";\nimport { ObjectSelectorComponent } from \"./property-panel/object-selector.component\";\nimport { PropertyGridComponent } from \"./property-panel/property-grid.component\";\nimport { TextareaJsonEditorComponent } from \"./tabs/json/json-editor-textarea.component\";\nimport { AceJsonEditorComponent } from \"./tabs/json/json-editor-ace.component\";\nimport { LogicTabComponent } from \"./tabs/logic/logic.component\";\nimport { LogicAddButtonComponent } from \"./tabs/logic/logic-add-btn.component\";\nimport { ActionButtonComponent } from \"./components/action-button.component\";\nimport { LinkValueQuestionComponent } from \"./questions/question-link-value.component\";\nimport { EmbeddedSurveyQuestionComponent } from \"./questions/question-embedded-survey.component\";\nimport { TranslationTabComponent } from \"./tabs/translation/translation.component\";\nimport { TranslationSkeletonComponent } from \"./tabs/translation/translation-line-skeleton.component\";\nimport { SimulatorComponent } from \"./tabs/preview/simulator.component\";\nimport { TestAgainActionComponent } from \"./tabs/preview/test-again.component\";\nimport { SurveyResultsComponent } from \"./tabs/preview/survey-results.component\";\nimport { SurveyResultsTableRowComponent } from \"./tabs/preview/survey-results-row.component\";\nimport { TestTabComponent } from \"./tabs/preview/test.component\";\nimport { PageDesignerComponent } from \"./page.component\";\nimport { QuestionDesignerComponent } from \"./question.component\";\nimport { ItemValueDesignerComponent } from \"./adorners/item-value.component\";\nimport { ImageItemValueDesignerComponent } from \"./adorners/image-item-value.component\";\nimport { QuestionDropdownDesignerComponent, QuestionDropdownAdornerDesignerComponent } from \"./adorners/question-dropdown.component\";\nimport { QuestionImageDesignerComponent, QuestionImageAdornerDesignerComponent } from \"./adorners/question-image.component\";\nimport { PanelDesignerComponent } from \"./panel.component\";\nimport { AdaptiveToolboxComponent } from \"./toolbox/adaptive-toolbox.component\";\nimport { ToolboxToolComponent } from \"./toolbox/toolbox-tool.component\";\nimport { ToolboxItemComponent } from \"./toolbox/toolbox-item.component\";\nimport { ToolboxCategoryComponent } from \"./toolbox/toolbox-category.component\";\nimport { StringEditorComponent } from \"./string-editor.component\";\nimport { PageNavigatorComponent } from \"./page-navigator/page-navigator.component\";\nimport { PageNavigatorItemComponent } from \"./page-navigator/page-navigator-item.component\";\nimport { LogicOperatorComponent } from \"./questions/logic-operator.component\";\nimport { MatrixCellComponent } from \"./adorners/matrix-cell.component\";\nimport { QuestionEditorComponent } from \"./question-editor.component\";\nimport { CellQuestionDropdownComponent } from \"./adorners/cell-question-dropdown.component\";\nimport { CreatorRowComponent } from \"./row.component\";\nimport { DesignerPagesComponent } from \"./tabs/designer/designer-pages.component\";\nimport { DesignerSurveyComponent } from \"./tabs/designer/designer-survey.component\";\nimport { CellQuestionComponent } from \"./adorners/cell-question.component\";\nimport { QuestionWidgetDesignerComponent } from \"./question-widget.component\";\nimport { ToolboxComponent } from \"./toolbox/toolbox.component\";\nimport { QuestionRatingAdornerDesignerComponent, QuestionRatingDesignerComponent } from \"./adorners/question-rating.component\";\nimport { CreatorLogoImageComponent } from \"./header/logo-image.component\";\nimport { QuestionSpinEditorComponent } from \"./custom-questions/spin-editor.component\";\nimport { QuestionColorComponent } from \"./custom-questions/color.component\";\nimport { QuestionFileEditorComponent } from \"./custom-questions/file.component\";\n\n@NgModule({\n  declarations: [CreatorComponent, DesignerTabComponent, PageDesignerComponent, QuestionDesignerComponent, PanelDesignerComponent, SvgBundleComponent, TabbledMenuComponent, TabbedMenuItemComponent, TabbedMenuItemWrapperComponent, SidebarComponent, SidebarTabComponent, ObjectSelectorComponent, PropertyGridComponent, TextareaJsonEditorComponent, AceJsonEditorComponent, LogicTabComponent, LogicAddButtonComponent, ActionButtonComponent, LinkValueQuestionComponent, EmbeddedSurveyQuestionComponent, TranslationTabComponent, TranslationSkeletonComponent, SimulatorComponent, TestTabComponent, TestAgainActionComponent, SurveyResultsComponent, SurveyResultsTableRowComponent,\n    AdaptiveToolboxComponent, ToolboxToolComponent, ToolboxItemComponent, ToolboxCategoryComponent, StringEditorComponent, PageNavigatorComponent, PageNavigatorItemComponent,\n    QuestionDropdownDesignerComponent, QuestionDropdownAdornerDesignerComponent, QuestionImageDesignerComponent, QuestionImageAdornerDesignerComponent,\n    ItemValueDesignerComponent, ImageItemValueDesignerComponent, LogicOperatorComponent, MatrixCellComponent, QuestionEditorComponent, CellQuestionDropdownComponent, CreatorRowComponent, DesignerPagesComponent, DesignerSurveyComponent, CellQuestionComponent, QuestionWidgetDesignerComponent, ToolboxComponent, CreatorLogoImageComponent,\n    QuestionRatingAdornerDesignerComponent, QuestionRatingDesignerComponent, QuestionSpinEditorComponent, QuestionColorComponent, QuestionFileEditorComponent],\n  imports: [\n    CommonModule, FormsModule, SurveyModule\n  ],\n  exports: [\n    CreatorComponent, DesignerTabComponent, PageDesignerComponent, QuestionDesignerComponent, PanelDesignerComponent, SvgBundleComponent, TabbledMenuComponent, TabbedMenuItemComponent, TabbedMenuItemWrapperComponent, SidebarComponent, SidebarTabComponent, ObjectSelectorComponent, PropertyGridComponent, TextareaJsonEditorComponent, AceJsonEditorComponent, LogicTabComponent, LogicAddButtonComponent, ActionButtonComponent, LinkValueQuestionComponent, EmbeddedSurveyQuestionComponent, TranslationTabComponent, TranslationSkeletonComponent, SimulatorComponent, TestTabComponent, TestAgainActionComponent, SurveyResultsComponent, SurveyResultsTableRowComponent,\n    AdaptiveToolboxComponent, ToolboxToolComponent, ToolboxItemComponent, ToolboxCategoryComponent, StringEditorComponent, PageNavigatorComponent, PageNavigatorItemComponent,\n    QuestionDropdownDesignerComponent, QuestionDropdownAdornerDesignerComponent, QuestionImageDesignerComponent, QuestionImageAdornerDesignerComponent,\n    ItemValueDesignerComponent, ImageItemValueDesignerComponent, LogicOperatorComponent, MatrixCellComponent, QuestionEditorComponent, CellQuestionDropdownComponent, CreatorRowComponent, DesignerPagesComponent, DesignerSurveyComponent, CellQuestionComponent, QuestionWidgetDesignerComponent, ToolboxComponent, CreatorLogoImageComponent,\n    QuestionRatingAdornerDesignerComponent, QuestionRatingDesignerComponent, QuestionSpinEditorComponent, QuestionColorComponent, QuestionFileEditorComponent],\n  providers: [],\n})\nexport class SurveyCreatorModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './angular-ui';\n"],"names":["i1.TabbedMenuItemWrapperComponent","i1","i2","i2.SidebarTabComponent","i3","i2.SvgBundleComponent","i3.TabbledMenuComponent","i4.SidebarComponent","i5","i2.ToolboxToolComponent","i1.ToolboxCategoryComponent","i1.PageDesignerComponent","i2.PageNavigatorItemComponent","i2.PageDesignerComponent","i3.DesignerPagesComponent","i4.PageNavigatorComponent","i1.AdaptiveToolboxComponent","i3.PageDesignerComponent","i4.DesignerSurveyComponent","i2.LogicAddButtonComponent","i1.ActionButtonComponent","i2.SurveyResultsTableRowComponent","i4","i1.SimulatorComponent","i2.TestAgainActionComponent","i3.SurveyResultsComponent","i3.ActionButtonComponent"],"mappings":";;;;;;;;;;;MAOa,kBAAkB,CAAA;IAE7B,QAAQ,GAAA;QACN,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,SAAS,GAAG,WAAW,CAAC,iBAAiB,EAAE,CAAC;KAC7E;;gHAJU,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,kLAHnB,gEAAgE,EAAA,QAAA,EAAA,IAAA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,CAAA;4FAG/D,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,QAAQ,EAAE,gEAAgE;oBAC1E,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAE8C,YAAY,EAAA,CAAA;sBAAxD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAA;;;ACCvC,MAAO,8BAA+B,SAAQ,WAA2B,CAAA;IAEnE,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;4HAJU,8BAA8B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,uHCT3C,wVAMc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGD,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACxC,oBAAA,WAAW,EAAE,2CAA2C;oBACxD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEAF,MAAO,oBAAqB,SAAQ,WAAgC,CAAA;IAI9D,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,mBAAmB,CAChD,IAAI,CAAC,SAAS,CAAC,aAAa,EAC5B,IAAI,CAAC,KAAK,EACV,mEAAmE,CACpE,CAAC;KACH;IACQ,WAAW,GAAA;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,CAAC;KACpC;;kHAjBU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,kNCVjC,mRAMc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,8BAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDID,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;oBAC3C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;AAkBxB,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,oBAAoB,CAAC;;AEpBrF,MAAO,mBAAoB,SAAQ,WAA4B,CAAA;IAEzD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;iHAJU,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,2GCVhC,mNAIc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDMD,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;oBAC5C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEFF,MAAO,gBAAiB,SAAQ,WAAyB,CAAA;IAGnD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEQ,WAAW,GAAA;AAClB,QAAA,IAAI,CAAC,KAAK,CAAC,kBAAkB,EAAE,CAAC;QAChC,KAAK,CAAC,WAAW,EAAE,CAAC;KACrB;IACD,eAAe,GAAA;QACb,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,aAA+B,CAAC,CAAC;KAC9E;;8GAbU,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,+MCT7B,osCAuBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDdD,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;oBACxC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AEHlB,MAAO,gBAAiB,SAAQ,WAAwB,CAAA;AAI5D,IAAA,WAAA,CAAY,iBAAoC,EAAA;QAC9C,KAAK,CAAC,iBAAiB,CAAC,CAAC;QACzB,iBAAiB,CAAC,MAAM,EAAE,CAAC;KAC5B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAW,OAAO,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACkB,+BAA+B,GAAA;AAChD,QAAA,OAAO,KAAK,CAAC;KACd;IACkB,cAAc,GAAA;AAC/B,QAAA,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;KACxC;IACM,eAAe,GAAA;QACpB,IAAI,CAAC,OAAO,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACnE,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;IACe,WAAW,GAAA;QACzB,IAAI,CAAC,OAAO,CAAC,uBAAuB,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;AACnE,QAAA,IAAI,CAAC,OAAO,CAAC,wBAAwB,EAAE,CAAC;QACxC,KAAK,CAAC,WAAW,EAAE,CAAC;KACrB;;8GA7BU,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;kGAAhB,gBAAgB,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,WAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAEK,UAAU,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECV5C,+pFAkDe,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,gBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD1CF,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,0BAA0B;AACxC,iBAAA,CAAA;wGAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACwC,SAAS,EAAA,CAAA;sBAAtD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;;AA8B9C,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,EAAE,sBAAsB,CAAC;;AEjCrF,MAAgB,qBAAsC,SAAQ,WAAc,CAAA;IAMxE,UAAU,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;QACf,IAAI,CAAC,oBAAoB,EAAE,CAAC,OAAO,CAAC,CAAC,IAAY,KAAI;YACnD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAS,IAAK,CAAC,IAAI,CAAC,CAAC;AACtC,SAAC,CAAC,CAAC;KACJ;IAEQ,QAAQ,GAAA;QACf,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;IACQ,SAAS,GAAA;QAChB,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,WAAW,EAAE,CAAC;QACrB,KAAK,CAAC,SAAS,EAAE,CAAC;KACnB;IACD,eAAe,GAAA;QACb,IAAI,GAAG,GAAG,KAAK,CAAC;AAChB,QAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,GAAG,IAAG;YACnC,IAAI,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAU,IAAK,CAAC,GAAG,CAAC,EAAE;gBACtC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,GAAS,IAAK,CAAC,GAAG,CAAC,CAAC;gBAClC,GAAG,GAAG,IAAI,CAAC;AACZ,aAAA;AACH,SAAC,CAAC,CAAC;AACH,QAAA,OAAO,GAAG,CAAC;KACZ;;mHAhCmB,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,2EAF/B,EAAE,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;4FAEQ,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAH1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,EAAE;AACb,iBAAA,CAAA;;;ACIK,MAAO,oBAAqB,SAAQ,qBAA6B,CAAA;AALvE,IAAA,WAAA,GAAA;;QAQW,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAcrC,KAAA;IAZC,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,oBAAoB,CAAM,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;KACrE;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;KAC5B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;IACkB,yBAAyB,GAAA;QAC1C,OAAO,CAAC,MAAM,CAAC,CAAC;KACjB;;kHAhBU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,qJCVjC,+mBAQc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDED,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;oBAC5C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;;;AEJF,MAAO,wBAAyB,SAAQ,WAAoC,CAAA;IAGhF,QAAQ,GAAA;QACN,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;;sHALU,wBAAwB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,0ICTrC,onCAcc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDLD,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,mCAAmC;oBAChD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;;;AEDF,MAAO,wBAAyB,SAAQ,WAA4B,CAAA;AAIxE,IAAA,IAAW,KAAK,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;KAC7B;IACD,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,mBAAmB;AACtB,YAAA,IAAI,2BAA2B,CAAC,IAAI,CAAC,SAAS,CAAC,aAA+B,EAC5E,IAAI,CAAC,KAAK,EAAE,kCAAkC,CAAC,CAAC;KACrD;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACQ,WAAW,GAAA;;AAClB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,mBAAmB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;QACpC,KAAK,CAAC,WAAW,EAAE,CAAC;KACrB;;sHAlBU,wBAAwB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,2NCVrC,m0BAac,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAM,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDHD,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,WAAW,EAAE,mCAAmC;oBAChD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AEDlB,MAAO,qBAAsB,SAAQ,qBAAkC,CAAA;IAMjE,WAAW,GAAA;;QACnB,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,OAAO,EAAE,CAAC;AAC9B,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;AAC1D,SAAA;KACF;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;KAC7B;AACM,IAAA,cAAc,CAAC,KAAU,EAAA;QAC9B,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAClD;AACM,IAAA,kBAAkB,CAAC,KAAU,EAAA;QAClC,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,yBAAyB,CAAC,MAAM,EAAE,CAAC;KACjD;IACQ,WAAW,GAAA;QAClB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;KACxB;;mHA7BU,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,6JCXlC,6gDAuBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDZO,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EAAE;AACX,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,MAAM,EAAA,CAAA;sBAAd,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;;AA4BR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,UAAU,EAAE,qBAAqB,CAAC;;AElC/E,MAAO,sBAAuB,SAAQ,WAA4B,CAAA;IAE5D,QAAQ,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC;KACnC;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;AACD,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;;oHAVU,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,6GCTnC,uTAEc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAO,qBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDOD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEDF,MAAO,0BAA2B,SAAQ,WAAmB,CAAA;IAEvD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAe,CAAC;KAC7B;AACD,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,KAAY,CAAC;KAC1B;AACD,IAAA,KAAK,CAAC,KAAU,EAAA;AACd,QAAA,IAAI,CAAC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC;QACzB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,KAAK,CAAC,cAAc,EAAE,CAAC;KACxB;;wHAZU,0BAA0B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,kHCTvC,mpBAac,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDJD,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,WAAW,EAAE,sCAAsC;oBACnD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEDF,MAAO,sBAAuB,SAAQ,qBAA6C,CAAA;IAKvF,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,sBAAsB,CACrC,IAAI,CAAC,eAAe,EACpB,IAAI,CAAC,YAAY,CAClB,CAAC;KACH;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,iBAAiB,EAAE,cAAc,CAAC,CAAC;KAC5C;IACM,eAAe,GAAA;;AACpB,QAAA,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE;AAClC,YAAA,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACxC,YAAA,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAE,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAA,EAAE;gBAC5D,MAAM,IAAI,GAAG,IAAI,CAAC;gBAClB,MAAM,kBAAkB,GAAG,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC;AACxE,gBAAA,kBAAkB,CAAC,QAAQ,GAAG,UAAqC,EAAS,EAAA;oBAC1E,OAAO,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,aAA+B,CAAC,CAAC;AAC1E,iBAAC,CAAC;AACF,gBAAA,IAAI,CAAC,KAAK,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC;gBACtD,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAChD,aAAA;AACF,SAAA;KACF;IACe,WAAW,GAAA;;QACzB,KAAK,CAAC,WAAW,EAAE,CAAC;AACpB,QAAA,MAAM,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACxC,QAAA,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAC,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,EAAE,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,aAAa,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,aAAa,CAAA,EAAE;YAC5D,EAAE,CAAC,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,GAAQ,SAAS,CAAC;AACxE,SAAA;AACD,QAAA,IAAI,CAAC,KAAK,CAAC,gCAAgC,EAAE,CAAC;AAC9C,QAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;KACtB;;oHAvCU,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,uQCTnC,kvBAac,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,0BAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDJD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAGU,eAAe,EAAA,CAAA;sBAAvB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;gBACkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AEHlB,MAAO,uBAAwB,SAAQ,WAAwB,CAAA;IAEzD,QAAQ,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KAC1B;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;AACD,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;;qHAVU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,8GCVpC,u1DAkCc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAS,qBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDxBD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEFF,MAAO,oBAAqB,SAAQ,WAAiC,CAAA;AAEzE,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;kHAVU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,2GCTjC,2vCAuBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAQ,wBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAe,qBAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDdD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,2BAA2B;oBACxC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAWR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;;AEZtF,MAAO,uBAAwB,SAAQ,WAA2B,CAAA;IAE5D,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;qHAJU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,+GCTpC,qbAeA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDNa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,WAAW,EAAE,mCAAmC;oBAChD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAKR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,uBAAuB,CAAC;;AEN7F,MAAO,uBAAwB,SAAQ,WAAgC,CAAA;IAEjE,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;qHAJU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,8GCTpC,sKAIc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDKD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAMR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,uBAAuB,CAAC;;AEP5F,MAAO,qBAAsB,SAAQ,WAAkC,CAAA;IAEjE,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACkB,yBAAyB,GAAA;QAC1C,OAAO,CAAC,QAAQ,CAAC,CAAC;KACnB;;mHAPU,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,4GCTlC,kIAEc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDOD,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAQR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,4BAA4B,CAAC,CAAC;AACzG,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;;AEVxF,MAAO,2BAA4B,SAAQ,WAAoC,CAAA;IAEzE,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACe,QAAQ,GAAA;AACtB,QAAA,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC;QACjC,KAAK,CAAC,QAAQ,EAAE,CAAC;KAClB;;yHARU,2BAA2B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,uHCTxC,u3BAmBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,qDAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDVD,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACxC,oBAAA,WAAW,EAAE,uCAAuC;oBACpD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AASR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,8BAA8B,EAAE,2BAA2B,CAAC;;AETzG,MAAO,sBAAuB,SAAQ,WAA+B,CAAA;IAG/D,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IAEM,eAAe,GAAA;;AAEpB,QAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAO,MAAO,CAAC,GAAG,CAAC,IAAI,CACpC,IAAI,CAAC,OAAO,CAAC,aAAa,CAC3B,CAAC,CAAC;KACJ;;oHAZU,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,sNCVnC,qPAMc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,CAAA;4FDID,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACgB,OAAO,EAAA,CAAA;sBAA5B,SAAS;uBAAC,SAAS,CAAA;;AAYtB,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,sBAAsB,CAAC;;AEd/F,MAAO,uBAAwB,SAAQ,WAAmB,CAAA;IAGpD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,OAAO,CAAC,KAAU,EAAA;QAChB,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;KACrB;;qHATU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,gHCVpC,8XAOc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEFF,MAAO,iBAAkB,SAAQ,WAA0B,CAAA;IAGrD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;+GALU,iBAAiB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,wGCT9B,ymBAYc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAkB,uBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDHD,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,WAAW,EAAE,wBAAwB;oBACrC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAMR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC;;AERhF,MAAO,qBAAsB,SAAQ,4BAA4B,CAAA;AALvE,IAAA,WAAA,GAAA;;QAOW,IAAO,CAAA,OAAA,GAAW,EAAE,CAAC;QAErB,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;QAC1B,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;QAC1B,IAAI,CAAA,IAAA,GAAW,EAAE,CAAC;QAClB,IAAK,CAAA,KAAA,GAAW,EAAE,CAAC;QACnB,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;AAOvC,KAAA;AANC,IAAA,OAAO,CAAC,KAAU,EAAA;QAChB,IAAI,CAAC,KAAK,EAAE,CAAC;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,KAAK,CAAC,eAAe,EAAE,CAAC;AACzB,SAAA;KACF;;mHAdU,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,sOCRlC,+ZAKc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGD,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAGU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBACG,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;;AASR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;;AEhBxF,MAAO,0BAA2B,SAAQ,eAAuC,CAAA;AACrF,IAAA,IAAI,YAAY,GAAA;AACd,QAAA,OAAO,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;KACjD;;wHAHU,0BAA0B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,6ECTvC,kmBASc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAkB,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDAD,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,sCAAsC;oBACnD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAOD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,0BAA0B,CAAC;;AEN9F,MAAO,+BAAgC,SAAQ,eAA4C,CAAA;AAC/F,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;KAClC;IACkB,cAAc,GAAA;QAC/B,KAAK,CAAC,cAAc,EAAE,CAAC;AACvB,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE;AAChB,YAAA,IAAI,CAAC,KAAK,CAAC,4BAA4B,GAAG,MAAK;gBAC7C,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,aAAC,CAAC;AACH,SAAA;KACF;;6HAXU,+BAA+B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,0FCT5C,wMAIc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDKD,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,2CAA2C;oBACxD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAeD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,yBAAyB,EAAE,+BAA+B,CAAC;;AEdxG,MAAO,uBAAwB,SAAQ,WAAwB,CAAA;IAGzD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;qHALU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,8GCTpC,0rBAgBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDPD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,8BAA8B;oBAC3C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAMR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,uBAAuB,CAAC;;AER5F,MAAO,4BAA6B,SAAQ,4BAA4B,CAAA;;0HAAjE,4BAA4B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,2FCRzC,+FAEc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,CAAA,CAAA;4FDMD,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,8BAA8B;AACxC,oBAAA,WAAW,EAAE,4CAA4C;oBACzD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAED,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,8BAA8B,EAAE,4BAA4B,CAAC;;AEA1G,MAAO,kBAAmB,SAAQ,WAAiC,CAAA;IAE7D,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAW,cAAc,GAAA;AACvB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC;KAClC;IACD,YAAY,GAAA;AACV,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;AACnC,YAAA,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;AAC3B,SAAA;KACF;IACD,cAAc,GAAA;AACZ,QAAA,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,SAAS,EAAE;AACnC,YAAA,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,SAAA;KACF;;gHAjBU,kBAAkB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,2GCT/B,ysCAcc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAnB,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDLD,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,4BAA4B;oBACzC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEDF,MAAO,wBAAyB,SAAQ,WAAmB,CAAA;IAErD,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;sHAJU,wBAAwB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,4GCTrC,gQAMc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGD,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,6BAA6B;oBAC1C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEAF,MAAO,8BAA+B,SAAQ,WAAmC,CAAA;IAE3E,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;4HAJU,8BAA8B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gHAA9B,8BAA8B,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,EAAA,KAAA,EAAA,OAAA,EAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECV3C,47BAmBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EDTD,8BAA8B,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FAA9B,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,WAAW,EAAE,qCAAqC;oBAClD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;;AEDF,MAAO,sBAAuB,SAAQ,qBAAyC,CAAA;IAI5E,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE;YACjB,IAAI,CAAC,KAAK,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAClD,SAAA;KACF;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACS,oBAAoB,GAAA;QAC5B,OAAO,CAAC,QAAQ,CAAC,CAAC;KACnB;;oHAdU,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,2GCVnC,47CA4Bc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAkB,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,8BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAjB,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAkB,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDlBD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,MAAM,EAAA,CAAA;sBAAd,KAAK;;;AEFF,MAAO,gBAAiB,SAAQ,WAAmC,CAAA;IAE7D,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;;8GAJU,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,uGCT7B,wuBAac,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,kBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,wBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,sBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAd,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDJD,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAKR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,cAAc,EAAE,gBAAgB,CAAC;;AEJ9E,MAAO,yBAA0B,SAAQ,qBAA+C,CAAA;AAL9F,IAAA,WAAA,GAAA;;QA2CE,IAAgB,CAAA,gBAAA,GAAG,EAAE,CAAC;AACvB,KAAA;AAnCC,IAAA,IAAc,OAAO,GAAA;AACnB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;KAChC;AACD,IAAA,IAAW,KAAK,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KACjC;IACS,WAAW,GAAA;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAO,IAAI,CAAC,CAAC;AAClF,SAAA;KACF;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KAC7B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AACD,IAAA,IAAW,oBAAoB,GAAA;AAC7B,QAAA,OAAO,EAAE,CAAC;KACX;AACD,IAAA,IAAW,wBAAwB,GAAA;AACjC,QAAA,OAAO,IAAI,CAAC;KACb;AACD,IAAA,IAAW,wBAAwB,GAAA;AACjC,QAAA,OAAO,KAAK,CAAC;KACd;AACM,IAAA,kBAAkB,CAAC,KAAU,EAAA;;QAClC,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,OAAO,CAAC,yBAAyB,0CAAE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;KAC/F;AACM,IAAA,cAAc,CAAC,KAAU,EAAA;QAC9B,KAAK,CAAC,eAAe,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,CAAC;KAC/B;;uHArCU,yBAAyB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,yBAAyB,uJCXtC,2jDA6Bc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDlBD,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;oBACxC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;;AAuCR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,cAAc,EAAE,yBAAyB,CAAC;;AExCvF,MAAO,0BAA2B,SAAQ,qBAAgD,CAAA;AAI9F,IAAA,IAAY,OAAO,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;KACxC;AACD,IAAA,IAAW,QAAQ,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACpC;AACD,IAAA,IAAW,IAAI,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KACjC;AACM,IAAA,MAAM,CAAC,KAAU,EAAA;AACtB,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;KAChC;IACS,WAAW,GAAA;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AACtF,SAAA;KACF;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;KACxC;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;wHA1BU,0BAA0B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,yJCZvC,kvDAsBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDVD,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,6BAA6B;oBAC1C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;;AA2BR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,0BAA0B,CAAC;;AE7B1F,MAAO,+BAAgC,SAAQ,qBAAqD,CAAA;AAKxG,IAAA,IAAY,OAAO,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC;KACxC;AACD,IAAA,IAAW,QAAQ,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACpC;AACD,IAAA,IAAW,IAAI,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KACjC;IACS,WAAW,GAAA;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAO,IAAI,EAAO,IAAI,CAAC,CAAC;AACjH,SAAA;KACF;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,SAAS,EAAE,UAAU,EAAE,MAAM,CAAC,CAAC;KACxC;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;AAED,IAAA,IAAI,sBAAsB,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,KAAK,CAAC;KAC7C;AACD,IAAA,IAAI,yBAAyB,GAAA;AAC3B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,KAAK,QAAQ,CAAC;KAChD;AACM,IAAA,UAAU,CAAC,KAAiB,EAAA;QACjC,KAAK,CAAC,eAAe,EAAE,CAAC;KACzB;IAED,eAAe,GAAA;QACb,MAAM,SAAS,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,kBAAkB,EAAE,CAAC;AACrD,QAAA,OAAO,EAAE,KAAK,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,SAAS,EAAE,MAAM,EAAE,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,GAAG,SAAS,EAAE,CAAC;KAC/I;IACM,eAAe,GAAA;QACpB,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;KACvD;;6HA1CU,+BAA+B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;iHAA/B,+BAA+B,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,WAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAGV,UAAU,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECf5C,25FA4Cc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDhCD,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,WAAW,EAAE,mCAAmC;oBAChD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACwC,SAAS,EAAA,CAAA;sBAAtD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;;AA0C9C,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,sBAAsB,EAAE,+BAA+B,CAAC;;AE7CrG,MAAO,iCAAkC,SAAQ,yBAAyB,CAAA;AALhF,IAAA,WAAA,GAAA;;QAWkB,IAAgB,CAAA,gBAAA,GAAG,+BAA+B,CAAC;AACpE,KAAA;IANoB,WAAW,GAAA;QAC5B,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,gCAAgC,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAO,IAAI,CAAC,CAAC;AAC1F,SAAA;KACF;;+HALU,iCAAiC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjC,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iCAAiC,oFLZ9C,2jDA6Bc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FKjBD,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAL7C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,4BAA4B;oBACzC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAUD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,uBAAuB,EAAE,iCAAiC,CAAC,CAAC;AAOzG,MAAO,wCAAyC,SAAQ,4BAA4B,CAAA;AAGjF,IAAA,yBAAyB,CAAC,IAAe,EAAA;QAC9C,OAAO,IAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAAC;KACxF;AACM,IAAA,yBAAyB,CAAC,IAAe,EAAA;QAC9C,OAAO;AACL,YAAA,aAAa,EAAE,uBAAuB;AACtC,YAAA,aAAa,EAAE;gBACb,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,SAAS,EAAE,OAAO;gBAClB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,gCAAgC,CAAC,IAAI,CAAC;AAC3D,aAAA;SACF,CAAC;KACH;;sIAhBU,wCAAwC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxC,wCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wCAAwC,kJC5BrD,q2BAiBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAkB,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDWD,wCAAwC,EAAA,UAAA,EAAA,CAAA;kBALpD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,+BAA+B;AACzC,oBAAA,WAAW,EAAE,oCAAoC;oBACjD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;AAkBR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,+BAA+B,EAAE,wCAAwC,CAAC;;AEtCvH,MAAO,8BAA+B,SAAQ,yBAAyB,CAAA;AAL7E,IAAA,WAAA,GAAA;;QAakB,IAAgB,CAAA,gBAAA,GAAG,4BAA4B,CAAC;AAajE,KAAA;IAlBoB,WAAW,GAAA;;QAC5B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,6BAA6B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAO,IAAI,EAAE,CAAA,EAAA,GAAA,IAAI,CAAC,gBAAgB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AACjJ,SAAA;KACF;AAED,IAAA,IAAoB,oBAAoB,GAAA;AACtC,QAAA,OAAO,eAAe,CAAC;KACxB;AACD,IAAA,IAAoB,wBAAwB,GAAA;QAC1C,OAAO,EAAE,KAAK,EAAkC,IAAI,CAAC,OAAQ,CAAC,qBAAqB,EAAE,CAAC;KACvF;AACD,IAAA,IAAoB,wBAAwB,GAAA;AAC1C,QAAA,OAAO,CAAC,CAAC,IAAI,CAAC,wBAAwB,CAAC;KACxC;IACD,eAAe,GAAA;QACmB,IAAI,CAAC,OAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;KAC3F;;4HApBU,8BAA8B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;gHAA9B,8BAA8B,EAAA,QAAA,EAAA,oBAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,WAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EACT,UAAU,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EPX5C,2jDA6Bc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FOnBD,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAL1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,4BAA4B;oBACzC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAE+C,SAAS,EAAA,CAAA;sBAAtD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;;AAsB9C,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,oBAAoB,EAAE,8BAA8B,CAAC,CAAC;AAOnG,MAAO,qCAAsC,SAAQ,4BAA4B,CAAA;;mIAA1E,qCAAqC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArC,qCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qCAAqC,+ICxClD,ylBASc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD+BD,qCAAqC,EAAA,UAAA,EAAA,CAAA;kBALjD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,4BAA4B;AACtC,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;;AAGR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,4BAA4B,EAAE,qCAAqC,CAAC;;AEjCjH,MAAO,sBAAuB,SAAQ,yBAAyB,CAAA;;oHAAxD,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,wECZnC,w0FAkDc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDtCD,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,wBAAwB;oBACrC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAID,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,WAAW,EAAE,sBAAsB,CAAC;;AELjF,MAAO,oBAAqB,SAAQ,WAAiC,CAAA;AAL3E,IAAA,WAAA,GAAA;;QAQW,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;AAWrC,KAAA;IATW,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;AACD,IAAA,IAAW,IAAI,GAAA;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAW,SAAS,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,GAAG,GAAG,kBAAkB,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,OAAO,CAAC;KACpF;;kHAbU,oBAAoB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,+KCVjC,iyBAcc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDJD,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;oBAC5C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;gBACG,SAAS,EAAA,CAAA;sBAAjB,KAAK;;AAWR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,kBAAkB,EAAE,oBAAoB,CAAC;;AEdtF,MAAO,qBAAsB,SAAQ,qBAAgD,CAAA;AAKzF,IAAA,WAAA,CAAY,GAAsB,EAAE,GAAqB,EAAU,MAAc,EAAA;AAC/E,QAAA,KAAK,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QADiD,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAHzE,IAAW,CAAA,WAAA,GAAY,KAAK,CAAC;QAsDrC,IAAe,CAAA,eAAA,GAAG,MAAW;YAC3B,IAAI,CAAC,aAAa,EAAE,CAAC;AACvB,SAAC,CAAA;KAnDA;IACM,WAAW,GAAA;AAChB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,yBAAyB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAC7E,QAAA,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,MAAK;AAC/B,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YACpC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC;AAClD,SAAC,CAAC;AACF,QAAA,IAAI,CAAC,SAAS,CAAC,gBAAgB,GAAG,MAAM,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;AACrE,QAAA,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;YACjC,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC,CAAC;AACjD,SAAC,CAAC,CAAC;KACJ;AACD,IAAA,IAAW,SAAS,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;KAC1B;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;KACvB;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;KACjC;AACD,IAAA,IAAW,WAAW,GAAA;AACpB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;KACnC;AACD,IAAA,IAAW,eAAe,GAAA;AACxB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;KACvC;AACD,IAAA,IAAW,gBAAgB,GAAA;AACzB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,CAAC;KACxC;AACD,IAAA,IAAW,oBAAoB,GAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC;KAC5C;AACD,IAAA,IAAW,wBAAwB,GAAA;AACjC,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,wBAAwB,CAAC;KAChD;AAED,IAAA,IAAW,SAAS,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;KAC9D;AACD,IAAA,IAAW,SAAS,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;KACjC;AACD,IAAA,IAAW,SAAS,GAAA;QAClB,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;KAClH;AAIM,IAAA,MAAM,CAAC,KAAU,EAAA;QACtB,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,UAAU,GAAG,KAAK,CAAC;AAC1C,QAAA,IAAI,CAAC,SAAU,CAAC,WAAW,GAAG,KAAK,CAAC;AAC1C,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC7B,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;KACjC;AACM,IAAA,OAAO,CAAC,KAAU,EAAA;AACvB,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC9B,QAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;AACM,IAAA,IAAI,CAAC,KAAU,EAAA;AACpB,QAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACrB,QAAA,IAAI,CAAC,SAAU,CAAC,WAAW,GAAG,KAAK,CAAC;KAC3C;AACM,IAAA,IAAI,CAAC,KAAU,EAAA;AACpB,QAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC/B,QAAA,IAAI,CAAC,SAAU,CAAC,WAAW,GAAG,IAAI,CAAC;AACzC,QAAA,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC/B;IACQ,QAAQ,GAAA;;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;AACjB,QAAA,IAAU,IAAI,CAAC,SAAU,CAAC,WAAW,EAAE;AACrC,YAAA,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACtC,SAAA;AACD,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;KAC3D;IACQ,WAAW,GAAA;;AAClB,QAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,eAAe,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC7D,KAAK,CAAC,WAAW,EAAE,CAAC;KACrB;;mHAzFU,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,oNCXlC,iuDAkBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,2BAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDPD,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;4JAIU,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACkB,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;AAwFxB,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,qBAAqB,CAAC;;AE9F/F,MAAO,sBAAuB,SAAQ,eAAsC,CAAA;AAEhF,IAAA,IAAI,aAAa,GAAA;QACf,OAAO,IAAI,CAAC,iBAAiB,CAAC;KAC/B;AACD,IAAA,KAAK,CAAC,KAAU,EAAA;;QACd,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,KAAK,CAAC,CAAC;KACxC;AACD,IAAA,KAAK,CAAC,KAAU,EAAA;;QACd,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,KAAK,CAAC,CAAC;KACxC;AACD,IAAA,KAAK,CAAC,KAAU,EAAA;;QACd,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,UAAU,CAAC,KAAK,CAAC,CAAC;KAC3C;IACQ,QAAQ,GAAA;QACf,KAAK,CAAC,QAAQ,EAAE,CAAC;AACjB,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,KAAK,CAAC,iBAAiB,IAAI,IAAI,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC5F;;oHAjBU,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,iFCTnC,qrDA8BA,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,cAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDrBa,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,WAAW,EAAE,iCAAiC;oBAC9C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAoBD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,sBAAsB,CAAC,CAAC;AAEhG,eAAe,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU,EAAE,eAAe,EAAE,mBAAmB,CAAC;;AEnBrF,MAAO,mBAAoB,SAAQ,qBAAiD,CAAA;AAKxF,IAAA,IAAY,OAAO,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;KACnC;AACD,IAAA,IAAW,QAAQ,GAAA;AACjB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACpC;AACD,IAAA,IAAW,mBAAmB,GAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,mBAAmB,CAAC;KACzC;AACD,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;KAClC;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;KACnC;AACM,IAAA,aAAa,CAAC,KAAiB,EAAA;QACpC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KACjD;AAED,IAAA,IAAW,GAAG,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;KAC/B;IACS,WAAW,GAAA;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,0BAA0B,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;AACjH,SAAA;KACF;IACS,oBAAoB,GAAA;QAC5B,OAAO,CAAC,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC;KACjD;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;iHArCU,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,wLCXhC,qvBAYc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDDD,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;oBAC3C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,YAAY,EAAA,CAAA;sBAApB,KAAK;;AAqCR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,mBAAmB,CAAC;;AE3CpF,MAAO,uBAAwB,SAAQ,4BAA4B,CAAA;AAEvE,IAAA,IAAI,QAAQ,GAAA;QACV,OAAO,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC,CAAC;KACzC;AACD,IAAA,IAAc,oBAAoB,GAAA;AAChC,QAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,OAAO,GAAG,UAAU,CAAC;KACrD;AACD,IAAA,IAAW,aAAa,GAAA;AACtB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,MAAM,IAAI,GAAG,MAAM,CAAC,8BAA8B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAClE,IAAI,CAAC,CAAC,IAAI,EAAE;AACV,gBAAA,OAAO,IAAI,CAAC;AACb,aAAA;AACF,SAAA;QACD,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;AACD,IAAA,IAAW,aAAa,GAAA;AACtB,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,MAAqB,CAAC;AAC1C,QAAA,IAAI,IAAS,CAAC;QACd,IAAI,CAAC,CAAC,MAAM,EAAE;YACZ,IAAI,GAAG,MAAM,CAAC,8BAA8B,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7D,SAAA;QACD,OAAO;YACL,aAAa,EAAE,IAAI,CAAC,oBAAoB;AACxC,YAAA,aAAa,EAAE;gBACb,KAAK,EAAE,IAAI,CAAC,QAAQ;AACpB,gBAAA,IAAI,EAAE,IAAI;AACX,aAAA;SACF,CAAC;KACH;;qHA/BU,uBAAuB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,wHCRpC,qIAEc,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDMD,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,kCAAkC;AAChD,iBAAA,CAAA;8BAEU,MAAM,EAAA,CAAA;sBAAd,KAAK;;AAiCR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,uBAAuB,CAAC;;AEjCpG,MAAO,qBAA0C,SAAQ,WAAc,CAAA;IAGjE,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;AACD,IAAA,IAAW,KAAK,GAAA;AACd,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;KACjC;;mHARU,qBAAqB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,4JCTlC,6RAMc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDGD,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBALjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;;AAQR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,qBAAqB,CAAC;;AETxF,MAAO,6BAA8B,SAAQ,qBAA4C,CAAA;AACtF,IAAA,yBAAyB,CAAC,IAAe,EAAA;QAC9C,OAAO,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,IAAI,CAAC,IAAI,uBAAuB,CAAC;KACrF;AACM,IAAA,yBAAyB,CAAC,IAAe,EAAA;QAC9C,OAAO;AACL,YAAA,aAAa,EAAE,uBAAuB;AACtC,YAAA,aAAa,EAAE;gBACb,QAAQ,EAAE,IAAI,CAAC,KAAK;AACpB,gBAAA,KAAK,EAAE,IAAI;AACX,gBAAA,SAAS,EAAE,OAAO;gBAClB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,gCAAgC,CAAC,IAAI,CAAC;AACxD,aAAA;SACF,CAAC;KACH;;2HAdU,6BAA6B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA7B,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,yFCV1C,imBAYc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDFD,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBALzC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,4BAA4B;AACtC,oBAAA,WAAW,EAAE,yCAAyC;oBACtD,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAiBD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,4BAA4B,EAAE,6BAA6B,CAAC;;AEhBzG,MAAO,mBAAoB,SAAQ,qBAAmC,CAAA;AAK1E,IAAA,IAAW,GAAG,GAAA;AACZ,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC;KAC/B;AACD,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;KACnC;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACD,WAAW,GAAA;AACT,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,GAAG,EAAO,SAAS,CAAC,CAAC;KACvE;IACD,oBAAoB,GAAA;AAClB,QAAA,OAAO,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KAC3B;;iHAnBU,mBAAmB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,kHCVhC,oIAIc,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,KAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDMD,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,SAAS;AACnB,oBAAA,WAAW,EAAE,sBAAsB;AACpC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;;AAqBR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,SAAS,EAAE,mBAAmB,CAAC;;AEtB5E,MAAO,+BAAgC,SAAQ,yBAAyB,CAAA;IACzD,WAAW,GAAA;QAC5B,IAAI,IAAI,CAAC,aAAa,EAAE;AACtB,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,wBAAwB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,EAAO,IAAI,CAAC,CAAC;AAClF,SAAA;KACF;;6HALU,+BAA+B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,kFCV5C,gsDAwBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDdD,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AASD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,+BAA+B,CAAC;;AETpG,MAAO,gBAAiB,SAAQ,WAA4B,CAAA;AAEhE,IAAA,IAAW,OAAO,GAAA;AAChB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC;KAC3B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;8GAPU,gBAAgB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,sGCT7B,8uBAac,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAhB,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAL,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDJD,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAL5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,0BAA0B;oBACvC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,KAAK,EAAA,CAAA;sBAAb,KAAK;;AAQR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,aAAa,EAAE,gBAAgB,CAAC;;AEN7E,MAAO,+BAAgC,SAAQ,yBAAyB,CAAA;AAL9E,IAAA,WAAA,GAAA;;QAMkB,IAAgB,CAAA,gBAAA,GAAG,EAAE,CAAC;AACvC,KAAA;;6HAFY,+BAA+B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,kF/BZ5C,2jDA6Bc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,iCAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4F+BjBD,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAL3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,4BAA4B;oBACzC,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;;AAKD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,qBAAqB,EAAE,+BAA+B,CAAC,CAAC;AAOrG,MAAO,sCAAuC,SAAQ,qBAAqD,CAAA;IAKrG,WAAW,GAAA;QACnB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,OAAO,GAAG,IAAI,8BAA8B,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,KAAK,EAAO,IAAI,CAAC,CAAC;AACjH,SAAA;KACF;IACS,oBAAoB,GAAA;AAC5B,QAAA,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;KAC7B;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,OAAO,CAAC;KACrB;;oIAfU,sCAAsC,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtC,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sCAAsC,sKCvBnD,20BAUc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDaD,sCAAsC,EAAA,UAAA,EAAA,CAAA;kBALlD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,6BAA6B;AACvC,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,aAAa,EAAA,CAAA;sBAArB,KAAK;gBACG,aAAa,EAAA,CAAA;sBAArB,KAAK;;AAgBR,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,sCAAsC,CAAC;;AE9BnH,MAAO,yBAA0B,SAAQ,qBAAyC,CAAA;IAI5E,WAAW,GAAA;AACnB,QAAA,IAAI,CAAC,KAAK,GAAG,IAAI,kBAAkB,CAAC,IAAI,CAAC,OAAO,EAAE,IAAW,CAAC,CAAC;KAChE;IACS,QAAQ,GAAA;QAChB,OAAO,IAAI,CAAC,KAAK,CAAC;KACnB;IACS,oBAAoB,GAAA;QAC5B,OAAO,CAAC,MAAM,CAAC,CAAC;KACjB;AACD,IAAA,IAAW,OAAO,GAAA;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC;KAClB;AACD,IAAA,IAAW,MAAM,GAAA;AACf,QAAA,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;KAC5B;IACD,eAAe,GAAA;QACb,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;KAChD;;uHArBU,yBAAyB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;2GAAzB,yBAAyB,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,WAAA,EAAA,CAAA,EAAA,YAAA,EAAA,WAAA,EAAA,KAAA,EAAA,IAAA,EAAA,SAAA,EAAA,CAAA,WAAA,CAAA,EAAA,WAAA,EAAA,IAAA,EAAA,IAAA,EAEJ,UAAU,EAAA,CAAA,EAAA,eAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,ECb5C,g0BAkBc,EAAA,MAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,MAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDPD,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBALrC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,6BAA6B;oBAC1C,MAAM,EAAE,CAAC,0BAA0B,CAAC;AACrC,iBAAA,CAAA;8BAEU,IAAI,EAAA,CAAA;sBAAZ,KAAK;gBACwC,SAAS,EAAA,CAAA;sBAAtD,SAAS;AAAC,gBAAA,IAAA,EAAA,CAAA,WAAW,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,CAAA;;AAqB9C,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,yBAAyB,CAAC;;AE3BzF,MAAO,2BAA4B,SAAQ,eAAwC,CAAA;;yHAA5E,2BAA2B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,2ECPxC,+7CA2BM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDpBO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAHvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,WAAW,EAAE,8BAA8B;AAC5C,iBAAA,CAAA;;AAGD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,2BAA2B,CAAC;;AEA9F,MAAO,sBAAuB,SAAQ,eAAmC,CAAA;;oHAAlE,sBAAsB,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,wECTnC,ggCAmBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDVO,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBALlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,WAAW,EAAE,sBAAsB;AACnC,oBAAA,QAAQ,EAAE,WAAW;AACtB,iBAAA,CAAA;;AAKD,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,sBAAsB,CAAC;;AEJtF,MAAO,2BAA4B,SAAQ,eAAwC,CAAA;;yHAA5E,2BAA2B,EAAA,IAAA,EAAA,IAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,8ECRxC,ogDAoBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDZO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAJvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,uBAAuB;AACrC,iBAAA,CAAA;;AAID,uBAAuB,CAAC,QAAQ,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,2BAA2B,CAAC;;MEiEvF,mBAAmB,CAAA;;iHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAhBf,gBAAgB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,8BAA8B;QAC3pB,wBAAwB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,0BAA0B;AACzK,QAAA,iCAAiC,EAAE,wCAAwC,EAAE,8BAA8B,EAAE,qCAAqC;QAClJ,0BAA0B,EAAE,+BAA+B,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,+BAA+B,EAAE,gBAAgB,EAAE,yBAAyB;AAC3U,QAAA,sCAAsC,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,2BAA2B,CAEzJ,EAAA,OAAA,EAAA,CAAA,YAAY,EAAE,WAAW,EAAE,YAAY,CAAA,EAAA,OAAA,EAAA,CAGvC,gBAAgB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,8BAA8B;QAC9oB,wBAAwB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,0BAA0B;AACzK,QAAA,iCAAiC,EAAE,wCAAwC,EAAE,8BAA8B,EAAE,qCAAqC;QAClJ,0BAA0B,EAAE,+BAA+B,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,+BAA+B,EAAE,gBAAgB,EAAE,yBAAyB;AAC3U,QAAA,sCAAsC,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,2BAA2B,CAAA,EAAA,CAAA,CAAA;kHAGhJ,mBAAmB,EAAA,SAAA,EAFnB,EAAE,EATJ,OAAA,EAAA,CAAA;YACP,YAAY,EAAE,WAAW,EAAE,YAAY;AACxC,SAAA,CAAA,EAAA,CAAA,CAAA;4FASU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAjB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,YAAY,EAAE,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,8BAA8B;wBAC3pB,wBAAwB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,0BAA0B;AACzK,wBAAA,iCAAiC,EAAE,wCAAwC,EAAE,8BAA8B,EAAE,qCAAqC;wBAClJ,0BAA0B,EAAE,+BAA+B,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,+BAA+B,EAAE,gBAAgB,EAAE,yBAAyB;wBAC3U,sCAAsC,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,2BAA2B,CAAC;AAC5J,oBAAA,OAAO,EAAE;wBACP,YAAY,EAAE,WAAW,EAAE,YAAY;AACxC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACP,gBAAgB,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,yBAAyB,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,oBAAoB,EAAE,uBAAuB,EAAE,8BAA8B,EAAE,gBAAgB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,0BAA0B,EAAE,+BAA+B,EAAE,uBAAuB,EAAE,4BAA4B,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,8BAA8B;wBAC9oB,wBAAwB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,wBAAwB,EAAE,qBAAqB,EAAE,sBAAsB,EAAE,0BAA0B;AACzK,wBAAA,iCAAiC,EAAE,wCAAwC,EAAE,8BAA8B,EAAE,qCAAqC;wBAClJ,0BAA0B,EAAE,+BAA+B,EAAE,sBAAsB,EAAE,mBAAmB,EAAE,uBAAuB,EAAE,6BAA6B,EAAE,mBAAmB,EAAE,sBAAsB,EAAE,uBAAuB,EAAE,qBAAqB,EAAE,+BAA+B,EAAE,gBAAgB,EAAE,yBAAyB;AAC3U,wBAAA,sCAAsC,EAAE,+BAA+B,EAAE,2BAA2B,EAAE,sBAAsB,EAAE,2BAA2B;AAAC,qBAAA;AAC5J,oBAAA,SAAS,EAAE,EAAE;AACd,iBAAA,CAAA;;;AC3ED;;AAEG;;;;"}