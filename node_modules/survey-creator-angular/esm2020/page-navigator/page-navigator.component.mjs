import { Component, Input, ViewChild } from "@angular/core";
import { PageNavigatorViewModel } from "survey-creator-core";
import { CreatorModelComponent } from "../creator-model.component";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "./page-navigator-item.component";
import * as i3 from "@angular/common";
export class PageNavigatorComponent extends CreatorModelComponent {
    createModel() {
        this.model = new PageNavigatorViewModel(this.pagesController, this.pageEditMode);
    }
    getModel() {
        return this.model;
    }
    getPropertiesToTrack() {
        return ["pagesController", "pageEditMode"];
    }
    ngAfterViewInit() {
        if (this.pageEditMode !== "bypage") {
            const el = this.container.nativeElement;
            if (!!el && !!el.parentElement?.parentElement?.parentElement) {
                const self = this;
                el.parentElement.parentElement.parentElement.onscroll = function (ev) {
                    return self.model.onContainerScroll(ev.currentTarget);
                };
                self.model.setItemsContainer(el.parentElement);
            }
        }
    }
    ngOnDestroy() {
        super.ngOnDestroy();
        const el = this.container.nativeElement;
        if (!!el && !!el.parentElement?.parentElement?.parentElement) {
            el.parentElement.parentElement.parentElement.onscroll = undefined;
        }
        this.model.stopItemsContainerHeightObserver();
        this.model.dispose();
    }
}
PageNavigatorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PageNavigatorComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
PageNavigatorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: PageNavigatorComponent, selector: "svc-page-navigator", inputs: { pagesController: "pagesController", pageEditMode: "pageEditMode" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-page-navigator\" #container>\n    <ng-container *ngIf=\"model.visible\">\n      <div class=\"svc-page-navigator__selector\"\n          (click)=\"model.togglePageSelector($event)\" [key2click] [attr.title]=\"model.pageSelectorCaption\" [class.svc-page-navigator__selector--opened]=\"model.isPopupOpened\">\n          <svg class=\"svc-page-navigator__navigator-icon\" [iconName]=\"model.icon\" [size]=\"24\" sv-ng-svg-icon></svg>\n          <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n      </div>\n      <div>\n        <svc-page-navigator-item *ngFor=\"let item of model.visibleItems\" [model]=\"item\"></svc-page-navigator-item>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: i1.PopupComponent, selector: "sv-ng-popup, '[sv-ng-popup]'", inputs: ["popupModel"] }, { type: i2.PageNavigatorItemComponent, selector: "svc-page-navigator-item", inputs: ["model"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: PageNavigatorComponent, decorators: [{
            type: Component,
            args: [{ selector: "svc-page-navigator", styles: [":host { display: none; }"], template: "<ng-template #template>\n  <div class=\"svc-page-navigator\" #container>\n    <ng-container *ngIf=\"model.visible\">\n      <div class=\"svc-page-navigator__selector\"\n          (click)=\"model.togglePageSelector($event)\" [key2click] [attr.title]=\"model.pageSelectorCaption\" [class.svc-page-navigator__selector--opened]=\"model.isPopupOpened\">\n          <svg class=\"svc-page-navigator__navigator-icon\" [iconName]=\"model.icon\" [size]=\"24\" sv-ng-svg-icon></svg>\n          <sv-ng-popup [popupModel]=\"model.popupModel\"></sv-ng-popup>\n      </div>\n      <div>\n        <svc-page-navigator-item *ngFor=\"let item of model.visibleItems\" [model]=\"item\"></svc-page-navigator-item>\n      </div>\n    </ng-container>\n  </div>\n</ng-template>" }]
        }], propDecorators: { pagesController: [{
                type: Input
            }], pageEditMode: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGFnZS1uYXZpZ2F0b3IuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL3BhZ2UtbmF2aWdhdG9yL3BhZ2UtbmF2aWdhdG9yLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy9wYWdlLW5hdmlnYXRvci9wYWdlLW5hdmlnYXRvci5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQWlCLFNBQVMsRUFBYyxLQUFLLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZGLE9BQU8sRUFBRSxzQkFBc0IsRUFBbUIsTUFBTSxxQkFBcUIsQ0FBQztBQUM5RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQzs7Ozs7QUFPbkUsTUFBTSxPQUFPLHNCQUF1QixTQUFRLHFCQUE2QztJQUt2RixXQUFXO1FBQ1QsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLHNCQUFzQixDQUNyQyxJQUFJLENBQUMsZUFBZSxFQUNwQixJQUFJLENBQUMsWUFBWSxDQUNsQixDQUFDO0lBQ0osQ0FBQztJQUNTLFFBQVE7UUFDaEIsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDO0lBQ3BCLENBQUM7SUFDUyxvQkFBb0I7UUFDNUIsT0FBTyxDQUFDLGlCQUFpQixFQUFFLGNBQWMsQ0FBQyxDQUFDO0lBQzdDLENBQUM7SUFDTSxlQUFlO1FBQ3BCLElBQUksSUFBSSxDQUFDLFlBQVksS0FBSyxRQUFRLEVBQUU7WUFDbEMsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7WUFDeEMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUU7Z0JBQzVELE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQztnQkFDbEIsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFFBQVEsR0FBRyxVQUFxQyxFQUFTO29CQUNwRyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLGFBQStCLENBQUMsQ0FBQztnQkFDMUUsQ0FBQyxDQUFDO2dCQUNGLElBQUksQ0FBQyxLQUFLLENBQUMsaUJBQWlCLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxDQUFDO2FBQ2hEO1NBQ0Y7SUFDSCxDQUFDO0lBQ2UsV0FBVztRQUN6QixLQUFLLENBQUMsV0FBVyxFQUFFLENBQUM7UUFDcEIsTUFBTSxFQUFFLEdBQUcsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUM7UUFDeEMsSUFBSSxDQUFDLENBQUMsRUFBRSxJQUFJLENBQUMsQ0FBQyxFQUFFLENBQUMsYUFBYSxFQUFFLGFBQWEsRUFBRSxhQUFhLEVBQUU7WUFDNUQsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsYUFBYSxDQUFDLFFBQVEsR0FBUSxTQUFTLENBQUM7U0FDeEU7UUFDRCxJQUFJLENBQUMsS0FBSyxDQUFDLGdDQUFnQyxFQUFFLENBQUM7UUFDOUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxPQUFPLEVBQUUsQ0FBQztJQUN2QixDQUFDOzttSEFyQ1Usc0JBQXNCO3VHQUF0QixzQkFBc0IsdVFDVG5DLGt2QkFhYzsyRkRKRCxzQkFBc0I7a0JBTGxDLFNBQVM7K0JBQ0Usb0JBQW9CLFVBRXRCLENBQUMsMEJBQTBCLENBQUM7OEJBSTNCLGVBQWU7c0JBQXZCLEtBQUs7Z0JBQ0csWUFBWTtzQkFBcEIsS0FBSztnQkFDa0IsU0FBUztzQkFBaEMsU0FBUzt1QkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFBhZ2VOYXZpZ2F0b3JWaWV3TW9kZWwsIFBhZ2VzQ29udHJvbGxlciB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5pbXBvcnQgeyBDcmVhdG9yTW9kZWxDb21wb25lbnQgfSBmcm9tIFwiLi4vY3JlYXRvci1tb2RlbC5jb21wb25lbnRcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2Yy1wYWdlLW5hdmlnYXRvclwiLFxuICB0ZW1wbGF0ZVVybDogXCIuL3BhZ2UtbmF2aWdhdG9yLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIFBhZ2VOYXZpZ2F0b3JDb21wb25lbnQgZXh0ZW5kcyBDcmVhdG9yTW9kZWxDb21wb25lbnQ8UGFnZU5hdmlnYXRvclZpZXdNb2RlbD4gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgcHVibGljIG1vZGVsITogUGFnZU5hdmlnYXRvclZpZXdNb2RlbDtcbiAgQElucHV0KCkgcGFnZXNDb250cm9sbGVyITogUGFnZXNDb250cm9sbGVyO1xuICBASW5wdXQoKSBwYWdlRWRpdE1vZGUhOiBzdHJpbmc7XG4gIEBWaWV3Q2hpbGQoXCJjb250YWluZXJcIikgY29udGFpbmVyITogRWxlbWVudFJlZjxIVE1MRGl2RWxlbWVudD47XG4gIGNyZWF0ZU1vZGVsKCk6IHZvaWQge1xuICAgIHRoaXMubW9kZWwgPSBuZXcgUGFnZU5hdmlnYXRvclZpZXdNb2RlbChcbiAgICAgIHRoaXMucGFnZXNDb250cm9sbGVyLFxuICAgICAgdGhpcy5wYWdlRWRpdE1vZGVcbiAgICApO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBQYWdlTmF2aWdhdG9yVmlld01vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxuICBwcm90ZWN0ZWQgZ2V0UHJvcGVydGllc1RvVHJhY2soKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXCJwYWdlc0NvbnRyb2xsZXJcIiwgXCJwYWdlRWRpdE1vZGVcIl07XG4gIH1cbiAgcHVibGljIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkIHtcbiAgICBpZiAodGhpcy5wYWdlRWRpdE1vZGUgIT09IFwiYnlwYWdlXCIpIHtcbiAgICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudDtcbiAgICAgIGlmICghIWVsICYmICEhZWwucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudD8ucGFyZW50RWxlbWVudCkge1xuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICAgICAgZWwucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50LnBhcmVudEVsZW1lbnQub25zY3JvbGwgPSBmdW5jdGlvbiAodGhpczogR2xvYmFsRXZlbnRIYW5kbGVycywgZXY6IEV2ZW50KSB7XG4gICAgICAgICAgcmV0dXJuIHNlbGYubW9kZWwub25Db250YWluZXJTY3JvbGwoZXYuY3VycmVudFRhcmdldCBhcyBIVE1MRGl2RWxlbWVudCk7XG4gICAgICAgIH07XG4gICAgICAgIHNlbGYubW9kZWwuc2V0SXRlbXNDb250YWluZXIoZWwucGFyZW50RWxlbWVudCk7XG4gICAgICB9XG4gICAgfVxuICB9XG4gIHB1YmxpYyBvdmVycmlkZSBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICBzdXBlci5uZ09uRGVzdHJveSgpO1xuICAgIGNvbnN0IGVsID0gdGhpcy5jb250YWluZXIubmF0aXZlRWxlbWVudDtcbiAgICBpZiAoISFlbCAmJiAhIWVsLnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQ/LnBhcmVudEVsZW1lbnQpIHtcbiAgICAgIGVsLnBhcmVudEVsZW1lbnQucGFyZW50RWxlbWVudC5wYXJlbnRFbGVtZW50Lm9uc2Nyb2xsID0gPGFueT51bmRlZmluZWQ7XG4gICAgfVxuICAgIHRoaXMubW9kZWwuc3RvcEl0ZW1zQ29udGFpbmVySGVpZ2h0T2JzZXJ2ZXIoKTtcbiAgICB0aGlzLm1vZGVsLmRpc3Bvc2UoKTtcbiAgfVxufSIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDxkaXYgY2xhc3M9XCJzdmMtcGFnZS1uYXZpZ2F0b3JcIiAjY29udGFpbmVyPlxuICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC52aXNpYmxlXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ZjLXBhZ2UtbmF2aWdhdG9yX19zZWxlY3RvclwiXG4gICAgICAgICAgKGNsaWNrKT1cIm1vZGVsLnRvZ2dsZVBhZ2VTZWxlY3RvcigkZXZlbnQpXCIgW2tleTJjbGlja10gW2F0dHIudGl0bGVdPVwibW9kZWwucGFnZVNlbGVjdG9yQ2FwdGlvblwiIFtjbGFzcy5zdmMtcGFnZS1uYXZpZ2F0b3JfX3NlbGVjdG9yLS1vcGVuZWRdPVwibW9kZWwuaXNQb3B1cE9wZW5lZFwiPlxuICAgICAgICAgIDxzdmcgY2xhc3M9XCJzdmMtcGFnZS1uYXZpZ2F0b3JfX25hdmlnYXRvci1pY29uXCIgW2ljb25OYW1lXT1cIm1vZGVsLmljb25cIiBbc2l6ZV09XCIyNFwiIHN2LW5nLXN2Zy1pY29uPjwvc3ZnPlxuICAgICAgICAgIDxzdi1uZy1wb3B1cCBbcG9wdXBNb2RlbF09XCJtb2RlbC5wb3B1cE1vZGVsXCI+PC9zdi1uZy1wb3B1cD5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdj5cbiAgICAgICAgPHN2Yy1wYWdlLW5hdmlnYXRvci1pdGVtICpuZ0Zvcj1cImxldCBpdGVtIG9mIG1vZGVsLnZpc2libGVJdGVtc1wiIFttb2RlbF09XCJpdGVtXCI+PC9zdmMtcGFnZS1uYXZpZ2F0b3ItaXRlbT5cbiAgICAgIDwvZGl2PlxuICAgIDwvbmctY29udGFpbmVyPlxuICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19