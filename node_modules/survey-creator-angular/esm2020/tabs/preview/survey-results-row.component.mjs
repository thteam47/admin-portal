import { Component, Input } from "@angular/core";
import { BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "survey-angular-ui";
import * as i2 from "@angular/common";
export class SurveyResultsTableRowComponent extends BaseAngular {
    getModel() {
        return this.model;
    }
}
SurveyResultsTableRowComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyResultsTableRowComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
SurveyResultsTableRowComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: SurveyResultsTableRowComponent, selector: "survey-results-table-row", inputs: { model: "model" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <tr (click)=\"model.toggle()\" [key2click]>\n    <td class=\"svd-dark-border-color\"\n        [style.paddingLeft]=\"model.textMargin \">\n        <span *ngIf=\"model.isNode\" class=\"svd-test-results__marker\"\n              [class.svd-test-results__marker--expanded]=\"!model.collapsed\"\n                         [style.left]=\"model.markerMargin\">\n            <svg [iconName]=\"'icon-expand_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </span>\n        <span >{{model.title}}</span></td>\n    <td [class.svd-test-results__node-value]=\"model.isNode\" [class.svd-dark-border-color]=\"!model.isNode\">\n      {{model.getString(model.displayValue)}}\n    </td>\n  </tr>\n  <ng-container *ngIf=\"model.isNode && !model.collapsed\">\n    <ng-container *ngFor=\"let row of model.data\">\n      <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n    </ng-container>\n  </ng-container>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.SvgIconComponent, selector: "'[sv-ng-svg-icon]'", inputs: ["size", "width", "height", "iconName", "partCss", "css", "title"] }, { type: SurveyResultsTableRowComponent, selector: "survey-results-table-row", inputs: ["model"] }], directives: [{ type: i1.Key2ClickDirective, selector: "[key2click]", inputs: ["key2click"] }, { type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyResultsTableRowComponent, decorators: [{
            type: Component,
            args: [{ selector: "survey-results-table-row", styles: [":host { display: none; }"], template: "<ng-template #template>\n  <tr (click)=\"model.toggle()\" [key2click]>\n    <td class=\"svd-dark-border-color\"\n        [style.paddingLeft]=\"model.textMargin \">\n        <span *ngIf=\"model.isNode\" class=\"svd-test-results__marker\"\n              [class.svd-test-results__marker--expanded]=\"!model.collapsed\"\n                         [style.left]=\"model.markerMargin\">\n            <svg [iconName]=\"'icon-expand_16x16'\" [size]=\"16\" sv-ng-svg-icon></svg>\n        </span>\n        <span >{{model.title}}</span></td>\n    <td [class.svd-test-results__node-value]=\"model.isNode\" [class.svd-dark-border-color]=\"!model.isNode\">\n      {{model.getString(model.displayValue)}}\n    </td>\n  </tr>\n  <ng-container *ngIf=\"model.isNode && !model.collapsed\">\n    <ng-container *ngFor=\"let row of model.data\">\n      <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n    </ng-container>\n  </ng-container>\n</ng-template>" }]
        }], propDecorators: { model: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VydmV5LXJlc3VsdHMtcm93LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy90YWJzL3ByZXZpZXcvc3VydmV5LXJlc3VsdHMtcm93LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uL3NyYy90YWJzL3ByZXZpZXcvc3VydmV5LXJlc3VsdHMtcm93LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQzs7OztBQVNoRCxNQUFNLE9BQU8sOEJBQStCLFNBQVEsV0FBbUM7SUFFM0UsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQzs7MkhBSlUsOEJBQThCOytHQUE5Qiw4QkFBOEIsbUhDVjNDLDQ3QkFtQmMscU1EVEQsOEJBQThCOzJGQUE5Qiw4QkFBOEI7a0JBTDFDLFNBQVM7K0JBQ0UsMEJBQTBCLFVBRTVCLENBQUMsMEJBQTBCLENBQUM7OEJBRzNCLEtBQUs7c0JBQWIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xuaW1wb3J0IHsgQmFzZUFuZ3VsYXIgfSBmcm9tIFwic3VydmV5LWFuZ3VsYXItdWlcIjtcbmltcG9ydCB7IEFjdGlvbiB9IGZyb20gXCJzdXJ2ZXktY29yZVwiO1xuaW1wb3J0IHsgU3VydmV5UmVzdWx0c0l0ZW1Nb2RlbCB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdXJ2ZXktcmVzdWx0cy10YWJsZS1yb3dcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9zdXJ2ZXktcmVzdWx0cy1yb3cuY29tcG9uZW50Lmh0bWxcIixcbiAgc3R5bGVzOiBbXCI6aG9zdCB7IGRpc3BsYXk6IG5vbmU7IH1cIl1cbn0pXG5leHBvcnQgY2xhc3MgU3VydmV5UmVzdWx0c1RhYmxlUm93Q29tcG9uZW50IGV4dGVuZHMgQmFzZUFuZ3VsYXI8U3VydmV5UmVzdWx0c0l0ZW1Nb2RlbD4ge1xuICBASW5wdXQoKSBtb2RlbCE6IFN1cnZleVJlc3VsdHNJdGVtTW9kZWw7XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBTdXJ2ZXlSZXN1bHRzSXRlbU1vZGVsIHtcbiAgICByZXR1cm4gdGhpcy5tb2RlbDtcbiAgfVxufSIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG4gIDx0ciAoY2xpY2spPVwibW9kZWwudG9nZ2xlKClcIiBba2V5MmNsaWNrXT5cbiAgICA8dGQgY2xhc3M9XCJzdmQtZGFyay1ib3JkZXItY29sb3JcIlxuICAgICAgICBbc3R5bGUucGFkZGluZ0xlZnRdPVwibW9kZWwudGV4dE1hcmdpbiBcIj5cbiAgICAgICAgPHNwYW4gKm5nSWY9XCJtb2RlbC5pc05vZGVcIiBjbGFzcz1cInN2ZC10ZXN0LXJlc3VsdHNfX21hcmtlclwiXG4gICAgICAgICAgICAgIFtjbGFzcy5zdmQtdGVzdC1yZXN1bHRzX19tYXJrZXItLWV4cGFuZGVkXT1cIiFtb2RlbC5jb2xsYXBzZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgIFtzdHlsZS5sZWZ0XT1cIm1vZGVsLm1hcmtlck1hcmdpblwiPlxuICAgICAgICAgICAgPHN2ZyBbaWNvbk5hbWVdPVwiJ2ljb24tZXhwYW5kXzE2eDE2J1wiIFtzaXplXT1cIjE2XCIgc3Ytbmctc3ZnLWljb24+PC9zdmc+XG4gICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPHNwYW4gPnt7bW9kZWwudGl0bGV9fTwvc3Bhbj48L3RkPlxuICAgIDx0ZCBbY2xhc3Muc3ZkLXRlc3QtcmVzdWx0c19fbm9kZS12YWx1ZV09XCJtb2RlbC5pc05vZGVcIiBbY2xhc3Muc3ZkLWRhcmstYm9yZGVyLWNvbG9yXT1cIiFtb2RlbC5pc05vZGVcIj5cbiAgICAgIHt7bW9kZWwuZ2V0U3RyaW5nKG1vZGVsLmRpc3BsYXlWYWx1ZSl9fVxuICAgIDwvdGQ+XG4gIDwvdHI+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJtb2RlbC5pc05vZGUgJiYgIW1vZGVsLmNvbGxhcHNlZFwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IHJvdyBvZiBtb2RlbC5kYXRhXCI+XG4gICAgICA8c3VydmV5LXJlc3VsdHMtdGFibGUtcm93IFttb2RlbF09XCJyb3dcIj48L3N1cnZleS1yZXN1bHRzLXRhYmxlLXJvdz5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9uZy1jb250YWluZXI+XG48L25nLXRlbXBsYXRlPiJdfQ==