import { Component, Input } from "@angular/core";
import { CreatorModelComponent } from "../../creator-model.component";
import { SurveyResultsModel } from "survey-creator-core";
import * as i0 from "@angular/core";
import * as i1 from "../../components/action-button.component";
import * as i2 from "./survey-results-row.component";
import * as i3 from "survey-angular-ui";
import * as i4 from "@angular/common";
export class SurveyResultsComponent extends CreatorModelComponent {
    createModel() {
        if (!!this.survey) {
            this.model = new SurveyResultsModel(this.survey);
        }
    }
    getModel() {
        return this.model;
    }
    getPropertiesToTrack() {
        return ["survey"];
    }
}
SurveyResultsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyResultsComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
SurveyResultsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: SurveyResultsComponent, selector: "survey-results", inputs: { survey: "survey" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n<div class=\"svd-test-results\">\n  <div class=\"svd-test-results__header\">\n      <div class=\"svd-test-results__header-text\">{{model.surveyResultsText}}</div>\n      <div class=\"svd-test-results__header-types\">\n        <svc-action-button [text]=\"model.surveyResultsTableText\" [click]=\"model.selectTableClick\" [disabled]=\"false\" [selected]=\"model.isTableSelected\"></svc-action-button>\n        <svc-action-button [text]=\"model.surveyResultsJsonText\" [click]=\"model.selectJsonClick\" [disabled]=\"false\" [selected]=\"model.isJsonSelected\"></svc-action-button>\n      </div>\n  </div>\n  <div class=\"svd-test-results__text svd-light-bg-color\" [visible]=\"model.resultViewType === 'text'\">\n      <div>{{model.resultText}}</div>\n  </div>\n  <div class=\"svd-test-results__table svd-light-bg-color\" [visible]=\"model.resultViewType === 'table'\">\n      <table>\n          <thead>\n              <tr class=\"svd-light-background-color\">\n                  <th class=\"svd-dark-border-color\">{{model.resultsTitle}}</th>\n                  <th class=\"svd-dark-border-color\">{{model.resultsDisplayValue}}</th>\n              </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let row of model.resultData\">\n              <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n            </ng-container>\n          </tbody>\n      </table>\n  </div>\n</div>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.ActionButtonComponent, selector: "svc-action-button", inputs: ["classes", "click", "selected", "disabled", "text", "title", "allowBubble"] }, { type: i2.SurveyResultsTableRowComponent, selector: "survey-results-table-row", inputs: ["model"] }], directives: [{ type: i3.VisibleDirective, selector: "[visible]", inputs: ["visible"] }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: SurveyResultsComponent, decorators: [{
            type: Component,
            args: [{ selector: "survey-results", styles: [":host { display: none; }"], template: "<ng-template #template>\n<div class=\"svd-test-results\">\n  <div class=\"svd-test-results__header\">\n      <div class=\"svd-test-results__header-text\">{{model.surveyResultsText}}</div>\n      <div class=\"svd-test-results__header-types\">\n        <svc-action-button [text]=\"model.surveyResultsTableText\" [click]=\"model.selectTableClick\" [disabled]=\"false\" [selected]=\"model.isTableSelected\"></svc-action-button>\n        <svc-action-button [text]=\"model.surveyResultsJsonText\" [click]=\"model.selectJsonClick\" [disabled]=\"false\" [selected]=\"model.isJsonSelected\"></svc-action-button>\n      </div>\n  </div>\n  <div class=\"svd-test-results__text svd-light-bg-color\" [visible]=\"model.resultViewType === 'text'\">\n      <div>{{model.resultText}}</div>\n  </div>\n  <div class=\"svd-test-results__table svd-light-bg-color\" [visible]=\"model.resultViewType === 'table'\">\n      <table>\n          <thead>\n              <tr class=\"svd-light-background-color\">\n                  <th class=\"svd-dark-border-color\">{{model.resultsTitle}}</th>\n                  <th class=\"svd-dark-border-color\">{{model.resultsDisplayValue}}</th>\n              </tr>\n          </thead>\n          <tbody>\n            <ng-container *ngFor=\"let row of model.resultData\">\n              <survey-results-table-row [model]=\"row\"></survey-results-table-row>\n            </ng-container>\n          </tbody>\n      </table>\n  </div>\n</div>\n</ng-template>" }]
        }], propDecorators: { survey: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3VydmV5LXJlc3VsdHMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL3RhYnMvcHJldmlldy9zdXJ2ZXktcmVzdWx0cy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi9zcmMvdGFicy9wcmV2aWV3L3N1cnZleS1yZXN1bHRzLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2pELE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBRXRFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7QUFPekQsTUFBTSxPQUFPLHNCQUF1QixTQUFRLHFCQUF5QztJQUk1RSxXQUFXO1FBQ2hCLElBQUksQ0FBQyxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUU7WUFDakIsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGtCQUFrQixDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztTQUNsRDtJQUNILENBQUM7SUFDUyxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQztJQUNwQixDQUFDO0lBQ1Msb0JBQW9CO1FBQzVCLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUNwQixDQUFDOzttSEFkVSxzQkFBc0I7dUdBQXRCLHNCQUFzQiwyR0NWbkMsNDdDQTRCYzsyRkRsQkQsc0JBQXNCO2tCQUxsQyxTQUFTOytCQUNFLGdCQUFnQixVQUVsQixDQUFDLDBCQUEwQixDQUFDOzhCQUczQixNQUFNO3NCQUFkLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENyZWF0b3JNb2RlbENvbXBvbmVudCB9IGZyb20gXCIuLi8uLi9jcmVhdG9yLW1vZGVsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgU3VydmV5TW9kZWwgfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcbmltcG9ydCB7IFN1cnZleVJlc3VsdHNNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJzdXJ2ZXktcmVzdWx0c1wiLFxuICB0ZW1wbGF0ZVVybDogXCIuL3N1cnZleS1yZXN1bHRzLmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIFN1cnZleVJlc3VsdHNDb21wb25lbnQgZXh0ZW5kcyBDcmVhdG9yTW9kZWxDb21wb25lbnQ8U3VydmV5UmVzdWx0c01vZGVsPiB7XG4gIEBJbnB1dCgpIHN1cnZleSE6IFN1cnZleU1vZGVsO1xuICBwdWJsaWMgbW9kZWwhOiBTdXJ2ZXlSZXN1bHRzTW9kZWw7XG5cbiAgcHVibGljIGNyZWF0ZU1vZGVsKCk6IHZvaWQge1xuICAgIGlmICghIXRoaXMuc3VydmV5KSB7XG4gICAgICB0aGlzLm1vZGVsID0gbmV3IFN1cnZleVJlc3VsdHNNb2RlbCh0aGlzLnN1cnZleSk7XG4gICAgfVxuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBTdXJ2ZXlSZXN1bHRzTW9kZWwge1xuICAgIHJldHVybiB0aGlzLm1vZGVsO1xuICB9XG4gIHByb3RlY3RlZCBnZXRQcm9wZXJ0aWVzVG9UcmFjaygpOiBzdHJpbmdbXSB7XG4gICAgcmV0dXJuIFtcInN1cnZleVwiXTtcbiAgfVxufSIsIjxuZy10ZW1wbGF0ZSAjdGVtcGxhdGU+XG48ZGl2IGNsYXNzPVwic3ZkLXRlc3QtcmVzdWx0c1wiPlxuICA8ZGl2IGNsYXNzPVwic3ZkLXRlc3QtcmVzdWx0c19faGVhZGVyXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwic3ZkLXRlc3QtcmVzdWx0c19faGVhZGVyLXRleHRcIj57e21vZGVsLnN1cnZleVJlc3VsdHNUZXh0fX08L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJzdmQtdGVzdC1yZXN1bHRzX19oZWFkZXItdHlwZXNcIj5cbiAgICAgICAgPHN2Yy1hY3Rpb24tYnV0dG9uIFt0ZXh0XT1cIm1vZGVsLnN1cnZleVJlc3VsdHNUYWJsZVRleHRcIiBbY2xpY2tdPVwibW9kZWwuc2VsZWN0VGFibGVDbGlja1wiIFtkaXNhYmxlZF09XCJmYWxzZVwiIFtzZWxlY3RlZF09XCJtb2RlbC5pc1RhYmxlU2VsZWN0ZWRcIj48L3N2Yy1hY3Rpb24tYnV0dG9uPlxuICAgICAgICA8c3ZjLWFjdGlvbi1idXR0b24gW3RleHRdPVwibW9kZWwuc3VydmV5UmVzdWx0c0pzb25UZXh0XCIgW2NsaWNrXT1cIm1vZGVsLnNlbGVjdEpzb25DbGlja1wiIFtkaXNhYmxlZF09XCJmYWxzZVwiIFtzZWxlY3RlZF09XCJtb2RlbC5pc0pzb25TZWxlY3RlZFwiPjwvc3ZjLWFjdGlvbi1idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJzdmQtdGVzdC1yZXN1bHRzX190ZXh0IHN2ZC1saWdodC1iZy1jb2xvclwiIFt2aXNpYmxlXT1cIm1vZGVsLnJlc3VsdFZpZXdUeXBlID09PSAndGV4dCdcIj5cbiAgICAgIDxkaXY+e3ttb2RlbC5yZXN1bHRUZXh0fX08L2Rpdj5cbiAgPC9kaXY+XG4gIDxkaXYgY2xhc3M9XCJzdmQtdGVzdC1yZXN1bHRzX190YWJsZSBzdmQtbGlnaHQtYmctY29sb3JcIiBbdmlzaWJsZV09XCJtb2RlbC5yZXN1bHRWaWV3VHlwZSA9PT0gJ3RhYmxlJ1wiPlxuICAgICAgPHRhYmxlPlxuICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgICAgPHRyIGNsYXNzPVwic3ZkLWxpZ2h0LWJhY2tncm91bmQtY29sb3JcIj5cbiAgICAgICAgICAgICAgICAgIDx0aCBjbGFzcz1cInN2ZC1kYXJrLWJvcmRlci1jb2xvclwiPnt7bW9kZWwucmVzdWx0c1RpdGxlfX08L3RoPlxuICAgICAgICAgICAgICAgICAgPHRoIGNsYXNzPVwic3ZkLWRhcmstYm9yZGVyLWNvbG9yXCI+e3ttb2RlbC5yZXN1bHRzRGlzcGxheVZhbHVlfX08L3RoPlxuICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPG5nLWNvbnRhaW5lciAqbmdGb3I9XCJsZXQgcm93IG9mIG1vZGVsLnJlc3VsdERhdGFcIj5cbiAgICAgICAgICAgICAgPHN1cnZleS1yZXN1bHRzLXRhYmxlLXJvdyBbbW9kZWxdPVwicm93XCI+PC9zdXJ2ZXktcmVzdWx0cy10YWJsZS1yb3c+XG4gICAgICAgICAgICA8L25nLWNvbnRhaW5lcj5cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgPC90YWJsZT5cbiAgPC9kaXY+XG48L2Rpdj5cbjwvbmctdGVtcGxhdGU+Il19