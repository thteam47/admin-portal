import { Component, Input, ViewChild } from "@angular/core";
import { VerticalResponsivityManager } from "survey-core";
import { BaseAngular } from "survey-angular-ui";
import * as i0 from "@angular/core";
import * as i1 from "./toolbox-category.component";
import * as i2 from "./toolbox-tool.component";
import * as i3 from "@angular/common";
export class AdaptiveToolboxComponent extends BaseAngular {
    get model() {
        return this.creator.toolbox;
    }
    ngAfterViewInit() {
        this.responsivityManager =
            new VerticalResponsivityManager(this.container.nativeElement, this.model, ".svc-toolbox__tool:not(.sv-dots)");
    }
    getModel() {
        return this.model;
    }
    ngOnDestroy() {
        this.responsivityManager?.dispose();
        super.ngOnDestroy();
    }
}
AdaptiveToolboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: AdaptiveToolboxComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
AdaptiveToolboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: AdaptiveToolboxComponent, selector: "svc-adaptive-toolbox", inputs: { creator: "creator" }, viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true }], usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n  <div class=\"svc-toolbox\" [class.svc-toolbox--compact]=\"model.isCompact\" #container>\n    <div class=\"svc-toolbox__container\">\n      <ng-container *ngIf=\"!(model.isCompact || model.categories.length == 1 || !model.showCategoryTitles)\">\n        <svc-toolbox-category *ngFor=\"let category of model.categories\" [category]=\"category\" [toolbox]=\"model\"></svc-toolbox-category>\n      </ng-container>\n      <ng-container *ngIf=\"model.isCompact || model.categories.length == 1 || !model.showCategoryTitles\">\n        <div class=\"svc-toolbox__category\">\n          <svc-toolbox-tool *ngFor=\"let item of model.renderedActions\" [creator]=\"creator\" [item]=\"item\" [isCompact]=\"model.isCompact\"></svc-toolbox-tool>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>", styles: [":host{display:none}\n"], components: [{ type: i1.ToolboxCategoryComponent, selector: "svc-toolbox-category ", inputs: ["category", "toolbox"] }, { type: i2.ToolboxToolComponent, selector: "svc-toolbox-tool", inputs: ["creator", "item", "isCompact"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: AdaptiveToolboxComponent, decorators: [{
            type: Component,
            args: [{ selector: "svc-adaptive-toolbox", styles: [":host { display: none; }"], template: "<ng-template #template>\n  <div class=\"svc-toolbox\" [class.svc-toolbox--compact]=\"model.isCompact\" #container>\n    <div class=\"svc-toolbox__container\">\n      <ng-container *ngIf=\"!(model.isCompact || model.categories.length == 1 || !model.showCategoryTitles)\">\n        <svc-toolbox-category *ngFor=\"let category of model.categories\" [category]=\"category\" [toolbox]=\"model\"></svc-toolbox-category>\n      </ng-container>\n      <ng-container *ngIf=\"model.isCompact || model.categories.length == 1 || !model.showCategoryTitles\">\n        <div class=\"svc-toolbox__category\">\n          <svc-toolbox-tool *ngFor=\"let item of model.renderedActions\" [creator]=\"creator\" [item]=\"item\" [isCompact]=\"model.isCompact\"></svc-toolbox-tool>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-template>" }]
        }], propDecorators: { creator: [{
                type: Input
            }], container: [{
                type: ViewChild,
                args: ["container"]
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWRhcHRpdmUtdG9vbGJveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdG9vbGJveC9hZGFwdGl2ZS10b29sYm94LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uL3NyYy90b29sYm94L2FkYXB0aXZlLXRvb2xib3guY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFpQixTQUFTLEVBQWMsS0FBSyxFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUV2RixPQUFPLEVBQUUsMkJBQTJCLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDMUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFDOzs7OztBQU9oRCxNQUFNLE9BQU8sd0JBQXlCLFNBQVEsV0FBNEI7SUFJeEUsSUFBVyxLQUFLO1FBQ2QsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLE9BQU8sQ0FBQztJQUM5QixDQUFDO0lBQ0QsZUFBZTtRQUNiLElBQUksQ0FBQyxtQkFBbUI7WUFDdEIsSUFBSSwyQkFBMkIsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLGFBQStCLEVBQzVFLElBQUksQ0FBQyxLQUFLLEVBQUUsa0NBQWtDLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBQ1MsUUFBUTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUM7SUFDcEIsQ0FBQztJQUNRLFdBQVc7UUFDbEIsSUFBSSxDQUFDLG1CQUFtQixFQUFFLE9BQU8sRUFBRSxDQUFDO1FBQ3BDLEtBQUssQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUN0QixDQUFDOztxSEFsQlUsd0JBQXdCO3lHQUF4Qix3QkFBd0IsMk5DVnJDLG0wQkFhYzsyRkRIRCx3QkFBd0I7a0JBTHBDLFNBQVM7K0JBQ0Usc0JBQXNCLFVBRXhCLENBQUMsMEJBQTBCLENBQUM7OEJBRzNCLE9BQU87c0JBQWYsS0FBSztnQkFDa0IsU0FBUztzQkFBaEMsU0FBUzt1QkFBQyxXQUFXIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgQ29tcG9uZW50LCBFbGVtZW50UmVmLCBJbnB1dCwgVmlld0NoaWxkIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENyZWF0b3JCYXNlLCBRdWVzdGlvblRvb2xib3ggfSBmcm9tIFwic3VydmV5LWNyZWF0b3ItY29yZVwiO1xuaW1wb3J0IHsgVmVydGljYWxSZXNwb25zaXZpdHlNYW5hZ2VyIH0gZnJvbSBcInN1cnZleS1jb3JlXCI7XG5pbXBvcnQgeyBCYXNlQW5ndWxhciB9IGZyb20gXCJzdXJ2ZXktYW5ndWxhci11aVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6IFwic3ZjLWFkYXB0aXZlLXRvb2xib3hcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi9hZGFwdGl2ZS10b29sYm94LmNvbXBvbmVudC5odG1sXCIsXG4gIHN0eWxlczogW1wiOmhvc3QgeyBkaXNwbGF5OiBub25lOyB9XCJdXG59KVxuZXhwb3J0IGNsYXNzIEFkYXB0aXZlVG9vbGJveENvbXBvbmVudCBleHRlbmRzIEJhc2VBbmd1bGFyPFF1ZXN0aW9uVG9vbGJveD4gaW1wbGVtZW50cyBBZnRlclZpZXdJbml0IHtcbiAgQElucHV0KCkgY3JlYXRvciE6IENyZWF0b3JCYXNlO1xuICBAVmlld0NoaWxkKFwiY29udGFpbmVyXCIpIGNvbnRhaW5lciE6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+O1xuICBwcml2YXRlIHJlc3BvbnNpdml0eU1hbmFnZXI6IFZlcnRpY2FsUmVzcG9uc2l2aXR5TWFuYWdlciB8IHVuZGVmaW5lZDtcbiAgcHVibGljIGdldCBtb2RlbCgpIHtcbiAgICByZXR1cm4gdGhpcy5jcmVhdG9yLnRvb2xib3g7XG4gIH1cbiAgbmdBZnRlclZpZXdJbml0KCkge1xuICAgIHRoaXMucmVzcG9uc2l2aXR5TWFuYWdlciA9XG4gICAgICBuZXcgVmVydGljYWxSZXNwb25zaXZpdHlNYW5hZ2VyKHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQgYXMgSFRNTERpdkVsZW1lbnQsXG4gICAgICAgIHRoaXMubW9kZWwsIFwiLnN2Yy10b29sYm94X190b29sOm5vdCguc3YtZG90cylcIik7XG4gIH1cbiAgcHJvdGVjdGVkIGdldE1vZGVsKCk6IFF1ZXN0aW9uVG9vbGJveCB7XG4gICAgcmV0dXJuIHRoaXMubW9kZWw7XG4gIH1cbiAgb3ZlcnJpZGUgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5yZXNwb25zaXZpdHlNYW5hZ2VyPy5kaXNwb3NlKCk7XG4gICAgc3VwZXIubmdPbkRlc3Ryb3koKTtcbiAgfVxufVxuIiwiPG5nLXRlbXBsYXRlICN0ZW1wbGF0ZT5cbiAgPGRpdiBjbGFzcz1cInN2Yy10b29sYm94XCIgW2NsYXNzLnN2Yy10b29sYm94LS1jb21wYWN0XT1cIm1vZGVsLmlzQ29tcGFjdFwiICNjb250YWluZXI+XG4gICAgPGRpdiBjbGFzcz1cInN2Yy10b29sYm94X19jb250YWluZXJcIj5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIhKG1vZGVsLmlzQ29tcGFjdCB8fCBtb2RlbC5jYXRlZ29yaWVzLmxlbmd0aCA9PSAxIHx8ICFtb2RlbC5zaG93Q2F0ZWdvcnlUaXRsZXMpXCI+XG4gICAgICAgIDxzdmMtdG9vbGJveC1jYXRlZ29yeSAqbmdGb3I9XCJsZXQgY2F0ZWdvcnkgb2YgbW9kZWwuY2F0ZWdvcmllc1wiIFtjYXRlZ29yeV09XCJjYXRlZ29yeVwiIFt0b29sYm94XT1cIm1vZGVsXCI+PC9zdmMtdG9vbGJveC1jYXRlZ29yeT5cbiAgICAgIDwvbmctY29udGFpbmVyPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cIm1vZGVsLmlzQ29tcGFjdCB8fCBtb2RlbC5jYXRlZ29yaWVzLmxlbmd0aCA9PSAxIHx8ICFtb2RlbC5zaG93Q2F0ZWdvcnlUaXRsZXNcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInN2Yy10b29sYm94X19jYXRlZ29yeVwiPlxuICAgICAgICAgIDxzdmMtdG9vbGJveC10b29sICpuZ0Zvcj1cImxldCBpdGVtIG9mIG1vZGVsLnJlbmRlcmVkQWN0aW9uc1wiIFtjcmVhdG9yXT1cImNyZWF0b3JcIiBbaXRlbV09XCJpdGVtXCIgW2lzQ29tcGFjdF09XCJtb2RlbC5pc0NvbXBhY3RcIj48L3N2Yy10b29sYm94LXRvb2w+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=