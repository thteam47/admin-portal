import { Component, Input } from "@angular/core";
import { CreatorModelComponent } from "../creator-model.component";
import { ToolboxToolViewModel } from "survey-creator-core";
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "survey-angular-ui";
export class ToolboxToolComponent extends CreatorModelComponent {
    constructor() {
        super(...arguments);
        this.isCompact = false;
    }
    createModel() {
        this.model = new ToolboxToolViewModel(this.item, this.creator);
    }
    getPropertiesToTrack() {
        return ["creator", "item"];
    }
    getModel() {
        return this.item;
    }
    getPropertiesToUpdateSync() {
        return ["mode"];
    }
}
ToolboxToolComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: ToolboxToolComponent, deps: null, target: i0.ɵɵFactoryTarget.Component });
ToolboxToolComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.0.3", type: ToolboxToolComponent, selector: "svc-toolbox-tool", inputs: { creator: "creator", item: "item", isCompact: "isCompact" }, usesInheritance: true, ngImport: i0, template: "<ng-template #template>\n    <div class=\"svc-toolbox__tool\"\n        [class.sv-action--hidden]=\"!item.isVisible\" [class]=\"item.css\" (pointerdown)=\"model.onPointerDown($event)\">\n        <div class=\"sv-action__content\">\n            <div class=\"svc-toolbox__category-separator\" *ngIf=\"item.needSeparator && !creator.toolbox.showCategoryTitles\"></div>\n            <ng-template [component]=\"{ name: item.component || 'svc-toolbox-item', default: 'svc-toolbox-item', data: { model: item, viewModel: model, creator: creator, isCompact: isCompact } }\"></ng-template>\n        </div>\n    </div>\n</ng-template>", styles: [":host{display:none}\n"], directives: [{ type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2.DynamicComponentDirective, selector: "[component]", inputs: ["component"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.0.3", ngImport: i0, type: ToolboxToolComponent, decorators: [{
            type: Component,
            args: [{ selector: "svc-toolbox-tool", styles: [":host { display: none; }"], template: "<ng-template #template>\n    <div class=\"svc-toolbox__tool\"\n        [class.sv-action--hidden]=\"!item.isVisible\" [class]=\"item.css\" (pointerdown)=\"model.onPointerDown($event)\">\n        <div class=\"sv-action__content\">\n            <div class=\"svc-toolbox__category-separator\" *ngIf=\"item.needSeparator && !creator.toolbox.showCategoryTitles\"></div>\n            <ng-template [component]=\"{ name: item.component || 'svc-toolbox-item', default: 'svc-toolbox-item', data: { model: item, viewModel: model, creator: creator, isCompact: isCompact } }\"></ng-template>\n        </div>\n    </div>\n</ng-template>" }]
        }], propDecorators: { creator: [{
                type: Input
            }], item: [{
                type: Input
            }], isCompact: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbGJveC10b29sLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy90b29sYm94L3Rvb2xib3gtdG9vbC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi9zcmMvdG9vbGJveC90b29sYm94LXRvb2wuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDakQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDbkUsT0FBTyxFQUFxQyxvQkFBb0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7O0FBUTlGLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxxQkFBNkI7SUFMdkU7O1FBUVcsY0FBUyxHQUFZLEtBQUssQ0FBQztLQWNyQztJQVpDLFdBQVc7UUFDVCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksb0JBQW9CLENBQU0sSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDdEUsQ0FBQztJQUNTLG9CQUFvQjtRQUM1QixPQUFPLENBQUMsU0FBUyxFQUFFLE1BQU0sQ0FBQyxDQUFDO0lBQzdCLENBQUM7SUFDUyxRQUFRO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNuQixDQUFDO0lBQ2tCLHlCQUF5QjtRQUMxQyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDbEIsQ0FBQzs7aUhBaEJVLG9CQUFvQjtxR0FBcEIsb0JBQW9CLHFKQ1ZqQywrbUJBUWM7MkZERUQsb0JBQW9CO2tCQUxoQyxTQUFTOytCQUNFLGtCQUFrQixVQUVwQixDQUFDLDBCQUEwQixDQUFDOzhCQUczQixPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csSUFBSTtzQkFBWixLQUFLO2dCQUNHLFNBQVM7c0JBQWpCLEtBQUsiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IENyZWF0b3JNb2RlbENvbXBvbmVudCB9IGZyb20gXCIuLi9jcmVhdG9yLW1vZGVsLmNvbXBvbmVudFwiO1xuaW1wb3J0IHsgQ3JlYXRvckJhc2UsIElRdWVzdGlvblRvb2xib3hJdGVtLCBUb29sYm94VG9vbFZpZXdNb2RlbCB9IGZyb20gXCJzdXJ2ZXktY3JlYXRvci1jb3JlXCI7XG5pbXBvcnQgeyBBY3Rpb24gfSBmcm9tIFwic3VydmV5LWNvcmVcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcInN2Yy10b29sYm94LXRvb2xcIixcbiAgdGVtcGxhdGVVcmw6IFwiLi90b29sYm94LXRvb2wuY29tcG9uZW50Lmh0bWxcIixcbiAgc3R5bGVzOiBbXCI6aG9zdCB7IGRpc3BsYXk6IG5vbmU7IH1cIl1cbn0pXG5leHBvcnQgY2xhc3MgVG9vbGJveFRvb2xDb21wb25lbnQgZXh0ZW5kcyBDcmVhdG9yTW9kZWxDb21wb25lbnQ8QWN0aW9uPiB7XG4gIEBJbnB1dCgpIGNyZWF0b3IhOiBDcmVhdG9yQmFzZTtcbiAgQElucHV0KCkgaXRlbSE6IEFjdGlvbjtcbiAgQElucHV0KCkgaXNDb21wYWN0OiBib29sZWFuID0gZmFsc2U7XG4gIHB1YmxpYyBtb2RlbCE6IFRvb2xib3hUb29sVmlld01vZGVsO1xuICBjcmVhdGVNb2RlbCgpIHtcbiAgICB0aGlzLm1vZGVsID0gbmV3IFRvb2xib3hUb29sVmlld01vZGVsKDxhbnk+dGhpcy5pdGVtLCB0aGlzLmNyZWF0b3IpO1xuICB9XG4gIHByb3RlY3RlZCBnZXRQcm9wZXJ0aWVzVG9UcmFjaygpOiBzdHJpbmdbXSB7XG4gICAgcmV0dXJuIFtcImNyZWF0b3JcIiwgXCJpdGVtXCJdO1xuICB9XG4gIHByb3RlY3RlZCBnZXRNb2RlbCgpOiBBY3Rpb24ge1xuICAgIHJldHVybiB0aGlzLml0ZW07XG4gIH1cbiAgcHJvdGVjdGVkIG92ZXJyaWRlIGdldFByb3BlcnRpZXNUb1VwZGF0ZVN5bmMoKTogc3RyaW5nW10ge1xuICAgIHJldHVybiBbXCJtb2RlXCJdO1xuICB9XG59XG4iLCI8bmctdGVtcGxhdGUgI3RlbXBsYXRlPlxuICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveF9fdG9vbFwiXG4gICAgICAgIFtjbGFzcy5zdi1hY3Rpb24tLWhpZGRlbl09XCIhaXRlbS5pc1Zpc2libGVcIiBbY2xhc3NdPVwiaXRlbS5jc3NcIiAocG9pbnRlcmRvd24pPVwibW9kZWwub25Qb2ludGVyRG93bigkZXZlbnQpXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJzdi1hY3Rpb25fX2NvbnRlbnRcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJzdmMtdG9vbGJveF9fY2F0ZWdvcnktc2VwYXJhdG9yXCIgKm5nSWY9XCJpdGVtLm5lZWRTZXBhcmF0b3IgJiYgIWNyZWF0b3IudG9vbGJveC5zaG93Q2F0ZWdvcnlUaXRsZXNcIj48L2Rpdj5cbiAgICAgICAgICAgIDxuZy10ZW1wbGF0ZSBbY29tcG9uZW50XT1cInsgbmFtZTogaXRlbS5jb21wb25lbnQgfHwgJ3N2Yy10b29sYm94LWl0ZW0nLCBkZWZhdWx0OiAnc3ZjLXRvb2xib3gtaXRlbScsIGRhdGE6IHsgbW9kZWw6IGl0ZW0sIHZpZXdNb2RlbDogbW9kZWwsIGNyZWF0b3I6IGNyZWF0b3IsIGlzQ29tcGFjdDogaXNDb21wYWN0IH0gfVwiPjwvbmctdGVtcGxhdGU+XG4gICAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuPC9uZy10ZW1wbGF0ZT4iXX0=