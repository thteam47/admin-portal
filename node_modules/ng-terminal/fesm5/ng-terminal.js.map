{"version":3,"file":"ng-terminal.js","sources":["ng://ng-terminal/lib/ng-terminal.service.ts","ng://ng-terminal/lib/ng-terminal.component.ts","ng://ng-terminal/lib/global-style/global-style.component.ts","ng://ng-terminal/lib/ng-terminal.module.ts","ng://ng-terminal/lib/functions-using-csi.ts","ng://ng-terminal/lib/ng-terminal.ts","ng://ng-terminal/lib/display-option.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgTerminalService {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { Terminal } from 'xterm';\r\nimport { FitAddon } from 'xterm-addon-fit';\r\nimport { NgTerminal } from './ng-terminal';\r\nimport { Subject, Observable, Subscription, combineLatest, ObjectUnsubscribedError } from 'rxjs';\r\nimport { DisplayOption } from './display-option';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\n\r\n@Component({\r\n  selector: 'ng-terminal',\r\n  templateUrl: './ng-terminal.component.html',\r\n  styleUrls: ['./ng-terminal.component.css']\r\n})\r\nexport class NgTerminalComponent implements OnInit, AfterViewInit, AfterViewChecked, NgTerminal, OnDestroy {\r\n  private term: Terminal;\r\n  private fitAddon: FitAddon;\r\n  private keyInputSubject: Subject<string> = new Subject<string>();\r\n  private keyEventSubject = new Subject<{key: string; domEvent: KeyboardEvent;}>();\r\n  private termSnippetSubject = new Subject<()=>void>();\r\n  private afterViewInitSubject = new Subject<void>();\r\n  \r\n  private keyInputSubjectSubscription: Subscription;\r\n  private keyEventSubjectSubscription: Subscription;\r\n  private termSnippetSubscription: Subscription;\r\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n  private displayOption: DisplayOption = {};\r\n  private dataSource: Observable<string>;\r\n  private dataSourceSubscription: Subscription;\r\n  terminalStyle: object = {};\r\n\r\n  @Input('dataSource')\r\n  set _dataSource(ds) {\r\n    if(this.dataSourceSubscription != null){\r\n      this.dataSourceSubscription.unsubscribe();\r\n    }\r\n    this.dataSource = ds;\r\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\r\n      this.write(data);\r\n    })\r\n  }\r\n  get _dataSource() {\r\n    return this.dataSource;\r\n  }\r\n\r\n  @Input('displayOption')\r\n  set _displayOption(opt: DisplayOption){\r\n    this.setDisplayOption(opt);\r\n  }\r\n\r\n  @Input('style')\r\n  set _style(opt: any){\r\n    this.setStyle(opt);\r\n  }\r\n\r\n  @Output('keyInput')\r\n  keyInputEmitter  = new EventEmitter<string>();\r\n\r\n  @Output('keyEvent')\r\n  keyEventEmitter  = new EventEmitter<{key: string; domEvent: KeyboardEvent;}>();\r\n\r\n  @ViewChild('terminal', { static: true }) \r\n  terminalDiv: ElementRef;\r\n\r\n  constructor() { \r\n    this.termSnippetSubscription = combineLatest(this.termSnippetSubject, this.afterViewInitSubject).subscribe(([snippet]) => {\r\n      snippet();\r\n    });\r\n  }\r\n\r\n  private observableSetup(){\r\n    this.term.onData((input) => {\r\n      this.keyInputSubject.next(input);\r\n    });\r\n    this.term.onKey(e => {\r\n      this.keyEventSubject.next(e);\r\n    })\r\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\r\n      this.keyInputEmitter.emit(data);\r\n    })\r\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\r\n      this.keyEventEmitter.emit(e);\r\n    });\r\n    this.afterViewInitSubject.next();\r\n  }\r\n\r\n  /**\r\n   * set block or inline-block to #terminal for fitting client or outer element\r\n   */\r\n  private setTerminalBlock(isBlock: boolean){\r\n    if(isBlock)\r\n      this.terminalStyle['display'] = 'block';\r\n    else\r\n      this.terminalStyle['display'] = 'inline-block';\r\n  }\r\n\r\n  /**\r\n   * set dimensions\r\n   */\r\n  private setTerminalDimensions(left: number, top: number, width: number, height: number) {\r\n    this.terminalStyle['left'] = left ? `${left}px` : undefined;\r\n    this.terminalStyle['top'] = top ? `${top}px` : undefined;\r\n    this.terminalStyle['width'] = width ? `${width}px` : undefined;\r\n    this.terminalStyle['height'] = height ? `${height}px` : undefined;\r\n  }\r\n  \r\n  /**\r\n   * remove dimensions\r\n   */\r\n  private removeTerminalDimensions(){\r\n    this.terminalStyle['left'] = undefined;\r\n    this.terminalStyle['top'] = undefined;\r\n    this.terminalStyle['width'] = undefined;\r\n    this.terminalStyle['height'] = undefined;\r\n  }\r\n\r\n  setStyle(styleObject: any){\r\n    Object.assign(this.terminalStyle, styleObject);\r\n  }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  /**\r\n   * When a dimension of div changes, fit a terminal in div.\r\n   */\r\n  ngAfterViewChecked() {\r\n    let dims = this.fitAddon.proposeDimensions();\r\n    if(dims === undefined || isNaN(dims.rows) || dims.rows == Infinity || isNaN(dims.cols) || dims.cols == Infinity){\r\n      this.term.resize(10, 10);\r\n    }else if(!this.displayOption.fixedGrid){\r\n      this.fitAddon.fit();\r\n    }else{\r\n      this.term.resize(this.displayOption.fixedGrid.cols, this.displayOption.fixedGrid.rows);\r\n      let xtermScreen = this.term.element.getElementsByClassName('xterm-screen')[0];\r\n      let scrollArea = this.term.element.getElementsByClassName('xterm-scroll-area')[0];\r\n      let terminal = this.term.element;\r\n      const contentWidth = xtermScreen.clientWidth;\r\n      const scrollWidth = terminal.clientWidth - scrollArea.clientWidth;\r\n      this.setTerminalDimensions(undefined, undefined, contentWidth + scrollWidth, undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It creates new terminal in #terminal.\r\n   */\r\n  ngAfterViewInit() {\r\n    this.fitAddon = new FitAddon();\r\n    this.term = new Terminal();\r\n    this.term.open(this.terminalDiv.nativeElement);\r\n    this.term.loadAddon(this.fitAddon);\r\n    this.observableSetup();\r\n  }\r\n\r\n  /**\r\n   * clean all resources\r\n   */\r\n  ngOnDestroy(): void {\r\n    if(this.keyInputSubjectSubscription)\r\n      this.keyInputSubjectSubscription.unsubscribe();\r\n    if(this.dataSourceSubscription)\r\n      this.dataSourceSubscription.unsubscribe();\r\n    if(this.keyEventSubjectSubscription)\r\n      this.keyEventSubjectSubscription.unsubscribe();\r\n    if(this.termSnippetSubscription)\r\n    this.termSnippetSubscription.unsubscribe();\r\n    if(this.term)\r\n      this.term.dispose();\r\n  }\r\n\r\n  write(chars: string) {\r\n    this.term.write(chars);\r\n  }\r\n\r\n  setDisplayOption(opt: DisplayOption) {\r\n    if (opt) {\r\n      if (opt.fixedGrid != null) {\r\n        console.debug(\"resizable will be ignored.\");\r\n        this.setTerminalBlock(false);\r\n        this.removeTerminalDimensions();\r\n      } else {\r\n        this.setTerminalBlock(true);\r\n      }\r\n      this.displayOption = opt;\r\n    } else\r\n      console.warn(`A falsy option is not allowed`);\r\n  }\r\n\r\n  get keyInput(): Observable<string> {\r\n    return this.keyInputSubject;\r\n  }\r\n\r\n  get keyEventInput(): Observable<{key: string; domEvent: KeyboardEvent;}> {\r\n    return this.keyEventSubject;\r\n  }\r\n\r\n  get underlying(): Terminal {\r\n    return this.term;\r\n  }\r\n\r\n  get isDraggableOnEdgeActivated() {\r\n    return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\r\n  }\r\n\r\n  /**\r\n   * After user coordinate dimensions of terminal, it's called.\r\n   * @param left \r\n   * @param top \r\n   * @param width \r\n   * @param height \r\n   */\r\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\r\n    this.setTerminalDimensions(left, top, width, height);\r\n  }\r\n\r\n  /**\r\n   * Before onResizeEnd is called, it valiates dimensions to change.\r\n   * @param re dimension to be submitted from resizable stuff\r\n   */\r\n  validatorFactory(): (re: ResizeEvent) => boolean {\r\n    const comp = this;\r\n    return (re: ResizeEvent) =>{ \r\n      const displayOption = comp.displayOption;\r\n      if(displayOption.activateDraggableOnEdge){\r\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\r\n        if ((width < displayOption.activateDraggableOnEdge.minWidth) || (height < displayOption.activateDraggableOnEdge.minHeight)) {\r\n          return false;\r\n        } else return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'global-style',\r\n  templateUrl: './global-style.component.html',\r\n  styleUrls: ['../../../../../node_modules/xterm/css/xterm.css'],  //global styles\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GlobalStyleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgTerminalComponent } from './ng-terminal.component';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { GlobalStyleComponent } from './global-style/global-style.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\r\n  imports: [\r\n    ResizableModule, CommonModule\r\n  ],\r\n  exports: [NgTerminalComponent]\r\n})\r\nexport class NgTerminalModule { }\r\n","/**\r\n *\r\n * It is a CSI sequences generator\r\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\r\n */\r\nlet CSI = '\\x9b'\r\nexport class FunctionsUsingCSI {\r\n    /**\r\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \r\n     * \r\n     * */\r\n    static insertBlank(count: number){\r\n        return `${CSI}${count}@`; \r\n    }\r\n    /**\r\n     *  CSI Ps SP @ */\r\n    /**\r\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \r\n     * \\x9b3A*/\r\n    static cursorUp(count: number){\r\n        return `${CSI}${count}A`;\r\n    }\r\n    /**\r\n     *  CSI Ps SP A */\r\n    /**\r\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\r\n     * \\x9b3B */\r\n    static cursorDown(count: number){\r\n        return `${CSI}${count}B`;\r\n    }\r\n    /**\r\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \r\n     * \\x9b3C */\r\n    static cursorForward(count: number){\r\n        return `${CSI}${count}C`;\r\n    }\r\n    /**\r\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \r\n     * \\x9b3D */\r\n    static cursorBackward(count: number){\r\n        return `${CSI}${count}D`;\r\n    }\r\n    /**\r\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \r\n     * \\x9b3E\r\n     * */\r\n    static cursorNextLine(count: number){\r\n        return `${CSI}${count}E`;\r\n    }\r\n    /**\r\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\r\n     * \\x9b3F\r\n     *  */\r\n    static cursorPrecedingLine(count: number){\r\n        return `${CSI}${count}F`;\r\n    }\r\n    /**\r\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\r\n     *  \\x9b9G\r\n     *  */\r\n    static cursorColumn(count: number){\r\n        return `${CSI}${count}G`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\r\n     * \\x9b2;2H\r\n     * */\r\n    static cursorPosition(row: number, col: number){\r\n        return `${CSI}${row};${col}H`;\r\n    }\r\n    /**\r\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\r\n    /**\r\n     *  CSI Ps J  Erase in Display (ED), VT100.\r\n     *      Ps = 0  -> Erase Below (default).\r\n     *      Ps = 1  -> Erase Above.\r\n     *      Ps = 2  -> Erase All.\r\n     *      Ps = 3  -> Erase Saved Lines (xterm).\r\n     * \\x9b2J\r\n     *  */\r\n    static eraseInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}${category}J`;\r\n    }\r\n\r\n    /**\r\n     *  CSI ? Ps J\r\n     *  Erase in Display (DECSED), VT220.\r\n     *    Ps = 0  -> Selective Erase Below (default).\r\n     *    Ps = 1  -> Selective Erase Above.\r\n     *    Ps = 2  -> Selective Erase All.\r\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\r\n     * \\x9b?2J \r\n     * */\r\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}?${category}J`;\r\n    }\r\n    /**\r\n     *  CSI Ps K  \r\n     *   Erase in Line (EL), VT100.\r\n     *     Ps = 0  -> Erase to Right (default).\r\n     *     Ps = 1  -> Erase to Left.\r\n     *     Ps = 2  -> Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseInLine(category: KindOfEraseInLine){\r\n        return `${CSI}${category}K`;\r\n    }\r\n    /**\r\n     *  CSI ? Ps K \r\n     *    Erase in Line (DECSEL), VT220.\r\n     *      Ps = 0  -> Selective Erase to Right (default).\r\n     *      Ps = 1  -> Selective Erase to Left.\r\n     *      Ps = 2  -> Selective Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\r\n        return `${CSI}?${category}K`;\r\n    }\r\n    /**\r\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\r\n     * \\x9b2L\r\n     *  */\r\n    static insertLines(count: number){\r\n        return `${CSI}${count}L`;\r\n    }\r\n    /**\r\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\r\n     * \\x9b2M\r\n     *  */\r\n    static deleteLines(count: number){\r\n        return `${CSI}${count}M`;\r\n    }\r\n    /**\r\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\r\n     * \\x9b2P\r\n     *  */\r\n    static deleteCharacter(count: number){\r\n        return `${CSI}${count}P`;\r\n    }\r\n    /**\r\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\r\n     * \\x9b2S\r\n     *  */\r\n    static scrollUpLines(count: number){\r\n        return `${CSI}${count}S`;\r\n    }\r\n    /**\r\n     *  CSI ? Pi ; Pa ; Pv S */\r\n    /**\r\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \r\n     * \\x9b2T\r\n     * */\r\n    static scrollDownLines(count: number){\r\n        return `${CSI}${count}T`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\r\n    /**\r\n     *  CSI > Ps ; Ps T */\r\n    /**\r\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\r\n     * \\x9b2X\r\n     *  */\r\n    static eraseCharacters(count: number){\r\n        return `${CSI}${count}X`;\r\n    }\r\n    /**\r\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\r\n    /**\r\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\r\n    /**\r\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\r\n    /**\r\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\r\n    /**\r\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\r\n    /**\r\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\r\n    /**\r\n     *  CSI = Ps c */\r\n    /**\r\n     *  CSI > Ps c */\r\n    /**\r\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\r\n    /**\r\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\r\n    /**\r\n     *  CSI Ps ; Ps f */\r\n    /**\r\n     *  CSI Ps g  Tab Clear (TBC). */\r\n    /**\r\n     *  CSI Pm h  Set Mode (SM). */\r\n    /**\r\n     *  CSI ? Pm h */\r\n    /**\r\n     *  CSI Pm i  Media Copy (MC). */\r\n    /**\r\n     *  CSI ? Pm i */\r\n    /**\r\n     *  CSI Pm l  Reset Mode (RM). */\r\n    /**\r\n     *  CSI ? Pm l */\r\n    /**\r\n     *  CSI Pm m  Character Attributes (SGR). */\r\n    /**\r\n     *  CSI > Ps ; Ps m */\r\n    /**\r\n     *  CSI Ps n  Device Status Report (DSR). */\r\n    /**\r\n     *  CSI > Ps n */\r\n    /**\r\n     *  CSI ? Ps n */\r\n    /**\r\n     *  CSI > Ps p */\r\n    /**\r\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\r\n    /**\r\n     *  CSI Ps ; Ps \" p */\r\n    /**\r\n     *  CSI Ps $ p */\r\n    /**\r\n     *  CSI ? Ps $ p */\r\n    /**\r\n     *  CSI # p */\r\n    /**\r\n     *  CSI Ps ; Ps # p */\r\n    /**\r\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\r\n    /**\r\n     *  CSI Ps SP q */\r\n    /**\r\n     *  CSI Ps \" q */\r\n    /**\r\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\r\n    /**\r\n     *  CSI Ps ; Ps r */\r\n    /**\r\n     *  CSI ? Pm r */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\r\n    /**\r\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\r\n    /**\r\n     *  CSI Pl ; Pr s */\r\n    /**\r\n     *  CSI ? Pm s */\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps t */\r\n    /**\r\n     *  CSI > Ps ; Ps t */\r\n    /**\r\n     *  CSI Ps SP t */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\r\n    /**\r\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\r\n    /**\r\n     *  CSI Ps SP u */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\r\n    /**\r\n     *  CSI Ps $ w */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\r\n    /**\r\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\r\n    /**\r\n     *  CSI Ps * x */\r\n    /**\r\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\r\n    /**\r\n     *  CSI Ps # y */\r\n    /**\r\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\r\n    /**\r\n     *  CSI Ps ; Pu ' z */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\r\n    /**\r\n     *  CSI Pm ' { */\r\n    /**\r\n     *  CSI # { */\r\n    /**\r\n     *  CSI Ps ; Ps # { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\r\n    /**\r\n     *  CSI Ps $ | */\r\n    /**\r\n     *  CSI Ps ' | */\r\n    /**\r\n     *  CSI Ps * | */\r\n    /**\r\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\r\n    /**\r\n     *  CSI Pm ' } */\r\n    /**\r\n     *  CSI Pm ' ~ */\r\n}\r\nexport enum KindOfEraseInDisplay{\r\n    Below=0, Above=1, All=2, SavedLines=3\r\n}\r\nexport enum KindOfEraseInLine{\r\n    Right=0, Left=1, All=2\r\n}","import { Subscription, Observable } from 'rxjs';\r\nimport { Terminal } from 'xterm';\r\nimport { DisplayOption } from './display-option';\r\n\r\nexport interface NgTerminal {\r\n    /**\r\n     * write print charactors or control sequences to the xterm directly\r\n     * @param chars charactors to write\r\n     */\r\n    write(chars: string)\r\n    /**\r\n     * getter only provided\r\n     * A observable to emit printable characters when a user typed on the div for the xterm\r\n     * @deprecated since version 2.1.0\r\n     */\r\n    readonly keyInput: Observable<string>\r\n    \r\n    /**\r\n     * getter only provided\r\n     * A observable to emit keys and keyboard event when a user typed on the div for the xterm\r\n     */\r\n    readonly keyEventInput: Observable<{key: string; domEvent: KeyboardEvent;}>\r\n    /**\r\n     * getter only provided\r\n     * return the core object of the terminal where you can control everything directly\r\n     */\r\n    readonly underlying: Terminal\r\n    /**\r\n     * change row, col, draggable\r\n     */\r\n    setDisplayOption(opt: DisplayOption): void\r\n    \r\n    setStyle(styleObject: any): void;\r\n}\r\n","/**\r\n * options for dimensions of terminal.\r\n * fixedGrid has high priority than activateDraggableOnEdge's\r\n */\r\nexport interface DisplayOption{\r\n    fixedGrid?: {rows: number, cols: number};\r\n    activateDraggableOnEdge?: {\r\n        minWidth: number,\r\n        minHeight: number\r\n    }\r\n}"],"names":[],"mappings":"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"}