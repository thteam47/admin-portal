{"version":3,"file":"ng-terminal.js","sources":["ng-terminal/lib/ng-terminal.service.ts","ng-terminal/lib/ng-terminal.component.ts","ng-terminal/lib/global-style/global-style.component.ts","ng-terminal/lib/ng-terminal.module.ts","ng-terminal/lib/functions-using-csi.ts","ng-terminal/lib/ng-terminal.ts","ng-terminal/lib/display-option.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NgTerminalService {\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Component, OnInit, AfterViewChecked, ViewChild, ElementRef, Input, Output, EventEmitter, OnDestroy, AfterViewInit } from '@angular/core';\r\nimport { Terminal } from 'xterm';\r\nimport { FitAddon } from 'xterm-addon-fit';\r\nimport { NgTerminal } from './ng-terminal';\r\nimport { Subject, Observable, Subscription, combineLatest, ObjectUnsubscribedError } from 'rxjs';\r\nimport { DisplayOption } from './display-option';\r\nimport { ResizeEvent } from 'angular-resizable-element';\r\n\r\n@Component({\r\n  selector: 'ng-terminal',\r\n  templateUrl: './ng-terminal.component.html',\r\n  styleUrls: ['./ng-terminal.component.css']\r\n})\r\nexport class NgTerminalComponent implements OnInit, AfterViewInit, AfterViewChecked, NgTerminal, OnDestroy {\r\n  private term: Terminal;\r\n  private fitAddon: FitAddon;\r\n  private keyInputSubject: Subject<string> = new Subject<string>();\r\n  private keyEventSubject = new Subject<{key: string; domEvent: KeyboardEvent;}>();\r\n  private termSnippetSubject = new Subject<()=>void>();\r\n  private afterViewInitSubject = new Subject<void>();\r\n  \r\n  private keyInputSubjectSubscription: Subscription;\r\n  private keyEventSubjectSubscription: Subscription;\r\n  private termSnippetSubscription: Subscription;\r\n  private h = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n  private displayOption: DisplayOption = {};\r\n  private dataSource: Observable<string>;\r\n  private dataSourceSubscription: Subscription;\r\n  terminalStyle: object = {};\r\n\r\n  @Input('dataSource')\r\n  set _dataSource(ds) {\r\n    if(this.dataSourceSubscription != null){\r\n      this.dataSourceSubscription.unsubscribe();\r\n    }\r\n    this.dataSource = ds;\r\n    this.dataSourceSubscription = this.dataSource.subscribe((data) => {\r\n      this.write(data);\r\n    })\r\n  }\r\n  get _dataSource() {\r\n    return this.dataSource;\r\n  }\r\n\r\n  @Input('displayOption')\r\n  set _displayOption(opt: DisplayOption){\r\n    this.setDisplayOption(opt);\r\n  }\r\n\r\n  @Input('style')\r\n  set _style(opt: any){\r\n    this.setStyle(opt);\r\n  }\r\n\r\n  @Output('keyInput')\r\n  keyInputEmitter  = new EventEmitter<string>();\r\n\r\n  @Output('keyEvent')\r\n  keyEventEmitter  = new EventEmitter<{key: string; domEvent: KeyboardEvent;}>();\r\n\r\n  @ViewChild('terminal', { static: true }) \r\n  terminalDiv: ElementRef;\r\n\r\n  constructor() { \r\n    this.termSnippetSubscription = combineLatest(this.termSnippetSubject, this.afterViewInitSubject).subscribe(([snippet]) => {\r\n      snippet();\r\n    });\r\n  }\r\n\r\n  private observableSetup(){\r\n    this.term.onData((input) => {\r\n      this.keyInputSubject.next(input);\r\n    });\r\n    this.term.onKey(e => {\r\n      this.keyEventSubject.next(e);\r\n    })\r\n    this.keyInputSubjectSubscription = this.keyInputSubject.subscribe((data) => {\r\n      this.keyInputEmitter.emit(data);\r\n    })\r\n    this.keyEventSubjectSubscription = this.keyEventSubject.subscribe((e) => {\r\n      this.keyEventEmitter.emit(e);\r\n    });\r\n    this.afterViewInitSubject.next();\r\n  }\r\n\r\n  /**\r\n   * set block or inline-block to #terminal for fitting client or outer element\r\n   */\r\n  private setTerminalBlock(isBlock: boolean){\r\n    if(isBlock)\r\n      this.terminalStyle['display'] = 'block';\r\n    else\r\n      this.terminalStyle['display'] = 'inline-block';\r\n  }\r\n\r\n  /**\r\n   * set dimensions\r\n   */\r\n  private setTerminalDimensions(left: number, top: number, width: number, height: number) {\r\n    this.terminalStyle['left'] = left ? `${left}px` : undefined;\r\n    this.terminalStyle['top'] = top ? `${top}px` : undefined;\r\n    this.terminalStyle['width'] = width ? `${width}px` : undefined;\r\n    this.terminalStyle['height'] = height ? `${height}px` : undefined;\r\n  }\r\n  \r\n  /**\r\n   * remove dimensions\r\n   */\r\n  private removeTerminalDimensions(){\r\n    this.terminalStyle['left'] = undefined;\r\n    this.terminalStyle['top'] = undefined;\r\n    this.terminalStyle['width'] = undefined;\r\n    this.terminalStyle['height'] = undefined;\r\n  }\r\n\r\n  setStyle(styleObject: any){\r\n    Object.assign(this.terminalStyle, styleObject);\r\n  }\r\n\r\n  ngOnInit(){\r\n  }\r\n\r\n  /**\r\n   * When a dimension of div changes, fit a terminal in div.\r\n   */\r\n  ngAfterViewChecked() {\r\n    let dims = this.fitAddon.proposeDimensions();\r\n    if(dims === undefined || isNaN(dims.rows) || dims.rows == Infinity || isNaN(dims.cols) || dims.cols == Infinity){\r\n      this.term.resize(10, 10);\r\n    }else if(!this.displayOption.fixedGrid){\r\n      this.fitAddon.fit();\r\n    }else{\r\n      this.term.resize(this.displayOption.fixedGrid.cols, this.displayOption.fixedGrid.rows);\r\n      let xtermScreen = this.term.element.getElementsByClassName('xterm-screen')[0];\r\n      let scrollArea = this.term.element.getElementsByClassName('xterm-scroll-area')[0];\r\n      let terminal = this.term.element;\r\n      const contentWidth = xtermScreen.clientWidth;\r\n      const scrollWidth = terminal.clientWidth - scrollArea.clientWidth;\r\n      this.setTerminalDimensions(undefined, undefined, contentWidth + scrollWidth, undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * It creates new terminal in #terminal.\r\n   */\r\n  ngAfterViewInit() {\r\n    this.fitAddon = new FitAddon();\r\n    this.term = new Terminal();\r\n    this.term.open(this.terminalDiv.nativeElement);\r\n    this.term.loadAddon(this.fitAddon);\r\n    this.observableSetup();\r\n  }\r\n\r\n  /**\r\n   * clean all resources\r\n   */\r\n  ngOnDestroy(): void {\r\n    if(this.keyInputSubjectSubscription)\r\n      this.keyInputSubjectSubscription.unsubscribe();\r\n    if(this.dataSourceSubscription)\r\n      this.dataSourceSubscription.unsubscribe();\r\n    if(this.keyEventSubjectSubscription)\r\n      this.keyEventSubjectSubscription.unsubscribe();\r\n    if(this.termSnippetSubscription)\r\n    this.termSnippetSubscription.unsubscribe();\r\n    if(this.term)\r\n      this.term.dispose();\r\n  }\r\n\r\n  write(chars: string) {\r\n    this.term.write(chars);\r\n  }\r\n\r\n  setDisplayOption(opt: DisplayOption) {\r\n    if (opt) {\r\n      if (opt.fixedGrid != null) {\r\n        console.debug(\"resizable will be ignored.\");\r\n        this.setTerminalBlock(false);\r\n        this.removeTerminalDimensions();\r\n      } else {\r\n        this.setTerminalBlock(true);\r\n      }\r\n      this.displayOption = opt;\r\n    } else\r\n      console.warn(`A falsy option is not allowed`);\r\n  }\r\n\r\n  get keyInput(): Observable<string> {\r\n    return this.keyInputSubject;\r\n  }\r\n\r\n  get keyEventInput(): Observable<{key: string; domEvent: KeyboardEvent;}> {\r\n    return this.keyEventSubject;\r\n  }\r\n\r\n  get underlying(): Terminal {\r\n    return this.term;\r\n  }\r\n\r\n  get isDraggableOnEdgeActivated() {\r\n    return this.displayOption.activateDraggableOnEdge != undefined && this.displayOption.fixedGrid == undefined;\r\n  }\r\n\r\n  /**\r\n   * After user coordinate dimensions of terminal, it's called.\r\n   * @param left \r\n   * @param top \r\n   * @param width \r\n   * @param height \r\n   */\r\n  onResizeEnd(left: number, top: number, width: number, height: number): void {\r\n    this.setTerminalDimensions(left, top, width, height);\r\n  }\r\n\r\n  /**\r\n   * Before onResizeEnd is called, it valiates dimensions to change.\r\n   * @param re dimension to be submitted from resizable stuff\r\n   */\r\n  validatorFactory(): (re: ResizeEvent) => boolean {\r\n    const comp = this;\r\n    return (re: ResizeEvent) =>{ \r\n      const displayOption = comp.displayOption;\r\n      if(displayOption.activateDraggableOnEdge){\r\n        let left = re.rectangle.left, top = re.rectangle.top, width = re.rectangle.width, height = re.rectangle.height;\r\n        if ((width < displayOption.activateDraggableOnEdge.minWidth) || (height < displayOption.activateDraggableOnEdge.minHeight)) {\r\n          return false;\r\n        } else return true;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'global-style',\r\n  templateUrl: './global-style.component.html',\r\n  styleUrls: ['../../../../../node_modules/xterm/css/xterm.css'],  //global styles\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class GlobalStyleComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { NgTerminalComponent } from './ng-terminal.component';\r\nimport { ResizableModule } from 'angular-resizable-element';\r\nimport { GlobalStyleComponent } from './global-style/global-style.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [NgTerminalComponent, GlobalStyleComponent],\r\n  imports: [\r\n    ResizableModule, CommonModule\r\n  ],\r\n  exports: [NgTerminalComponent]\r\n})\r\nexport class NgTerminalModule { }\r\n","/**\r\n *\r\n * It is a CSI sequences generator\r\n * https://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-Functions-using-CSI-_-ordered-by-the-final-character_s_\r\n */\r\nlet CSI = '\\x9b'\r\nexport class FunctionsUsingCSI {\r\n    /**\r\n     *  CSI Ps @  Insert Ps (Blank) Character(s) (default = 1) (ICH). \r\n     * \r\n     * */\r\n    static insertBlank(count: number){\r\n        return `${CSI}${count}@`; \r\n    }\r\n    /**\r\n     *  CSI Ps SP @ */\r\n    /**\r\n     *  CSI Ps A  Cursor Up Ps Times (default = 1) (CUU). \r\n     * \\x9b3A*/\r\n    static cursorUp(count: number){\r\n        return `${CSI}${count}A`;\r\n    }\r\n    /**\r\n     *  CSI Ps SP A */\r\n    /**\r\n     *  CSI Ps B  Cursor Down Ps Times (default = 1) (CUD).\r\n     * \\x9b3B */\r\n    static cursorDown(count: number){\r\n        return `${CSI}${count}B`;\r\n    }\r\n    /**\r\n     *  CSI Ps C  Cursor Forward Ps Times (default = 1) (CUF). \r\n     * \\x9b3C */\r\n    static cursorForward(count: number){\r\n        return `${CSI}${count}C`;\r\n    }\r\n    /**\r\n     *  CSI Ps D  Cursor Backward Ps Times (default = 1) (CUB). \r\n     * \\x9b3D */\r\n    static cursorBackward(count: number){\r\n        return `${CSI}${count}D`;\r\n    }\r\n    /**\r\n     *  CSI Ps E  Cursor Next Line Ps Times (default = 1) (CNL). \r\n     * \\x9b3E\r\n     * */\r\n    static cursorNextLine(count: number){\r\n        return `${CSI}${count}E`;\r\n    }\r\n    /**\r\n     *  CSI Ps F  Cursor Preceding Line Ps Times (default = 1) (CPL).\r\n     * \\x9b3F\r\n     *  */\r\n    static cursorPrecedingLine(count: number){\r\n        return `${CSI}${count}F`;\r\n    }\r\n    /**\r\n     *  CSI Ps G  Cursor Character Absolute  [column] (default = [row,1]) (CHA).\r\n     *  \\x9b9G\r\n     *  */\r\n    static cursorColumn(count: number){\r\n        return `${CSI}${count}G`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps H  Cursor Position [row;column] (default = [1,1]) (CUP).\r\n     * \\x9b2;2H\r\n     * */\r\n    static cursorPosition(row: number, col: number){\r\n        return `${CSI}${row};${col}H`;\r\n    }\r\n    /**\r\n     *  CSI Ps I  Cursor Forward Tabulation Ps tab stops (default = 1) (CHT). */\r\n    /**\r\n     *  CSI Ps J  Erase in Display (ED), VT100.\r\n     *      Ps = 0  -> Erase Below (default).\r\n     *      Ps = 1  -> Erase Above.\r\n     *      Ps = 2  -> Erase All.\r\n     *      Ps = 3  -> Erase Saved Lines (xterm).\r\n     * \\x9b2J\r\n     *  */\r\n    static eraseInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}${category}J`;\r\n    }\r\n\r\n    /**\r\n     *  CSI ? Ps J\r\n     *  Erase in Display (DECSED), VT220.\r\n     *    Ps = 0  -> Selective Erase Below (default).\r\n     *    Ps = 1  -> Selective Erase Above.\r\n     *    Ps = 2  -> Selective Erase All.\r\n     *    Ps = 3  -> Selective Erase Saved Lines (xterm).\r\n     * \\x9b?2J \r\n     * */\r\n    static eraseSelectiveThingsInDisplay(category: KindOfEraseInDisplay){\r\n        return `${CSI}?${category}J`;\r\n    }\r\n    /**\r\n     *  CSI Ps K  \r\n     *   Erase in Line (EL), VT100.\r\n     *     Ps = 0  -> Erase to Right (default).\r\n     *     Ps = 1  -> Erase to Left.\r\n     *     Ps = 2  -> Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseInLine(category: KindOfEraseInLine){\r\n        return `${CSI}${category}K`;\r\n    }\r\n    /**\r\n     *  CSI ? Ps K \r\n     *    Erase in Line (DECSEL), VT220.\r\n     *      Ps = 0  -> Selective Erase to Right (default).\r\n     *      Ps = 1  -> Selective Erase to Left.\r\n     *      Ps = 2  -> Selective Erase All.\r\n     * \\x9b?1K\r\n     * */\r\n    static eraseSelectiveThingsInLine(category: KindOfEraseInLine){\r\n        return `${CSI}?${category}K`;\r\n    }\r\n    /**\r\n     *  CSI Ps L  Insert Ps Line(s) (default = 1) (IL).\r\n     * \\x9b2L\r\n     *  */\r\n    static insertLines(count: number){\r\n        return `${CSI}${count}L`;\r\n    }\r\n    /**\r\n     *  CSI Ps M  Delete Ps Line(s) (default = 1) (DL).\r\n     * \\x9b2M\r\n     *  */\r\n    static deleteLines(count: number){\r\n        return `${CSI}${count}M`;\r\n    }\r\n    /**\r\n     *  CSI Ps P  Delete Ps Character(s) (default = 1) (DCH).\r\n     * \\x9b2P\r\n     *  */\r\n    static deleteCharacter(count: number){\r\n        return `${CSI}${count}P`;\r\n    }\r\n    /**\r\n     *  CSI Ps S  Scroll up Ps lines (default = 1) (SU), VT420, ECMA-48.\r\n     * \\x9b2S\r\n     *  */\r\n    static scrollUpLines(count: number){\r\n        return `${CSI}${count}S`;\r\n    }\r\n    /**\r\n     *  CSI ? Pi ; Pa ; Pv S */\r\n    /**\r\n     *  CSI Ps T  Scroll down Ps lines (default = 1) (SD), VT420. \r\n     * \\x9b2T\r\n     * */\r\n    static scrollDownLines(count: number){\r\n        return `${CSI}${count}T`;\r\n    }\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps ; Ps ; Ps T */\r\n    /**\r\n     *  CSI > Ps ; Ps T */\r\n    /**\r\n     *  CSI Ps X  Erase Ps Character(s) (default = 1) (ECH).\r\n     * \\x9b2X\r\n     *  */\r\n    static eraseCharacters(count: number){\r\n        return `${CSI}${count}X`;\r\n    }\r\n    /**\r\n     *  CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT). */\r\n    /**\r\n     *  CSI Ps ^  Scroll down Ps lines (default = 1) (SD), ECMA-48. */\r\n    /**\r\n     *  CSI Pm `  Character Position Absolute  [column] (default = [row,1]) */\r\n    /**\r\n     *  CSI Pm a  Character Position Relative  [columns] (default = [row,col+1]) */\r\n    /**\r\n     *  CSI Ps b  Repeat the preceding graphic character Ps times (REP). */\r\n    /**\r\n     *  CSI Ps c  Send Device Attributes (Primary DA). */\r\n    /**\r\n     *  CSI = Ps c */\r\n    /**\r\n     *  CSI > Ps c */\r\n    /**\r\n     *  CSI Pm d  Line Position Absolute  [row] (default = [1,column]) (VPA). */\r\n    /**\r\n     *  CSI Pm e  Line Position Relative  [rows] (default = [row+1,column]) */\r\n    /**\r\n     *  CSI Ps ; Ps f */\r\n    /**\r\n     *  CSI Ps g  Tab Clear (TBC). */\r\n    /**\r\n     *  CSI Pm h  Set Mode (SM). */\r\n    /**\r\n     *  CSI ? Pm h */\r\n    /**\r\n     *  CSI Pm i  Media Copy (MC). */\r\n    /**\r\n     *  CSI ? Pm i */\r\n    /**\r\n     *  CSI Pm l  Reset Mode (RM). */\r\n    /**\r\n     *  CSI ? Pm l */\r\n    /**\r\n     *  CSI Pm m  Character Attributes (SGR). */\r\n    /**\r\n     *  CSI > Ps ; Ps m */\r\n    /**\r\n     *  CSI Ps n  Device Status Report (DSR). */\r\n    /**\r\n     *  CSI > Ps n */\r\n    /**\r\n     *  CSI ? Ps n */\r\n    /**\r\n     *  CSI > Ps p */\r\n    /**\r\n     *  CSI ! p   Soft terminal reset (DECSTR), VT220 and up. */\r\n    /**\r\n     *  CSI Ps ; Ps \" p */\r\n    /**\r\n     *  CSI Ps $ p */\r\n    /**\r\n     *  CSI ? Ps $ p */\r\n    /**\r\n     *  CSI # p */\r\n    /**\r\n     *  CSI Ps ; Ps # p */\r\n    /**\r\n     *  CSI Ps q  Load LEDs (DECLL), VT100. */\r\n    /**\r\n     *  CSI Ps SP q */\r\n    /**\r\n     *  CSI Ps \" q */\r\n    /**\r\n     *  CSI # q   Pop video attributes from stack (XTPOPSGR), xterm.  This is an */\r\n    /**\r\n     *  CSI Ps ; Ps r */\r\n    /**\r\n     *  CSI ? Pm r */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ r */\r\n    /**\r\n     *  CSI s     Save cursor, available only when DECLRMM is disabled (SCOSC, */\r\n    /**\r\n     *  CSI Pl ; Pr s */\r\n    /**\r\n     *  CSI ? Pm s */\r\n    /**\r\n     *  CSI Ps ; Ps ; Ps t */\r\n    /**\r\n     *  CSI > Ps ; Ps t */\r\n    /**\r\n     *  CSI Ps SP t */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Ps $ t */\r\n    /**\r\n     *  CSI u     Restore cursor (SCORC, also ANSI.SYS). */\r\n    /**\r\n     *  CSI Ps SP u */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ; Pp ; Pt ; Pl ; Pp $ v */\r\n    /**\r\n     *  CSI Ps $ w */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr ' w */\r\n    /**\r\n     *  CSI Ps x  Request Terminal Parameters (DECREQTPARM). */\r\n    /**\r\n     *  CSI Ps * x */\r\n    /**\r\n     *  CSI Pc ; Pt ; Pl ; Pb ; Pr $ x */\r\n    /**\r\n     *  CSI Ps # y */\r\n    /**\r\n     *  CSI Pi ; Pg ; Pt ; Pl ; Pb ; Pr * y */\r\n    /**\r\n     *  CSI Ps ; Pu ' z */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ z */\r\n    /**\r\n     *  CSI Pm ' { */\r\n    /**\r\n     *  CSI # { */\r\n    /**\r\n     *  CSI Ps ; Ps # { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr $ { */\r\n    /**\r\n     *  CSI Pt ; Pl ; Pb ; Pr # | */\r\n    /**\r\n     *  CSI Ps $ | */\r\n    /**\r\n     *  CSI Ps ' | */\r\n    /**\r\n     *  CSI Ps * | */\r\n    /**\r\n     *  CSI # }   Pop video attributes from stack (XTPOPSGR), xterm.  Popping */\r\n    /**\r\n     *  CSI Pm ' } */\r\n    /**\r\n     *  CSI Pm ' ~ */\r\n}\r\nexport enum KindOfEraseInDisplay{\r\n    Below=0, Above=1, All=2, SavedLines=3\r\n}\r\nexport enum KindOfEraseInLine{\r\n    Right=0, Left=1, All=2\r\n}","import { Subscription, Observable } from 'rxjs';\r\nimport { Terminal } from 'xterm';\r\nimport { DisplayOption } from './display-option';\r\n\r\nexport interface NgTerminal {\r\n    /**\r\n     * write print charactors or control sequences to the xterm directly\r\n     * @param chars charactors to write\r\n     */\r\n    write(chars: string)\r\n    /**\r\n     * getter only provided\r\n     * A observable to emit printable characters when a user typed on the div for the xterm\r\n     * @deprecated since version 2.1.0\r\n     */\r\n    readonly keyInput: Observable<string>\r\n    \r\n    /**\r\n     * getter only provided\r\n     * A observable to emit keys and keyboard event when a user typed on the div for the xterm\r\n     */\r\n    readonly keyEventInput: Observable<{key: string; domEvent: KeyboardEvent;}>\r\n    /**\r\n     * getter only provided\r\n     * return the core object of the terminal where you can control everything directly\r\n     */\r\n    readonly underlying: Terminal\r\n    /**\r\n     * change row, col, draggable\r\n     */\r\n    setDisplayOption(opt: DisplayOption): void\r\n    \r\n    setStyle(styleObject: any): void;\r\n}\r\n","/**\r\n * options for dimensions of terminal.\r\n * fixedGrid has high priority than activateDraggableOnEdge's\r\n */\r\nexport interface DisplayOption{\r\n    fixedGrid?: {rows: number, cols: number};\r\n    activateDraggableOnEdge?: {\r\n        minWidth: number,\r\n        minHeight: number\r\n    }\r\n}"]}